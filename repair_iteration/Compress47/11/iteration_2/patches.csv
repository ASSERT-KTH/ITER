bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(encoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(encoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(encoding,  inputStream);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
2	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZIPEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZIPEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZIPEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
3	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(zipEncoding,  inputStream);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
4	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  encoding,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  encoding,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  encoding,  zipEncoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
5	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(ENCODING,  inputStream);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
6	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_RANGE  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_RANGE  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_RANGE  +  1;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_RANGE;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
7	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  crc);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
8	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32,  crc);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32,  crc);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
9	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(crc,  inputStream);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(crc,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(crc,  inputStream);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
10	[BUG]  [BUGGY]  this.entry  =  new  CRCArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  CRCArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  CRCArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
11	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(CRC32,  inputStream);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(CRC32,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(CRC32,  inputStream);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
12	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  1);	  this.entry    =    new    ZipInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
13	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  +  1);	  this.entry    =    new    ZipInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
14	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  2);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  2);	  this.entry    =    new    ZipInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
15	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  4);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  4);	  this.entry    =    new    ZipInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
16	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  1,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  1,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  1,  inputStream.length);	  this.entry    =    new    ZipInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
17	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  +  2);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  +  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  +  2);	  this.entry    =    new    ZipInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
18	[BUG]  [BUGGY]  encoding  =  zipEncoding.getZipEncoding();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getZipEncoding();	  encoding    =    ZipEncodingHelper.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
19	[BUG]  [BUGGY]  encoding  =  zipEncodingHelper.getZipEncoding();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncodingHelper.getZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncodingHelper.getZipEncoding();	  encoding    =    ZipEncodingHelper.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
20	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream();	  encoding    =    ZipEncodingHelper.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
21	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  0,  inputStream.length);	  this.entry    =    in;    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
22	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  zipEncoding;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).readLine()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
23	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  outputStream;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  outputStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).readLine()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
24	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  InputStream.toByteArray();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  InputStream.toByteArray();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  InputStream.toByteArray();	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).readLine()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
25	[BUG]  [BUGGY]  this.encoding  =  inputStream.getChars(0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getChars(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getChars(0);	  this.encoding    =    inputStream.getChars(0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
26	[BUG]  [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  -  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getChars(0,  inputStream.length  -  1);	  this.encoding    =    inputStream.getChars(0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
27	[BUG]  [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getChars(0,  inputStream.length  +  1);	  this.encoding    =    inputStream.getChars(0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
28	[BUG]  [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  -  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  -  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getChars(0,  inputStream.length  -  2);	  this.encoding    =    inputStream.getChars(0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
29	[BUG]  [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  -  4);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  -  4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getChars(0,  inputStream.length  -  4);	  this.encoding    =    inputStream.getChars(0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
30	[BUG]  [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  +  2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  +  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getChars(0,  inputStream.length  +  2);	  this.encoding    =    inputStream.getChars(0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
31	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  false);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
32	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  null);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
33	[BUG]  [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncodingHelper.getInputStream(inputStream,  false);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
34	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  true,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  true,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  true,  false);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
35	[BUG]  [BUGGY]  encoding  =  ZIPEncodingHelper.getInputStream(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZIPEncodingHelper.getInputStream(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZIPEncodingHelper.getInputStream(inputStream,  false);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
36	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in,  inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(in,  inputStream);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
37	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(in);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
38	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(in,  zipEncoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
39	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in,  in);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(in,  in);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
40	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in,  outputStream);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in,  outputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(in,  outputStream);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
41	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in,  encoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(in,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(in,  encoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
42	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(in,  inputStream);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(in,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(in,  inputStream);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
43	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  1;	  this.zipEncoding    =    ZIPEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
44	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING,  inputStream);	  this.zipEncoding    =    ZIPEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
45	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  1;	  encoding    =    ZipEncodingHelper.UTF8_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
46	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream.length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream.length;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream.length;	  encoding    =    ZipEncodingHelper.UTF8_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
47	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream.toString();	  encoding    =    ZipEncodingHelper.UTF8_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
48	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(zipEncoding,  inputStream);	  this.entry    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
49	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
50	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  zipEncodingHelper.UTF8);	  this.entry    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
51	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US_ASCII);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US_ASCII);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US_ASCII);	  this.entry    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
52	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;	  this.entry    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
53	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inf,  inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inf,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inf,  inputStream);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
54	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inf,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inf,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inf,  zipEncoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
55	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  inf,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  inf,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  inf,  zipEncoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
56	[BUG]  [BUGGY]  this.in  =  InputStream.fromInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  InputStream.fromInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  InputStream.fromInputStream(inputStream,  ZipEncodingHelper.UTF8);	  this.in    =    InputStream.fromInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
57	[BUG]  [BUGGY]  this.in  =  InputStream.fromInputStream(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  InputStream.fromInputStream(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  InputStream.fromInputStream(inputStream,  zipEncoding);	  this.in    =    InputStream.fromInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
58	[BUG]  [BUGGY]  this.in  =  inputStream.fromInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream.fromInputStream(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream.fromInputStream(inputStream);	  this.in    =    InputStream.fromInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
59	[BUG]  [BUGGY]  this.in  =  inputStream.fromInputStream();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream.fromInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream.fromInputStream();	  this.in    =    InputStream.fromInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
60	[BUG]  [BUGGY]  this.in  =  InputStream.fromInputStream(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  InputStream.fromInputStream(inputStream,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  InputStream.fromInputStream(inputStream,  0,  inputStream.length);	  this.in    =    InputStream.fromInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
61	[BUG]  [BUGGY]  this.in  =  ZipArchiveInputStream.fromInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  ZipArchiveInputStream.fromInputStream(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  ZipArchiveInputStream.fromInputStream(inputStream);	  this.in    =    InputStream.fromInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
62	[BUG]  [BUGGY]  this.entry  =  zipEncoding,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  zipEncoding,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  zipEncoding,  ZipEncodingHelper.UTF8);	  this.entry    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
63	[BUG]  [BUGGY]  this.entry  =  entryStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entryStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entryStream,  ZipEncodingHelper.UTF8);	  this.entry    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
64	[BUG]  [BUGGY]  this.entry  =  ZipEncodingHelper.UTF8;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  ZipEncodingHelper.UTF8;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  ZipEncodingHelper.UTF8;	  this.entry    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
65	[BUG]  [BUGGY]  this.entry  =  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  ZipEncodingHelper.UTF8);	  this.entry    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
66	[BUG]  [BUGGY]  this.entry  =  inputStream,  zipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  inputStream,  zipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  inputStream,  zipEncodingHelper.UTF8);	  this.entry    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
67	[BUG]  [BUGGY]  this.entry  =  in,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  in,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  in,  ZipEncodingHelper.UTF8);	  this.entry    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
68	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  crc);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
69	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zip);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zip);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zip);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
70	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipBuffer);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipBuffer);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipBuffer);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
71	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipFile);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipFile);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipFile);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
72	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  inputStream.length);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
73	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  true);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    false);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
74	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false,  true);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    false);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
75	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  null);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    false);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
76	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false,  encoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    false);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
77	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(inputStream,  true);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    false);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
78	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  1);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
79	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  +  1);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
80	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  2);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
81	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(inputStream,  0,  zipEncoding.length);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(inputStream,  0,  zipEncoding.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(inputStream,  0,  zipEncoding.length);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
82	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  4);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  4);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
83	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding,  0,  inputStream.length);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
84	[BUG]  [BUGGY]  this.in  =  zipEncoding,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  zipEncoding,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  zipEncoding,  ZipEncodingHelper.UTF8);	  this.in    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
85	[BUG]  [BUGGY]  this.in  =  inputStream,  ZipEncodingHelper.UTF8;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream,  ZipEncodingHelper.UTF8;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream,  ZipEncodingHelper.UTF8;	  this.in    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
86	[BUG]  [BUGGY]  this.in  =  inputStream,  zipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream,  zipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream,  zipEncodingHelper.UTF8);	  this.in    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
87	[BUG]  [BUGGY]  this.in  =  ZipEncodingHelper.UTF8;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  ZipEncodingHelper.UTF8;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  ZipEncodingHelper.UTF8;	  this.in    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
88	[BUG]  [BUGGY]  this.in  =  in,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  in,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  in,  ZipEncodingHelper.UTF8);	  this.in    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
89	[BUG]  [BUGGY]  this.in  =  outputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  outputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  outputStream,  ZipEncodingHelper.UTF8);	  this.in    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
90	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  false);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
91	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true,  false);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
92	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true,  encoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true,  encoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
93	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(inputStream,  false);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
94	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_0  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_0  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_0  +  inputStream.toString();	  encoding    =    ZipEncodingHelper.UTF8_0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
95	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_0  +  inputStream.getCharset();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_0  +  inputStream.getCharset();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_0  +  inputStream.getCharset();	  encoding    =    ZipEncodingHelper.UTF8_0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
96	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_1;	  encoding    =    ZipEncodingHelper.UTF8_0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
97	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_0  +  inputStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_0  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_0  +  inputStream;	  encoding    =    ZipEncodingHelper.UTF8_0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
98	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  zipEncoding;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)inputStream).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
99	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  inStream;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  inStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  inStream;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)inputStream).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
100	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  in;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  in;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  in;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)inputStream).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
101	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32,  crc);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32,  crc);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
102	[BUG]  [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getInputStream(inputStream,  CRC32);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
103	[BUG]  [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncodingHelper.getInputStream(inputStream,  crc);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
104	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
105	[BUG]  [BUGGY]  encoding  =  CRC32EncodingHelper.getInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  CRC32EncodingHelper.getInputStream(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  CRC32EncodingHelper.getInputStream(inputStream);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
106	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  zipEncoding;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getOutputFile()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
107	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  inStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  inStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  inStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getOutputFile()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
108	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  outputStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  outputStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getOutputFile()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
109	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  InputStream.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  InputStream.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  InputStream.encode(inputStream);	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getOutputFile()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
110	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  inStream;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  inStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  inStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
111	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  zipEncoding;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
112	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  outputStream;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  outputStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
113	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  InputStream.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  InputStream.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  InputStream.encode(inputStream);	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
114	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  false);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
115	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  null);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  null);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
116	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  true,  false);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  true,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  true,  false);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
117	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  0,  true);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  0,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  0,  true);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
118	[BUG]  [BUGGY]  this.encoding  =  zipEncoding.toUTF8();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  zipEncoding.toUTF8();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  zipEncoding.toUTF8();	  this.encoding    =    inputStream.toUTF8();    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
119	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUTF8()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toUTF8()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUTF8()  +  1;	  this.encoding    =    inputStream.toUTF8();    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
120	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding  +  inputStream;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding  +  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
121	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8_ENCODING;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8_ENCODING;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8_ENCODING;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
122	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.encode(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.encode(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.encode(ZipEncodingHelper.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
123	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toByteArray();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toByteArray();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toByteArray();	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
124	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.getCharset();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.getCharset();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.getCharset();	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
125	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding()  /  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding()  /  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding()  /  1;	  this.encoding    =    inputStream.getEncoding()    +    1;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
126	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding()  *  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding()  *  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding()  *  1;	  this.encoding    =    inputStream.getEncoding()    +    1;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
127	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding()  -  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding()  -  1;	  this.encoding    =    inputStream.getEncoding()    +    1;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
128	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  -  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  -  1);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
129	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  +  1);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
130	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  -  2);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  -  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  -  2);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
131	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  +  2);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  +  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  +  2);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
132	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  -  4);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  -  4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length  -  4);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
133	[BUG]  [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
134	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_UTF8);	  encoding    =    ZipEncodingHelper.ENCODING_UTF8;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
135	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_UTF8,  inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_UTF8,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_UTF8,  inputStream);	  encoding    =    ZipEncodingHelper.ENCODING_UTF8;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
136	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_UTF8  +  inputStream;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_UTF8  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_UTF8  +  inputStream;	  encoding    =    ZipEncodingHelper.ENCODING_UTF8;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
137	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  1;	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
138	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
139	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream.toString();	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
140	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream.getCharset();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream.getCharset();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream.getCharset();	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
141	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  encoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  encoding;	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
142	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding,  encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding,  encoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
143	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
144	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding,  crc);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding,  crc);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
145	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getZipEncoding(encoding);	  this.zipEncoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
146	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getZipEncoding(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getZipEncoding(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getZipEncoding(0);	  this.zipEncoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
147	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toZipEncoding();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toZipEncoding();	  this.zipEncoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
148	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getZipEncoding()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getZipEncoding()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getZipEncoding()  +  1;	  this.zipEncoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
149	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getZipEncoding(true);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getZipEncoding(true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getZipEncoding(true);	  this.zipEncoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
150	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCurrentZipEncoding();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCurrentZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCurrentZipEncoding();	  this.zipEncoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
151	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inf,  inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inf,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inf,  inputStream);	  this.entry    =    new    ZipInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
152	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inf,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inf,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inf,  zipEncoding);	  this.entry    =    new    ZipInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
153	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(int,  inputStream);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(int,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(int,  inputStream);	  this.entry    =    new    ZipInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
154	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  in;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  in;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  in;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)in).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
155	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  zipEncoding;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)in).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
156	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  outputStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  outputStream;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)in).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
157	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  inStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  inStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  inStream;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)in).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
158	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRECTION;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRECTION;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_STRECTION;	  encoding    =    ZipEncodingHelper.UTF8_STRING;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
159	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRING  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRING  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_STRING  +  1;	  encoding    =    ZipEncodingHelper.UTF8_STRING;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
160	[BUG]  [BUGGY]  encoding  =  inputStream.getChars(0,  inputStream.length()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getChars(0,  inputStream.length()  -  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getChars(0,  inputStream.length()  -  1);	  encoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
161	[BUG]  [BUGGY]  encoding  =  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toString();	  encoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
162	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(zipEncoding,  inputStream);	  this.in    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
163	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US_ASCII);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US_ASCII);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US_ASCII);	  this.in    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
164	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(ZipEncodingHelper.UTF8);	  this.in    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
165	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  zipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  zipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  zipEncodingHelper.UTF8);	  this.in    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
166	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;	  this.in    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
167	[BUG]  [BUGGY]  InputStream  in  =  inputStream.openStream();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.openStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.openStream();	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
168	[BUG]  [BUGGY]  InputStream  in  =  inputStream.readIn();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.readIn();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.readIn();	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
169	[BUG]  [BUGGY]  InputStream  in  =  this.inputStream.getInputStream();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  this.inputStream.getInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  this.inputStream.getInputStream();	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
170	[BUG]  [BUGGY]  InputStream  in  =  inputStream.getInputStream( "UTF-8 ");  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.getInputStream( "UTF-8 ");  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.getInputStream( "UTF-8 ");	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
171	[BUG]  [BUGGY]  InputStream  in  =  inputStream.readInputStream();  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.readInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.readInputStream();	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
172	[BUG]  [BUGGY]  InputStream  in  =  inputStream.inputStream();  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.inputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.inputStream();	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
173	[BUG]  [BUGGY]  encoding  =  inputStream.encode(crc);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(crc);	  encoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
174	[BUG]  [BUGGY]  encoding  =  CRC32.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  CRC32.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  CRC32.encode(inputStream);	  encoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
175	[BUG]  [BUGGY]  encoding  =  inputStream.encodeCrc(crec);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encodeCrc(crec);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encodeCrc(crec);	  encoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
176	[BUG]  [BUGGY]  encoding  =  crc.encode(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  crc.encode(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  crc.encode(inputStream,  ZipEncodingHelper.UTF8);	  encoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
177	[BUG]  [BUGGY]  encoding  =  crc.encode(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  crc.encode(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  crc.encode(inputStream,  zipEncoding);	  encoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
178	[BUG]  [BUGGY]  encoding  =  inputStream.encodeCrc(crc);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encodeCrc(crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encodeCrc(crc);	  encoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
179	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  zipEncoding);	  this.in    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
180	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZIPEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZIPEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  ZIPEncodingHelper.UTF8);	  this.in    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
181	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  encoding);	  this.in    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
182	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  CRC32);	  this.in    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
183	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  0,  inputStream.length);	  this.in    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
184	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  encoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding,  encoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
185	[BUG]  [BUGGY]  this.zipEncoding  =  encoding.encode(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  encoding.encode(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  encoding.encode(inputStream,  zipEncoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
186	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  CRC32);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
187	[BUG]  [BUGGY]  this.zipEncoding  =  crc.encode(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  crc.encode(inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  crc.encode(inputStream,  encoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
188	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ZIP_ENCODING;	  this.zipEncoding    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
189	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encodeZipEncoding();	  this.zipEncoding    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
190	[BUG]  [BUGGY]  encoding  =  inputStream.getZipEncoding(true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getZipEncoding(true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getZipEncoding(true);	  encoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
191	[BUG]  [BUGGY]  encoding  =  inputStream.getZipEncoding()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getZipEncoding()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getZipEncoding()  +  1;	  encoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
192	[BUG]  [BUGGY]  encoding  =  inputStream.getZipEncoding(0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getZipEncoding(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getZipEncoding(0);	  encoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
193	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  in);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING,  in);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
194	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  zipEncoding);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
195	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  crc);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
196	[BUG]  [BUGGY]  encoding  =  inputStream,  ZipEncodingHelper.ENCODING);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream,  ZipEncodingHelper.ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream,  ZipEncodingHelper.ENCODING);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
197	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  this);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  this);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
198	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  in);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  in);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
199	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  CRC32);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
200	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.DEFAULT_ZIP_ENCODING;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.DEFAULT_ZIP_ENCODING;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.DEFAULT_ZIP_ENCODING;	  this.zipEncoding    =    ZIPEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
201	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePosition()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePosition()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getAbsolutePosition()  +  1;	  this.zipEncoding    =    inputStream.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
202	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePosition()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePosition()  -  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getAbsolutePosition()  -  1;	  this.zipEncoding    =    inputStream.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
203	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32EncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  CRC32EncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  CRC32EncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
204	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
205	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(crc,  inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(crc,  inputStream,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(crc,  inputStream,  CRC32.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
206	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8)+  1;	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
207	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  inputStream);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
208	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(ENCODING,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
209	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encode,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encode,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encode,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
210	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.getZipEncoding(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.getZipEncoding(inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.getZipEncoding(inputStream,  encoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
211	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding,  0);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
212	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  1);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
213	[BUG]  [BUGGY]  this.zipEncoding  =  crc.encode(inputStream,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  crc.encode(inputStream,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  crc.encode(inputStream,  0);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
214	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  encoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  encoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
215	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  2);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  2);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
216	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding  +  inputStream.toString();	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
217	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  inputStream.toString();	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
218	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toUpperCase();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toUpperCase();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toUpperCase();	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
219	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toString(encoding);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toString(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toString(encoding);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
220	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.getValue();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.getValue();	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
221	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCurrentTargetEncoding();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCurrentTargetEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCurrentTargetEncoding();	  this.zipEncoding    =    inputStream.getTargetEncoding();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
222	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCrcEncoding();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCrcEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCrcEncoding();	  this.zipEncoding    =    inputStream.getTargetEncoding();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
223	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getRawZipEncoding();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getRawZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getRawZipEncoding();	  this.zipEncoding    =    inputStream.getTargetEncoding();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
224	[BUG]  [BUGGY]  encoding  =  inputStream  ==  null?  ZipEncodingHelper.UTF8  :  inputStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream  ==  null?  ZipEncodingHelper.UTF8  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream  ==  null?  ZipEncodingHelper.UTF8  :  inputStream;	  encoding    =    inputStream!=    null?    ZipEncodingHelper.UTF8    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
225	[BUG]  [BUGGY]  encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8):  inputStream;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8):  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8):  inputStream;	  encoding    =    inputStream!=    null?    ZipEncodingHelper.UTF8    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
226	[BUG]  [BUGGY]  encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  outputStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  outputStream;	  encoding    =    inputStream!=    null?    ZipEncodingHelper.UTF8    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
227	[BUG]  [BUGGY]  encoding  =  inputStream  ==  null?  ZipEncodingHelper.UTF8):  inputStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream  ==  null?  ZipEncodingHelper.UTF8):  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream  ==  null?  ZipEncodingHelper.UTF8):  inputStream;	  encoding    =    inputStream!=    null?    ZipEncodingHelper.UTF8    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
228	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8)+  1;	  encoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
229	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.encode(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.encode(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.encode(inputStream,  ZipEncodingHelper.UTF8);	  encoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
230	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8)+  2;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8)+  2;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8)+  2;	  encoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
231	[BUG]  [BUGGY]  encoding  =  inputStream.encode(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(ZipEncodingHelper.UTF8);	  encoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
232	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZIPEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZIPEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZIPEncodingHelper.UTF8);	  this.entry    =    new    ZipInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
233	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ENCODING);	  this.entry    =    new    ZipInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
234	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ZI_ENCODING);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ZI_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ZI_ENCODING);	  this.entry    =    new    ZipInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
235	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  CRC32);	  encoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
236	[BUG]  [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  crc);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(zipEncoding,  crc);	  encoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
237	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  crc,  this);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  crc,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  crc,  this);	  encoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
238	[BUG]  [BUGGY]  encoding  =  CRC32.encode(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  CRC32.encode(inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  CRC32.encode(inputStream,  crc);	  encoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
239	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8);	  Encoding    zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
240	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  encoding);	  Encoding    zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
241	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  this);	  Encoding    zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
242	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zip);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zip);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(zip);	  Encoding    zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
243	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  false);	  Encoding    zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
244	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  null);	  Encoding    zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
245	[BUG]  [BUGGY]  InputStream  in  =  this.inputStream.openInputStream();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  this.inputStream.openInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  this.inputStream.openInputStream();	  InputStream    in    =    inputStream.openInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
246	[BUG]  [BUGGY]  InputStream  in  =  inputStream.openInputStream(true);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.openInputStream(true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.openInputStream(true);	  InputStream    in    =    inputStream.openInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
247	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
248	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveEntry(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
249	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveEntry(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
250	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(ZipEncodingHelper.UTF8,  inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(ZipEncodingHelper.UTF8,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(ZipEncodingHelper.UTF8,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
251	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  ZipEncodingHelper.US_ASCII);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  ZipEncodingHelper.US_ASCII);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  ZipEncodingHelper.US_ASCII);	  this.entry    =    new    ZipArchiveEntry(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
252	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zip);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zip);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zip);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
253	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
254	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipBuffer);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipBuffer);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipBuffer);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
255	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePath()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePath()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getAbsolutePath()  +  1;	  this.zipEncoding    =    inputStream.getAbsolutePath();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
256	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCanonicalPath();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCanonicalPath();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCanonicalPath();	  this.zipEncoding    =    inputStream.getAbsolutePath();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
257	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getPath();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getPath();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getPath();	  this.zipEncoding    =    inputStream.getAbsolutePath();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
258	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toUpperCase();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toUpperCase();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toUpperCase();	  this.zipEncoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
259	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toUpperCrc();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toUpperCrc();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toUpperCrc();	  this.zipEncoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
260	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toByteArray();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toByteArray();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toByteArray();	  this.zipEncoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
261	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toString()  + "n ";  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toString()  + "n ";	  this.zipEncoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
262	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toUTF8();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toUTF8();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toUTF8();	  this.zipEncoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
263	[BUG]  [BUGGY]  encoding  =  inputStream.getInputStream(zipEncoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getInputStream(zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getInputStream(zipEncoding);	  encoding    =    zipEncoding.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
264	[BUG]  [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getInputStream(inputStream,  0,  inputStream.length);	  encoding    =    zipEncoding.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
265	[BUG]  [BUGGY]  encoding  =  inputStream.getInputStream(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getInputStream(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getInputStream(ZipEncodingHelper.UTF8);	  encoding    =    zipEncoding.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
266	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.getInputStream(zipEncoding);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.getInputStream(zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.getInputStream(zipEncoding);	  encoding    =    zipEncoding.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
267	[BUG]  [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getInputStream(inputStream,  1);	  encoding    =    zipEncoding.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
268	[BUG]  [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getInputStream(inputStream,  crc);	  encoding    =    zipEncoding.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
269	[BUG]  [BUGGY]  this.encoding  =  inputStream.getCharacterEncoding(true);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getCharacterEncoding(true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getCharacterEncoding(true);	  this.encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
270	[BUG]  [BUGGY]  this.encoding  =  inputStream.getCharacterEncoding(0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getCharacterEncoding(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getCharacterEncoding(0);	  this.encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
271	[BUG]  [BUGGY]  this.encoding  =  inputStream.getRawEncoding();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getRawEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getRawEncoding();	  this.encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
272	[BUG]  [BUGGY]  this.encoding  =  inputStream.getDecodedCharacterEncoding();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getDecodedCharacterEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getDecodedCharacterEncoding();	  this.encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
273	[BUG]  [BUGGY]  this.encoding  =  inputStream.getCharacterEncoding()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getCharacterEncoding()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getCharacterEncoding()  +  1;	  this.encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
274	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_GET  +  1;	  encoding    =    ZipEncodingHelper.ENCODING_GET;    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
275	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.length();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.length();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.length();	  encoding    =    ZipEncodingHelper.ENCODING_GET;    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
276	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET,  inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_GET,  inputStream);	  encoding    =    ZipEncodingHelper.ENCODING_GET;    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
277	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.toString();	  encoding    =    ZipEncodingHelper.ENCODING_GET;    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
278	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ARRAY  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ARRAY  +  1;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
279	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ARRAY,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ARRAY,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ARRAY,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
280	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ARRAY;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ARRAY;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8_ARRAY;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
281	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
282	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  0,  null);	  encoding    =    zipEncoding.encode(inputStream,    null);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
283	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  CRC32.UTF8);	  encoding    =    zipEncoding.encode(inputStream,    null);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
284	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  null,  crc);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  null,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  null,  crc);	  encoding    =    zipEncoding.encode(inputStream,    null);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
285	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  null,  this);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  null,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  null,  this);	  encoding    =    zipEncoding.encode(inputStream,    null);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
286	[BUG]  [BUGGY]  encoding  =  inputStream.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toUpperCase(Locale.ENGLISH);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toUpperCase(Locale.ENGLISH);	  encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
287	[BUG]  [BUGGY]  encoding  =  inputStream.toLowerCase();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toLowerCase();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toLowerCase();	  encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
288	[BUG]  [BUGGY]  encoding  =  inputStream.toUpperCase()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toUpperCase()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toUpperCase()  +  1;	  encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
289	[BUG]  [BUGGY]  encoding  =  inputStream.toUpperCase(ZipEncoding.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toUpperCase(ZipEncoding.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toUpperCase(ZipEncoding.UTF8);	  encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
290	[BUG]  [BUGGY]  encoding  =  inputStream.toUpperCase(Locale.getDefault());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toUpperCase(Locale.getDefault());  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toUpperCase(Locale.getDefault());	  encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
291	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncoding,  crc);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncoding,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  zipEncoding,  crc);	  this.entry    =    new    ZipInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
292	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncoding,  encoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  zipEncoding,  encoding);	  this.entry    =    new    ZipInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
293	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncoding,  CRC32);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncoding,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  zipEncoding,  CRC32);	  this.entry    =    new    ZipInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
294	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncoding  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncoding  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  zipEncoding  +  1);	  this.entry    =    new    ZipInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
295	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US_ASCII);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US_ASCII);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US_ASCII);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
296	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
297	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
298	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
299	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.DEFAULT_ZIP_ENCODING);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.DEFAULT_ZIP_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.DEFAULT_ZIP_ENCODING);	  this.zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
300	[BUG]  [BUGGY]  this.zipEncoding  =  in.encode(zipEncoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  in.encode(zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  in.encode(zipEncoding);	  this.zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
301	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  crc);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding,  crc);	  this.zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
302	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  1;	  encoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
303	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream);	  encoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
304	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toString();	  encoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
305	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.length();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.length();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.length();	  encoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
306	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_START  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_START  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_START  +  1;	  encoding    =    ZipEncodingHelper.UTF8_START;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
307	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_END;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_END;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_END;	  encoding    =    ZipEncodingHelper.UTF8_START;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
308	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_START  +  inputStream.length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_START  +  inputStream.length;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_START  +  inputStream.length;	  encoding    =    ZipEncodingHelper.UTF8_START;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
309	[BUG]  [BUGGY]  this.encoding  =  inputStream.toCharArray();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toCharArray();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toCharArray();	  this.encoding    =    inputStream.getCharset();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
310	[BUG]  [BUGGY]  this.encoding  =  inputStream.getCharset()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getCharset()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getCharset()  +  1;	  this.encoding    =    inputStream.getCharset();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
311	[BUG]  [BUGGY]  this.encoding  =  inputStream.getCharset(0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getCharset(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getCharset(0);	  this.encoding    =    inputStream.getCharset();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
312	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(ZipEncodingHelper.UTF8);	  this.zipEncoding    =    inputStream.encode(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
313	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.encode(inputStream);	  this.zipEncoding    =    inputStream.encode(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
314	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8)+  1;	  this.zipEncoding    =    inputStream.encode(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
315	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    inputStream.encode(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
316	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(InputStream.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(InputStream.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(InputStream.UTF8);	  this.zipEncoding    =    inputStream.encode(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
317	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toUpperCase(Locale.ENGLISH);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUpperCase(Locale.ENGLISH);	  this.encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
318	[BUG]  [BUGGY]  this.encoding  =  inputStream.toLowerCase();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toLowerCase();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toLowerCase();	  this.encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
319	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUpperCase()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toUpperCase()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUpperCase()  +  1;	  this.encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
320	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUpperCase(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toUpperCase(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUpperCase(ZipEncodingHelper.UTF8);	  this.encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
321	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUpperCase(Locale.getDefault());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toUpperCase(Locale.getDefault());  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUpperCase(Locale.getDefault());	  this.encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
322	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUpperCase(Locale.US);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toUpperCase(Locale.US);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUpperCase(Locale.US);	  this.encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
323	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE  +  1;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODE;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
324	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE,  inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODE;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
325	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODE,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODE,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODE,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODE;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
326	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODE;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODE;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODE;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
327	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  in);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  in);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
328	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  encoding);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
329	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  crc);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
330	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  in);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  in);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
331	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream,  ZipEncodingHelper.UTF8_ENCODING);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream,  ZipEncodingHelper.UTF8_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream,  ZipEncodingHelper.UTF8_ENCODING);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
332	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
333	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  CRC32);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
334	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF3);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF3);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF3);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF4);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
335	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF6);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF6);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF6);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF4);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
336	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  1;	  encoding    =    ZipEncodingHelper.ENCODING_ERROR;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
337	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ERROR,  inputStream);	  encoding    =    ZipEncodingHelper.ENCODING_ERROR;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
338	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  inputStream.toString();	  encoding    =    ZipEncodingHelper.ENCODING_ERROR;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
339	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  inputStream.length();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  inputStream.length();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  inputStream.length();	  encoding    =    ZipEncodingHelper.ENCODING_ERROR;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
340	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  crc);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  crc);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32.DEFAULT_ENCODING);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
341	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(crc,  inputStream,  CRC32.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(crc,  inputStream,  CRC32.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(crc,  inputStream,  CRC32.DEFAULT_ENCODING);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32.DEFAULT_ENCODING);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
342	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(CRC32.DEFAULT_ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(CRC32.DEFAULT_ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(CRC32.DEFAULT_ENCODING,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32.DEFAULT_ENCODING);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
343	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  zipEncoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32.DEFAULT_ENCODING);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
344	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  encoding);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  encoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32.DEFAULT_ENCODING);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
345	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  CRC32.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  CRC32.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  CRC32.DEFAULT_ENCODING);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32.DEFAULT_ENCODING);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
346	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCurrentName();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCurrentName();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCurrentName();	  this.zipEncoding    =    inputStream.getName();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
347	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this,  crc);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this,  crc);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
348	[BUG]  [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncodingHelper.getInputStream(inputStream,  this);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
349	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this,  zipEncoding);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
350	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  crc);	  this.entry    =    new    ZipInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
351	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  CRC32,  crc);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  CRC32,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  CRC32,  crc);	  this.entry    =    new    ZipInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
352	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(crc,  inputStream);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(crc,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(crc,  inputStream);	  this.entry    =    new    ZipInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
353	[BUG]  [BUGGY]  this.entry  =  new  CRCInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  CRCInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  CRCInputStream(inputStream,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
354	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(CRC32,  inputStream);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(CRC32,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(CRC32,  inputStream);	  this.entry    =    new    ZipInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
355	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  inStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  inStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  inStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getIn()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
356	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  zipEncoding;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getIn()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
357	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  outputStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  outputStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getIn()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
358	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  InputStream.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  InputStream.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  InputStream.encode(inputStream);	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getIn()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
359	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  false);	  this.entry    =    new    ZipArchiveEntry(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
360	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  null);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  null);	  this.entry    =    new    ZipArchiveEntry(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
361	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_ENCODING,  inputStream,  true);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_ENCODING,  inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_ENCODING,  inputStream,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
362	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  inputStream,  true);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  inputStream,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
363	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  true,  false);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  true,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  true,  false);	  this.entry    =    new    ZipArchiveEntry(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
364	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_VERSION,  inputStream,  true);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_VERSION,  inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_VERSION,  inputStream,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
365	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding,  crc);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding,  crc);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
366	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this.zipEncoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this.zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this.zipEncoding);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
367	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding,  inputStream);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
368	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding,  this);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding,  this);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
369	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8)+  1;	  this.zipEncoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
370	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  zipEncoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
371	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
372	[BUG]  [BUGGY]  this.encoding  =  inputStream.getZipEncoding(0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getZipEncoding(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getZipEncoding(0);	  this.encoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
373	[BUG]  [BUGGY]  this.encoding  =  inputStream.getZipEncoding(true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getZipEncoding(true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getZipEncoding(true);	  this.encoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
374	[BUG]  [BUGGY]  this.encoding  =  inputStream.getZipEncoding()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getZipEncoding()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getZipEncoding()  +  1;	  this.encoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
375	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(in,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(in,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(in,  inputStream);	  encoding    =    zipEncoding.encode(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
376	[BUG]  [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  in);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(zipEncoding,  in);	  encoding    =    zipEncoding.encode(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
377	[BUG]  [BUGGY]  encoding  =  in.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  in.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  in.encode(inputStream);	  encoding    =    zipEncoding.encode(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
378	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  in);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(zipEncoding,  in);	  encoding    =    zipEncoding.encode(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
379	[BUG]  [BUGGY]  encoding  =  in.encode(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  in.encode(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  in.encode(inputStream,  zipEncoding);	  encoding    =    zipEncoding.encode(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
380	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding,  crc);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding,  crc);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
381	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding,  encoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
382	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding,  CRC32);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding,  CRC32);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
383	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding  +  1);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
384	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding  +  1;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
385	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  1L;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  1L;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  1L;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
386	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  2;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  2;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
387	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  encoding;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  encoding;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
388	[BUG]  [BUGGY]  encoding  =  inputStream.getCharacterEncoding(true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getCharacterEncoding(true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getCharacterEncoding(true);	  encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
389	[BUG]  [BUGGY]  encoding  =  inputStream.getDecodedCharacterEncoding();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getDecodedCharacterEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getDecodedCharacterEncoding();	  encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
390	[BUG]  [BUGGY]  encoding  =  inputStream.getCharacterEncoding(0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getCharacterEncoding(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getCharacterEncoding(0);	  encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
391	[BUG]  [BUGGY]  this.in  =  in  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  in  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  null;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  in  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  null;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)in).getInput()    :    null;    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
392	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  entry;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  entry;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  entry;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)in).getInput()    :    null;    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
393	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  new  FileInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  new  FileInputStream(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  new  FileInputStream(inputStream);	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)in).getInput()    :    null;    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
394	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  new  ZipArchiveInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  new  ZipArchiveInputStream(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  new  ZipArchiveInputStream(inputStream);	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)in).getInput()    :    null;    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
395	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inputStream);	  encoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
396	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding);	  encoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
397	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  this);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  this);	  encoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
398	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inputStream.length);	  encoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
399	[BUG]  [BUGGY]  encoding  =  zipEncoding.getZipEncoding(inputStream);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getZipEncoding(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getZipEncoding(inputStream);	  encoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
400	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true);	  encoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
401	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  0,  inputStream.length);	  encoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
402	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(0);	  this.entry    =    new    ZipArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
403	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(Integer.parseInt(inputStream));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(Integer.parseInt(inputStream));  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(Integer.parseInt(inputStream));	  this.entry    =    new    ZipArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
404	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(Integer.toHexString(inputStream));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(Integer.toHexString(inputStream));  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(Integer.toHexString(inputStream));	  this.entry    =    new    ZipArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
405	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_ENCODING);	  this.entry    =    new    ZipArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
406	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  &  File.separatorChar;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  &  File.separatorChar;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  &  File.separatorChar;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    |    File.separatorChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
407	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar  +  1;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    |    File.separatorChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
408	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING?  File.separatorChar  :  ZipEncodingHelper.UTF8_ENCODING;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING?  File.separatorChar  :  ZipEncodingHelper.UTF8_ENCODING;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING?  File.separatorChar  :  ZipEncodingHelper.UTF8_ENCODING;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    |    File.separatorChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
409	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  /  File.separatorChar;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  /  File.separatorChar;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  /  File.separatorChar;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    |    File.separatorChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
410	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar,  inputStream;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar,  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar,  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    |    File.separatorChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
411	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  &  File.separatorChar;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  &  File.separatorChar;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  &  File.separatorChar;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    |    File.separatorChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
412	[BUG]  [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(zipEncoding,  1);	  encoding    =    zipEncoding.encode(inputStream,    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
413	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  2);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  2);	  encoding    =    zipEncoding.encode(inputStream,    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
414	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  4);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  4);	  encoding    =    zipEncoding.encode(inputStream,    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
415	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  0,  1);	  encoding    =    zipEncoding.encode(inputStream,    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
416	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  3);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  3);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  3);	  encoding    =    zipEncoding.encode(inputStream,    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
417	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(crc);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(crc);	  this.zipEncoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
418	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  CRC32.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  CRC32.encode(inputStream);	  this.zipEncoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
419	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encodeCrc(crec);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encodeCrc(crec);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encodeCrc(crec);	  this.zipEncoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
420	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(crec);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(crec);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(crec);	  this.zipEncoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
421	[BUG]  [BUGGY]  this.zipEncoding  =  in.encode(crc);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  in.encode(crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  in.encode(crc);	  this.zipEncoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
422	[BUG]  [BUGGY]  this.zipEncoding  =  cmd.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  cmd.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  cmd.encode(inputStream);	  this.zipEncoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
423	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+  1;	  this.encoding    =    inputStream.getEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
424	[BUG]  [BUGGY]  this.encoding  =  zipEncoding.getEncoding(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  zipEncoding.getEncoding(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  zipEncoding.getEncoding(ZipEncodingHelper.UTF8);	  this.encoding    =    inputStream.getEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
425	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+  2;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+  2;	  this.encoding    =    inputStream.getEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
426	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+ "n ";  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+ "n ";  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+ "n ";	  this.encoding    =    inputStream.getEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
427	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+  File.separatorChar;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+  File.separatorChar;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+  File.separatorChar;	  this.encoding    =    inputStream.getEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
428	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+ ";n ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+ ";n ");  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+ ";n ");	  this.encoding    =    inputStream.getEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
429	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(zipEncoding,  inputStream);	  this.in    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
430	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US_ASCII);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US_ASCII);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US_ASCII);	  this.in    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
431	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  zipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  zipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  zipEncodingHelper.UTF8);	  this.in    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
432	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;	  this.in    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
433	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(ZipEncodingHelper.UTF8);	  this.in    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
434	[BUG]  [BUGGY]  in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);	  this.in    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
435	[BUG]  [BUGGY]  this.encoding  =  inputStream.readUTF();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.readUTF();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.readUTF();	  this.encoding    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
436	[BUG]  [BUGGY]  this.encoding  =  inputStream.openStream();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.openStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.openStream();	  this.encoding    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
437	[BUG]  [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length()  -  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getChars(0,  inputStream.length()  -  1);	  this.encoding    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
438	[BUG]  [BUGGY]  this.encoding  =  inputStream.readFully();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.readFully();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.readFully();	  this.encoding    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
439	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ENCODING);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
440	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ZI_ENCODING);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ZI_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.DEFAULT_ZI_ENCODING);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
441	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(in,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(in,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(in,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
442	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(in);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(in);	  this.entry    =    new    ZipArchiveEntry(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
443	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(in,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(in,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(in,  zipEncoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
444	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(in,  in);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(in,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(in,  in);	  this.entry    =    new    ZipArchiveEntry(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
445	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(in,  outputStream);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(in,  outputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(in,  outputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
446	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(inputStream,  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
447	[BUG]  [BUGGY]  this.zipEncoding  =  outputStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  outputStream;	  this.zipEncoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
448	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncodingHelper.getZipEncoding();	  this.zipEncoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
449	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32.encodeZipEncoding(inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  CRC32.encodeZipEncoding(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  CRC32.encodeZipEncoding(inputStream);	  this.zipEncoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
450	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(inputStream);	  this.zipEncoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
451	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  crc);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
452	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(crc,  inputStream);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(crc,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(crc,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
453	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32,  crc);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32,  crc);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
454	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(CRC32,  inputStream);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(CRC32,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(CRC32,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
455	[BUG]  [BUGGY]  this.entry  =  new  CRCArchiveEntry(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  CRCArchiveEntry(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  CRCArchiveEntry(inputStream,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
456	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  CRC32);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  CRC32);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
457	[BUG]  [BUGGY]  this.entry  =  entryStream.getValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entryStream.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entryStream.getValue();	  this.entry    =    entryStream;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
458	[BUG]  [BUGGY]  this.entry  =  entryStream.readLine();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entryStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entryStream.readLine();	  this.entry    =    entryStream;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
459	[BUG]  [BUGGY]  this.entry  =  entryStream.getKey();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entryStream.getKey();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entryStream.getKey();	  this.entry    =    entryStream;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
460	[BUG]  [BUGGY]  this.entry  =  entryStream.getEntry();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entryStream.getEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entryStream.getEntry();	  this.entry    =    entryStream;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
461	[BUG]  [BUGGY]  this.zipEncoding  =  crc.encode(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  crc.encode(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  crc.encode(inputStream,  zipEncoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
462	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32.encode(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  CRC32.encode(inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  CRC32.encode(inputStream,  crc);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
463	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(crc,  inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(crc,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(crc,  inputStream);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
464	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8)+  1;	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
465	[BUG]  [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
466	[BUG]  [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getInputStream(inputStream,  ZipEncodingHelper.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
467	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  ZipEncodingHelper.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
468	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncodingHelper.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
469	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8)+  2;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8)+  2;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8)+  2;	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
470	[BUG]  [BUGGY]  encoding  =  inputStream.getEncoding()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getEncoding()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getEncoding()  +  1;	  encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
471	[BUG]  [BUGGY]  encoding  =  inputStream.getCharset();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getCharset();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getCharset();	  encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
472	[BUG]  [BUGGY]  Encoding  in  =  inputStream.getEncoding();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  in  =  inputStream.getEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  in  =  inputStream.getEncoding();	  encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
473	[BUG]  [BUGGY]  encoding  =  inputStream.getCharacters();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getCharacters();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getCharacters();	  encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
474	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(crc,  inputStream);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(crc,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(crc,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
475	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc,  encoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc,  encoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
476	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc,  true);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc,  true);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
477	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc,  false);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc,  false);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
478	[BUG]  [BUGGY]  encoding  =  ZipEncoding.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncoding.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncoding.encode(inputStream);	  encoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
479	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.encode(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.encode(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.encode(inputStream,  zipEncoding);	  encoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
480	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encodeZipEncoding(inputStream);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encodeZipEncoding(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encodeZipEncoding(inputStream);	  this.zipEncoding    =    inputStream.encodeZipEncoding(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
481	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(ENCODING);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encodeZipEncoding(ENCODING);	  this.zipEncoding    =    inputStream.encodeZipEncoding(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
482	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(this.zipEncoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(this.zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encodeZipEncoding(this.zipEncoding);	  this.zipEncoding    =    inputStream.encodeZipEncoding(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
483	[BUG]  [BUGGY]  this.zipEncoding  =  in.encodeZipEncoding(zipEncoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  in.encodeZipEncoding(zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  in.encodeZipEncoding(zipEncoding);	  this.zipEncoding    =    inputStream.encodeZipEncoding(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
484	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(zipEncoding,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(zipEncoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encodeZipEncoding(zipEncoding,  encoding);	  this.zipEncoding    =    inputStream.encodeZipEncoding(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
485	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8;	  this.zipEncoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
486	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
487	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8  +  inputStream;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8  +  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
488	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream.encode(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream.encode(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream.encode(ZipEncodingHelper.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
489	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream.encode(zipEncoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream.encode(zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream.encode(zipEncoding);	  this.zipEncoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
490	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  ZIPEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  ZIPEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  ZIPEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveEntry(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
491	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  ZipEncodingHelper.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  ZipEncodingHelper.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  ZipEncodingHelper.DEFAULT_ENCODING);	  this.entry    =    new    ZipArchiveEntry(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
492	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  inputStream);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
493	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32EncodingHelper.getZipEncoding(inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  CRC32EncodingHelper.getZipEncoding(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  CRC32EncodingHelper.getZipEncoding(inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
494	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32,  crc);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32,  crc);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
495	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32EncodingHelper.getZipEncoding(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  CRC32EncodingHelper.getZipEncoding(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  CRC32EncodingHelper.getZipEncoding(inputStream,  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
496	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncodingHelper.getZipEncoding(inputStream,  crc);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
497	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(inputStream,  crc);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
498	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  +  1;	  encoding    =    ZipEncodingHelper.ENCODING_DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
499	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT,  inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_DEFAULT,  inputStream);	  encoding    =    ZipEncodingHelper.ENCODING_DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
500	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  +  inputStream.length();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  +  inputStream.length();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  +  inputStream.length();	  encoding    =    ZipEncodingHelper.ENCODING_DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
501	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  false);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
502	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding,  true);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
503	[BUG]  [BUGGY]  this.zipEncoding  =  crc.encode(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  crc.encode(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  crc.encode(inputStream,  true);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
504	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  true);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
505	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  null);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
506	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32.encode(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  CRC32.encode(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  CRC32.encode(inputStream,  true);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
507	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(in,  inputStream);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(in,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(in,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
508	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(in);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(in);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
509	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding(in,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncodingHelper.getZipEncoding(in,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncodingHelper.getZipEncoding(in,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
510	[BUG]  [BUGGY]  this.encoding  =  inputStream.toByteArray();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toByteArray();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toByteArray();	  this.encoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
511	[BUG]  [BUGGY]  this.encoding  =  inputStream.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toString()  + "n ";  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toString()  + "n ";	  this.encoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
512	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  0);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
513	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(ENCODING);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(ENCODING);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
514	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(outputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(outputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(outputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
515	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.generateZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.generateZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.generateZipEncoding(encoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
516	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ENCODING;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ENCODING;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ENCODING;	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
517	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.DEFAULT;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.DEFAULT;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.DEFAULT;	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
518	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT  |  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT  |  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT  |  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
519	[BUG]  [BUGGY]  this.entry  =  entry.getValue();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entry.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entry.getValue();	  this.entry    =    entry;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
520	[BUG]  [BUGGY]  this.entry  =  entry.getKey();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entry.getKey();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entry.getKey();	  this.entry    =    entry;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
521	[BUG]  [BUGGY]  this.entry  =  entry.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entry.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entry.toString();	  this.entry    =    entry;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
522	[BUG]  [BUGGY]  this.entry  =  entry.toInputStream();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entry.toInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entry.toInputStream();	  this.entry    =    entry;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
523	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCurrentTarget();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCurrentTarget();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCurrentTarget();	  this.zipEncoding    =    inputStream.getTarget();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
524	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.openStream();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.openStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.openStream();	  this.zipEncoding    =    inputStream.getTarget();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
525	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(inputStream);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
526	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  zip);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  zip);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  zip);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
527	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  zipBuffer);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  zipBuffer);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  zipBuffer);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
528	[BUG]  [BUGGY]  this.in  =  in  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  in  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  null;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  in  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  null;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getInput()    :    null;    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
529	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  new  ZipArchiveInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  new  ZipArchiveInputStream(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  new  ZipArchiveInputStream(inputStream);	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getInput()    :    null;    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
530	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  in;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  in;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  in;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getInput()    :    null;    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
531	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  new  FileInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  new  FileInputStream(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  new  FileInputStream(inputStream);	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getInput()    :    null;    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
532	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  crc);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  crc);	  this.entry    =    new    ZipArchiveEntry(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
533	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  encoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  encoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
534	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  CRC32);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  CRC32);	  this.entry    =    new    ZipArchiveEntry(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
535	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
536	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  +  1);	  encoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
537	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length  -  1);	  encoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
538	[BUG]  [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(zipEncoding,  0,  inputStream.length);	  encoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
539	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(inputStream,  0,  zipEncoding.length);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(inputStream,  0,  zipEncoding.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(inputStream,  0,  zipEncoding.length);	  encoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
540	[BUG]  [BUGGY]  encoding  =  ZipEncoding.encode(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncoding.encode(inputStream,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncoding.encode(inputStream,  0,  inputStream.length);	  encoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
541	[BUG]  [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(zipEncoding,  inputStream);	  encoding    =    zipEncoding.encode(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
542	[BUG]  [BUGGY]  encoding  =  inputStream.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(inputStream);	  encoding    =    zipEncoding.encode(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
543	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
544	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(ENCODING,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
545	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(crc,  inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(crc,  inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(crc,  inputStream,  encoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
546	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  zipEncoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
547	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  1;	  encoding    =    ZipEncodingHelper.ENCODING_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
548	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream.length;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream.length;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream.length;	  encoding    =    ZipEncodingHelper.ENCODING_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
549	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream.toString();	  encoding    =    ZipEncodingHelper.ENCODING_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
550	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream.getCharset();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream.getCharset();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream.getCharset();	  encoding    =    ZipEncodingHelper.ENCODING_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
551	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  zipEncoding;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getEncoding()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
552	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  inStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  inStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  inStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getEncoding()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
553	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  InputStream.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  InputStream.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  InputStream.encode(inputStream);	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getEncoding()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
554	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inf,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inf,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inf,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
555	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inf,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inf,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inf,  zipEncoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
556	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  inf,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  inf,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  inf,  zipEncoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
557	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(encoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(encoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(encoding,  inputStream);	  this.entry    =    new    ZipInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
558	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  encoding,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  encoding,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  encoding,  zipEncoding);	  this.entry    =    new    ZipInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
559	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.DEFAULT_ZIP_ENCODING);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.DEFAULT_ZIP_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.DEFAULT_ZIP_ENCODING);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
560	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8,  inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8,  inputStream);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
561	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.US_ZIP_ENCODING);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.US_ZIP_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.US_ZIP_ENCODING);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
562	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipArchiveHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipArchiveHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipArchiveHelper.UTF8);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
563	[BUG]  [BUGGY]  encoding  =  inputStream  +  ZipEncodingHelper.UTF8;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream  +  ZipEncodingHelper.UTF8;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream  +  ZipEncodingHelper.UTF8;	  encoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
564	[BUG]  [BUGGY]  encoding  =  inputStream  +  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream  +  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream  +  ZipEncodingHelper.UTF8);	  encoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
565	[BUG]  [BUGGY]  encoding  =  zipEncoding  +  inputStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding  +  inputStream;	  encoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
566	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8  +  inputStream.toString();	  encoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
567	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8  +  inputStream.encode(zipEncoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8  +  inputStream.encode(zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8  +  inputStream.encode(zipEncoding);	  encoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
568	[BUG]  [BUGGY]  encoding  =  inputStream.getChars(0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getChars(0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getChars(0,  inputStream.length);	  encoding    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
569	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_KEY  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_KEY  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_KEY  +  1;	  encoding    =    ZipEncodingHelper.ENCODING_KEY;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
570	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_KEY,  inputStream);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_KEY,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_KEY,  inputStream);	  encoding    =    ZipEncodingHelper.ENCODING_KEY;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
571	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  zipEncoding);	  this.in    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
572	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  encoding);	  this.in    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
573	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  0,  inputStream.length);	  this.in    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
574	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  CRC32.UTF8);	  this.in    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
575	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  encoding);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
576	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  in);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  in);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
577	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  in);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  in);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
578	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  zipEncoding);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
579	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  crc);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
580	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  CRC32);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
581	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  encoding);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  encoding);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
582	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8)+  1;	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
583	[BUG]  [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getInputStream(inputStream,  CRC32.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
584	[BUG]  [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
585	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
586	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8)+  2;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8)+  2;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8)+  2;	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
587	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCurrentCharacterEncoding();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCurrentCharacterEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCurrentCharacterEncoding();	  this.zipEncoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
588	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCharacterEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCharacterEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCharacterEncoding(encoding);	  this.zipEncoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
589	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getDecodedCharacterEncoding();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getDecodedCharacterEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getDecodedCharacterEncoding();	  this.zipEncoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
590	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCharacterEncoding(true);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCharacterEncoding(true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCharacterEncoding(true);	  this.zipEncoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
591	[BUG]  [BUGGY]  encoding  =  zipEncoding  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding  +  1;	  encoding    =    ZipEncodingHelper.ENCODING    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
592	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING  +  1L;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING  +  1L;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING  +  1L;	  encoding    =    ZipEncodingHelper.ENCODING    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
593	[BUG]  [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  this);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(zipEncoding,  this);	  encoding    =    zipEncoding.encode(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
594	[BUG]  [BUGGY]  encoding  =  crc.encode(inputStream,  this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  crc.encode(inputStream,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  crc.encode(inputStream,  this);	  encoding    =    zipEncoding.encode(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
595	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  this,  crc);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  this,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  this,  crc);	  encoding    =    zipEncoding.encode(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
596	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toURI();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toURI();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toURI();	  this.zipEncoding    =    inputStream.getName();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
597	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncodingHelper);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncodingHelper);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  zipEncodingHelper);	  this.entry    =    new    ZipInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
598	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_START  +  inputStream;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_START  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_START  +  inputStream;	  encoding    =    ZipEncodingHelper.UTF8_START;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
599	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncodingHelper);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncodingHelper);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncodingHelper);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
600	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_RANGE  +  inputStream;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_RANGE  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_RANGE  +  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_RANGE;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
601	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  inf);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  inf);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  inf);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
602	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream,  zipEncoding);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
603	[BUG]  [BUGGY]  this.zipEncoding  =  in.encode(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  in.encode(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  in.encode(inputStream,  true);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
604	[BUG]  [BUGGY]  encoding  =  inputStream.getTargetEncoding();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getTargetEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getTargetEncoding();	  encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
605	[BUG]  [BUGGY]  encoding  =  inputStream.getRawEncoding();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getRawEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getRawEncoding();	  encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
606	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  this);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  0,  this);	  encoding    =    zipEncoding.encode(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
607	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  false);	  encoding    =    zipEncoding.encode(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
608	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  true);	  encoding    =    zipEncoding.encode(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
609	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream;	  encoding    =    ZipEncodingHelper.ENCODING_GET;    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
610	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.getCharset();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.getCharset();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.getCharset();	  encoding    =    ZipEncodingHelper.ENCODING_GET;    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
611	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRING  +  inputStream;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRING  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_STRING  +  inputStream;	  encoding    =    ZipEncodingHelper.UTF8_STRING;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
612	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRING  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRING  +  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_STRING  +  inputStream.toString();	  encoding    =    ZipEncodingHelper.UTF8_STRING;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
613	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT_ENCODING,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
614	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  inf);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  inf);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream,  inf);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
615	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_0L;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_0L;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_0L;	  encoding    =    ZipEncodingHelper.UTF8_0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
616	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false);	  encoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
617	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  in);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  in);	  encoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
618	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  -  File.separatorChar;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  -  File.separatorChar;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  -  File.separatorChar;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    |    File.separatorChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
619	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  File.separatorChar;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  File.separatorChar;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  File.separatorChar;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    |    File.separatorChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
620	[BUG]  [BUGGY]  encoding  =  ZIPEncodingHelper.UTF8  +  inputStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZIPEncodingHelper.UTF8  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZIPEncodingHelper.UTF8  +  inputStream;	  encoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
621	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8  +  inputStream,  zipEncoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8  +  inputStream,  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8  +  inputStream,  zipEncoding;	  encoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
622	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(inputStream);	  encoding    =    zipEncoding.encode(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
623	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  0,  inputStream.length);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
624	[BUG]  [BUGGY]  this.encoding  =  inputStream.getTargetEncoding();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getTargetEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getTargetEncoding();	  this.encoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
625	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(outputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(outputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(outputStream,  encoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
626	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipArchiveHelper.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipArchiveHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(ZipArchiveHelper.UTF8);	  this.zipEncoding    =    inputStream.encode(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
627	[BUG]  [BUGGY]  this.zipEncoding  =  encodeZipEncoding(inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  encodeZipEncoding(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  encodeZipEncoding(inputStream);	  this.zipEncoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
628	[BUG]  [BUGGY]  this.zipEncoding  =  INVALID_ZIP_ENCODING;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  INVALID_ZIP_ENCODING;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  INVALID_ZIP_ENCODING;	  this.zipEncoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
629	[BUG]  [BUGGY]  this.zipEncoding  =  INVALID_ZipEncoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  INVALID_ZipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  INVALID_ZipEncoding;	  this.zipEncoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
630	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.US_ASCII);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.US_ASCII);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.US_ASCII);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
631	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  CRC32.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
632	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  entryStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  entryStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  entryStream;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)in).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
633	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT  +  1;	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
634	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.encode(inputStream,  0);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
635	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0L);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0L);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  0L);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
636	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ARRAY  +  inputStream;	  encoding    =    ZipEncodingHelper.UTF8_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
637	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(enc,  inputStream);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(enc,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(enc,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
638	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE  +  inputStream;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE  +  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODE;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
639	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePath()  +  File.separatorChar  +  inputStream.charAt(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePath()  +  File.separatorChar  +  inputStream.charAt(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getAbsolutePath()  +  File.separatorChar  +  inputStream.charAt(0);	  this.zipEncoding    =    inputStream.getAbsolutePath();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
640	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream!=  null?  null  :  inputStream.getAbsolutePath();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream!=  null?  null  :  inputStream.getAbsolutePath();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream!=  null?  null  :  inputStream.getAbsolutePath();	  this.zipEncoding    =    inputStream.getAbsolutePath();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
641	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePath()  +  File.separatorChar  +  inputStream.charAt(inputStream.length  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePath()  +  File.separatorChar  +  inputStream.charAt(inputStream.length  -  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getAbsolutePath()  +  File.separatorChar  +  inputStream.charAt(inputStream.length  -  1);	  this.zipEncoding    =    inputStream.getAbsolutePath();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
642	[BUG]  [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getInputStream(inputStream,  inputStream);	  encoding    =    zipEncoding.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
643	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8_ENCODING.toString();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8_ENCODING.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream  +  ZipEncodingHelper.UTF8_ENCODING.toString();	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
644	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  null);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
645	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  inf);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  inf);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING,  inputStream,  inf);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
646	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  Inflater.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  Inflater.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  Inflater.UTF8);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
647	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  3);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  3);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length  -  3);	  this.entry    =    new    ZipInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
648	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length)+  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length)+  1;	  this.entry    =    new    ZipInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
649	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(crc,  inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(crc,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(crc,  inputStream);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
650	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  inputStream);	  this.in    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
651	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF4);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF4);	  this.in    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
652	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  |  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  |  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  |  ZipEncodingHelper.UTF8);	  encoding    =    ZipEncodingHelper.ENCODING_DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
653	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  +  inputStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_DEFAULT  +  inputStream;	  encoding    =    ZipEncodingHelper.ENCODING_DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
654	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.DEFAULT_ENCODING;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.DEFAULT_ENCODING;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.DEFAULT_ENCODING;	  encoding    =    ZipEncodingHelper.ENCODING_DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
655	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  in);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  in);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
656	[BUG]  [BUGGY]  InputStream  in  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.readLine();	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
657	[BUG]  [BUGGY]  InputStream  in  =  inputStream!=  null?  new  ZipArchiveInputStream(inputStream):  inputStream.getInputStream();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream!=  null?  new  ZipArchiveInputStream(inputStream):  inputStream.getInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream!=  null?  new  ZipArchiveInputStream(inputStream):  inputStream.getInputStream();	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
658	[BUG]  [BUGGY]  InputStream  in  =  inputStream!=  null?  new  ZipInputStream(inputStream):  inputStream.getInputStream();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream!=  null?  new  ZipInputStream(inputStream):  inputStream.getInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream!=  null?  new  ZipInputStream(inputStream):  inputStream.getInputStream();	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
659	[BUG]  [BUGGY]  InputStream  in  =  inputStream!=  null?  getInputStream()  :  inputStream.getInputStream();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream!=  null?  getInputStream()  :  inputStream.getInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream!=  null?  getInputStream()  :  inputStream.getInputStream();	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
660	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream;	  encoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
661	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.getCharset();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.getCharset();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.getCharset();	  encoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
662	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream!=  null?  null  :  inputStream.getCharacterEncoding();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream!=  null?  null  :  inputStream.getCharacterEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream!=  null?  null  :  inputStream.getCharacterEncoding();	  this.zipEncoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
663	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getUpperBound();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getUpperBound();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getUpperBound();	  this.zipEncoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
664	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCharacterEncoding(0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCharacterEncoding(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCharacterEncoding(0);	  this.zipEncoding    =    inputStream.getCharacterEncoding();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
665	[BUG]  [BUGGY]  this.encoding  =  inputStream.getStartEncoding();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getStartEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getStartEncoding();	  this.encoding    =    inputStream.getEncoding()    +    1;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
666	[BUG]  [BUGGY]  this.encoding  =  outputStream.getEncoding();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  outputStream.getEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  outputStream.getEncoding();	  this.encoding    =    inputStream.getEncoding()    +    1;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
667	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  16);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  16);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  16);	  encoding    =    zipEncoding.encode(inputStream,    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
668	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  32);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  32);	  encoding    =    zipEncoding.encode(inputStream,    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
669	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  inputStream;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
670	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  /  inputStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  /  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  /  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
671	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream,  in);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream,  in);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
672	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
673	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF4);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF4);	  this.entry    =    new    ZipInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
674	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  TWO_EXP_32);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  TWO_EXP_32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  TWO_EXP_32);	  this.entry    =    new    ZipInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
675	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  CRC32  +  1);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  CRC32  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  CRC32  +  1);	  this.entry    =    new    ZipInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
676	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  CRC32,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  CRC32,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  CRC32,  zipEncoding);	  this.entry    =    new    ZipInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
677	[BUG]  [BUGGY]  encoding  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.readLine();	  encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
678	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding  +  1);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
679	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF4);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF4);	  this.in    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
680	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF9);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF9);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF9);	  this.in    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
681	[BUG]  [BUGGY]  This.entry  =  new  ZipArchiveInputStream(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  This.entry  =  new  ZipArchiveInputStream(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	This.entry  =  new  ZipArchiveInputStream(inputStream,  false);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
682	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  4;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  4;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  4;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
683	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  3;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  3;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  3;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
684	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.readLine();	  this.zipEncoding    =    inputStream.getTargetEncoding();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
685	[BUG]  [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  -  3);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length  -  3);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getChars(0,  inputStream.length  -  3);	  this.encoding    =    inputStream.getChars(0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
686	[BUG]  [BUGGY]  encoding  =  ZipEncoding.encode(in,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncoding.encode(in,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncoding.encode(in,  inputStream);	  encoding    =    zipEncoding.encode(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
687	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding  +  1);	  this.entry    =    new    ZipArchiveEntry(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
688	[BUG]  [BUGGY]  encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  in;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  in;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  in;	  encoding    =    inputStream!=    null?    ZipEncodingHelper.UTF8    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
689	[BUG]  [BUGGY]  encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  zipEncoding;	  encoding    =    inputStream!=    null?    ZipEncodingHelper.UTF8    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
690	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipArchiveHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipArchiveHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding(ZipArchiveHelper.UTF8);	  this.encoding    =    inputStream.getEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
691	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipArchiveEntry.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipArchiveEntry.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding(ZipArchiveEntry.UTF8);	  this.encoding    =    inputStream.getEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
692	[BUG]  [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream.toUpperCase();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream.toUpperCase();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream.toUpperCase();	  this.encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
693	[BUG]  [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8_ENCODING  :  inputStream.toUpperCase();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8_ENCODING  :  inputStream.toUpperCase();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8_ENCODING  :  inputStream.toUpperCase();	  this.encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
694	[BUG]  [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.DEFAULT_ENCODING  :  inputStream.toUpperCase();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.DEFAULT_ENCODING  :  inputStream.toUpperCase();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream!=  null?  ZipEncodingHelper.DEFAULT_ENCODING  :  inputStream.toUpperCase();	  this.encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
695	[BUG]  [BUGGY]  this.encoding  =  inputStream.getChars();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getChars();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getChars();	  this.encoding    =    inputStream.getCharset();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
696	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF_8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF_8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF_8);	  this.in    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
697	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF16);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF16);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF16);	  this.in    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
698	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_KEY  +  inputStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_KEY  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_KEY  +  inputStream;	  encoding    =    ZipEncodingHelper.ENCODING_KEY;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
699	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  inputStream;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ERROR  +  inputStream;	  encoding    =    ZipEncodingHelper.ENCODING_ERROR;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
700	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_BUFFER;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_BUFFER;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_BUFFER;	  encoding    =    ZipEncodingHelper.ENCODING_UTF8;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
701	[BUG]  [BUGGY]  this.encoding  =  inputStream.read();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.read();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.read();	  this.encoding    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
702	[BUG]  [BUGGY]  this.encoding  =  inputStream.readEndLine();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.readEndLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.readEndLine();	  this.encoding    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
703	[BUG]  [BUGGY]  this.encoding  =  inputStream.readEnd();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.readEnd();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.readEnd();	  this.encoding    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
704	[BUG]  [BUGGY]  this.encoding  =  inputStream.readLine()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.readLine()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.readLine()  +  1;	  this.encoding    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
705	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  inStream;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  inStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  inStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).readLine()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
706	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  in;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  in;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  in;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).readLine()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
707	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
708	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(zipEncoding,  in);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(zipEncoding,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encodeZipEncoding(zipEncoding,  in);	  this.zipEncoding    =    inputStream.encodeZipEncoding(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
709	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encodeZipEncoding(inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.encodeZipEncoding(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.encodeZipEncoding(inputStream);	  this.zipEncoding    =    inputStream.encodeZipEncoding(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
710	[BUG]  [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.DEFAULT_ENCODING  :  inputStream.toUTF8();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.DEFAULT_ENCODING  :  inputStream.toUTF8();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream!=  null?  ZipEncodingHelper.DEFAULT_ENCODING  :  inputStream.toUTF8();	  this.encoding    =    inputStream.toUTF8();    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
711	[BUG]  [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream.toUTF8();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream.toUTF8();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream.toUTF8();	  this.encoding    =    inputStream.toUTF8();    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
712	[BUG]  [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8_ENCODING  :  inputStream.toUTF8();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8_ENCODING  :  inputStream.toUTF8();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8_ENCODING  :  inputStream.toUTF8();	  this.encoding    =    inputStream.toUTF8();    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
713	[BUG]  [BUGGY]  this.encoding  =  inputStream  ==  null?  ZipEncodingHelper.DEFAULT_ENCODING  :  inputStream.toUTF8();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream  ==  null?  ZipEncodingHelper.DEFAULT_ENCODING  :  inputStream.toUTF8();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream  ==  null?  ZipEncodingHelper.DEFAULT_ENCODING  :  inputStream.toUTF8();	  this.encoding    =    inputStream.toUTF8();    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
714	[BUG]  [BUGGY]  this.encoding  =  inputStream  ==  null?  ZipEncodingHelper.UTF8  :  inputStream.toUTF8();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream  ==  null?  ZipEncodingHelper.UTF8  :  inputStream.toUTF8();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream  ==  null?  ZipEncodingHelper.UTF8  :  inputStream.toUTF8();	  this.encoding    =    inputStream.toUTF8();    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
715	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
716	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toExternalForm();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toExternalForm();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toExternalForm();	  this.zipEncoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
717	[BUG]  [BUGGY]  encoding  =  inputStream.getCurrentZipEncoding();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getCurrentZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getCurrentZipEncoding();	  encoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
718	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(in,  inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(in,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(in,  inputStream);	  this.entry    =    new    ZipInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
719	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inf);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inf);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inf);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
720	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(crc,  CRC32.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(crc,  CRC32.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(crc,  CRC32.DEFAULT_ENCODING);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32.DEFAULT_ENCODING);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
721	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream,  in);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream,  in);	  this.zipEncoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
722	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream,  inf);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream,  inf);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream,  inf);	  this.zipEncoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
723	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getOutputStream(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getOutputStream(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getOutputStream(inputStream,  false);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
724	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF_8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF_8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF_8);	  this.in    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
725	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding  +  1);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
726	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT_ENCODING,  inputStream,  true);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT_ENCODING,  inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT_ENCODING,  inputStream,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
727	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT,  inputStream,  true);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT,  inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT,  inputStream,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
728	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  true);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
729	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  entryStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  entryStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  entryStream;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)inputStream).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
730	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.US_ASCII);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.US_ASCII);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.US_ASCII);	  encoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
731	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  0,  ZipEncodingHelper.UTF8);	  encoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
732	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32  +  1);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
733	[BUG]  [BUGGY]  InputStream  in  =  inputStream.openInputStream(false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.openInputStream(false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.openInputStream(false);	  InputStream    in    =    inputStream.openInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
734	[BUG]  [BUGGY]  InputStream  in  =  inputStream.closeInputStream();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.closeInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.closeInputStream();	  InputStream    in    =    inputStream.openInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
735	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(zipEncoding,  ZipEncodingHelper.UTF4);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(zipEncoding,  ZipEncodingHelper.UTF4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(zipEncoding,  ZipEncodingHelper.UTF4);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF4);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
736	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(zipEncoding,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(zipEncoding,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(zipEncoding,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF4);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
737	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.encode(inputStream);	  encoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
738	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.encode(zipEncoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.encode(zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.encode(zipEncoding);	  encoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
739	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  TWO_EXP_32);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  TWO_EXP_32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  TWO_EXP_32);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
740	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32  +  1);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
741	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32,  zipEncoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
742	[BUG]  [BUGGY]  this.entryStream  =  inputStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entryStream  =  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entryStream  =  inputStream;	  this.entry    =    entryStream;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
743	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(crc,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(crc,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(crc,  inputStream);	  encoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
744	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  crc);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  0,  crc);	  encoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
745	[BUG]  [BUGGY]  this.encoding  =  inputStream.toURI();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toURI();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toURI();	  this.encoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
746	[BUG]  [BUGGY]  this.encoding  =  inputStream.toExternalForm();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toExternalForm();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toExternalForm();	  this.encoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
747	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(zipEncoding,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(zipEncoding,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(zipEncoding,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
748	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF_8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF_8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF_8);	  this.entry    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
749	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF0);	  this.entry    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
750	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  null,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  null,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  null,  ZipEncodingHelper.UTF8);	  encoding    =    zipEncoding.encode(inputStream,    null);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
751	[BUG]  [BUGGY]  this.in  =  ZipArchiveEntry.fromInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  ZipArchiveEntry.fromInputStream(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  ZipArchiveEntry.fromInputStream(inputStream);	  this.in    =    InputStream.fromInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
752	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8_ENCODING);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8_ENCODING);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
753	[BUG]  [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getInputStream(inputStream,  this);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
754	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveEntry(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
755	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  zipEncoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
756	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF4);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF4);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
757	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8)+  2;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8)+  2;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8)+  2;	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
758	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  in;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  in;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  in;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getIn()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
759	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  outputStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  outputStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getEncoding()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
760	[BUG]  [BUGGY]  encoding  =  inputStream.toUpperCase(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toUpperCase(ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toUpperCase(ZipEncodingHelper.UTF8);	  encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
761	[BUG]  [BUGGY]  encoding  =  inputStream.toUpperCase(Locale.US);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toUpperCase(Locale.US);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toUpperCase(Locale.US);	  encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
762	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(0);	  encoding    =    ZipEncodingHelper.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
763	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getCurrentZipEncoding();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getCurrentZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getCurrentZipEncoding();	  encoding    =    ZipEncodingHelper.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
764	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  CFH_LEN);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  CFH_LEN);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  CFH_LEN);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
765	[BUG]  [BUGGY]  this.entry  =  inputStream,  ZipEncodingHelper.UTF8;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  inputStream,  ZipEncodingHelper.UTF8;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  inputStream,  ZipEncodingHelper.UTF8;	  this.entry    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
766	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  :  inputStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  :  inputStream;	  this.zipEncoding    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
767	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  inputStream;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.UTF8_ZIP_ENCODING  :  inputStream;	  this.zipEncoding    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
768	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.UTF8_ENCODING  :  inputStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.UTF8_ENCODING  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.UTF8_ENCODING  :  inputStream;	  this.zipEncoding    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
769	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.UTF8  :  inputStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.UTF8  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.UTF8  :  inputStream;	  this.zipEncoding    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
770	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  File.separatorChar  +  inputStream.charAt(0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  File.separatorChar  +  inputStream.charAt(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING  +  File.separatorChar  +  inputStream.charAt(0);	  this.zipEncoding    =    ZIPEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
771	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF_8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF_8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF_8);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
772	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  in);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding,  in);	  this.zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
773	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding,  false);	  this.zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
774	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding  +  1);	  this.zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
775	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding,  null);	  this.zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
776	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT_ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT_ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT_ENCODING,  inputStream);	  this.entry    =    in;    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
777	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toURL();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toURL();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toURL();	  this.zipEncoding    =    inputStream.getTarget();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
778	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT_ENCODING);	  this.entry    =    new    ZipArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
779	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(Inflater.UTF8);	  this.entry    =    new    ZipArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
780	[BUG]  [BUGGY]  encoding  =  inputStream.getCurrentEncoding();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getCurrentEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getCurrentEncoding();	  encoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
781	[BUG]  [BUGGY]  encoding  =  inputStream.getCrc();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getCrc();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getCrc();	  encoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
782	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding,  inputStream);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
783	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  zipEncoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
784	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  in);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  in);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
785	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encodeCrc(cref);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encodeCrc(cref);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encodeCrc(cref);	  this.zipEncoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
786	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputPath()  :  inputStream;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputPath()  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputPath()  :  inputStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getOutputFile()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
787	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ARRAY  +  inputStream;	  encoding    =    ZipEncodingHelper.ENCODING_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
788	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding,  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
789	[BUG]  [BUGGY]  this.zipEncoding  =  in.encode(zipEncoding,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  in.encode(zipEncoding,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  in.encode(zipEncoding,  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
790	[BUG]  [BUGGY]  encoding  =  inputStream.encode(ZipEncodingHelper.ENCODING);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(ZipEncodingHelper.ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(ZipEncodingHelper.ENCODING);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
791	[BUG]  [BUGGY]  encoding  =  zipEncoding  +  ZipEncodingHelper.ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding  +  ZipEncodingHelper.ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding  +  ZipEncodingHelper.ENCODING,  inputStream);	  encoding    =    ZipEncodingHelper.ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
792	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this,  null);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
793	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipCode);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipCode);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipCode);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
794	[BUG]  [BUGGY]  Encoding  in  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  in  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  in  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream;	  encoding    =    inputStream!=    null?    ZipEncodingHelper.UTF8    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
795	[BUG]  [BUGGY]  encoding  =  inputStream.encode(crc,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(crc,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(crc,  zipEncoding);	  encoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
796	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(crc,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(crc,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(crc,  zipEncoding);	  encoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
797	[BUG]  [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(zipEncoding,  ZipEncodingHelper.UTF8);	  encoding    =    zipEncoding.encode(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
798	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(zipEncoding  +  1);	  Encoding    zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
799	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.getZipEncoding();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.getZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.getZipEncoding();	  Encoding    zipEncoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
800	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipArchiveEntry.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipArchiveEntry.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipArchiveEntry.UTF8);	  this.zipEncoding    =    new    ZipEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
801	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encodeZipEncoding(encoding);	  this.zipEncoding    =    inputStream.encodeZipEncoding(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
802	[BUG]  [BUGGY]  InputStream  in  =  inputStream.getInputStream(encoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.getInputStream(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.getInputStream(encoding);	  InputStream    in    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
803	[BUG]  [BUGGY]  encoding  =  inputStream.toUpperCase()  +  ZipEncodingHelper.UTF8;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toUpperCase()  +  ZipEncodingHelper.UTF8;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toUpperCase()  +  ZipEncodingHelper.UTF8;	  encoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
804	[BUG]  [BUGGY]  encoding  =  inputStream.useUnicodeExtraFields();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.useUnicodeExtraFields();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.useUnicodeExtraFields();	  encoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
805	[BUG]  [BUGGY]  encoding  =  inputStream.toUpperCase()  +  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toUpperCase()  +  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toUpperCase()  +  ZipEncodingHelper.UTF8);	  encoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
806	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.DEFAULT_ENCODING_ERROR;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.DEFAULT_ENCODING_ERROR;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.DEFAULT_ENCODING_ERROR;	  encoding    =    ZipEncodingHelper.ENCODING_ERROR;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
807	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_EXP_32;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_EXP_32;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_EXP_32;	  encoding    =    ZipEncodingHelper.ENCODING_ERROR;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
808	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
809	[BUG]  [BUGGY]  Encoding  in  =  inputStream.getZipEncoding();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  in  =  inputStream.getZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  in  =  inputStream.getZipEncoding();	  encoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
810	[BUG]  [BUGGY]  encoding  =  inputStream.openZipEncoding();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.openZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.openZipEncoding();	  encoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
811	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.US);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.US);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.US);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
812	[BUG]  [BUGGY]  encoding  =  ZIPEncodingHelper.ENCODING_DEFAULT;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZIPEncodingHelper.ENCODING_DEFAULT;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZIPEncodingHelper.ENCODING_DEFAULT;	  encoding    =    ZipEncodingHelper.ENCODING_DEFAULT;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
813	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(lockEncoding,  encoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(lockEncoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(lockEncoding,  encoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
814	[BUG]  [BUGGY]  this.zipEncoding  =  in.encode(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  in.encode(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  in.encode(inputStream,  zipEncoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
815	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  zipEncoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
816	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
817	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  inf,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  inf,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  inf,  encoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
818	[BUG]  [BUGGY]  this.zipEncoding  =  outputStream.encode(zipEncoding,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  outputStream.encode(zipEncoding,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  outputStream.encode(zipEncoding,  true);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
819	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  encoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  encoding);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
820	[BUG]  [BUGGY]  encoding  =  this.zipEncoding.encode(inputStream,  this);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  this.zipEncoding.encode(inputStream,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  this.zipEncoding.encode(inputStream,  this);	  encoding    =    zipEncoding.encode(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
821	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(this);	  encoding    =    zipEncoding.encode(inputStream,    this);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
822	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  0,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  0,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  0,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
823	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US_ZIP);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US_ZIP);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US_ZIP);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
824	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveEntry(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
825	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(entriesRead);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(entriesRead);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(entriesRead);	  this.entry    =    new    ZipArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
826	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(Inflater.DEFAULT);	  this.entry    =    new    ZipArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
827	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US_ZIP);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US_ZIP);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US_ZIP);	  this.entry    =    new    ZipInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
828	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.US);	  this.in    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
829	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  in);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  in);	  this.entry    =    new    ZipInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
830	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.length;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.length;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_GET  +  inputStream.length;	  encoding    =    ZipEncodingHelper.ENCODING_GET;    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
831	[BUG]  [BUGGY]  this.zipEncoding  =  outputStream  +  ZipEncodingHelper.UTF8;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  outputStream  +  ZipEncodingHelper.UTF8;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  outputStream  +  ZipEncodingHelper.UTF8;	  this.zipEncoding    =    ZipEncodingHelper.UTF8    +    inputStream;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
832	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(cref);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(cref);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(cref);	  this.zipEncoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
833	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(CRC32);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(CRC32);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(CRC32);	  this.zipEncoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
834	[BUG]  [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getInputStream(inputStream,  true);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
835	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getInputStream(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getInputStream(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getInputStream(inputStream,  true);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
836	[BUG]  [BUGGY]  encoding  =  inputStream.getInputStream(lockEncoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.getInputStream(lockEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getInputStream(lockEncoding);	  encoding    =    zipEncoding.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
837	[BUG]  [BUGGY]  this.entry  =  entry.inputStream;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entry.inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entry.inputStream;	  this.entry    =    entry;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
838	[BUG]  [BUGGY]  this.entry  =  entry.readLine();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entry.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entry.readLine();	  this.entry    =    entry;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
839	[BUG]  [BUGGY]  this.entry  =  entry.data;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entry.data;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entry.data;	  this.entry    =    entry;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
840	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  entry);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  entry);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  entry);	  encoding    =    zipEncoding.encode(inputStream,    in);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
841	[BUG]  [BUGGY]  InputStream  in  =  inputStream.close();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  InputStream  in  =  inputStream.close();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.close();	  InputStream    in    =    inputStream.openInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
842	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32,  encoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
843	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32,  zipEncoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
844	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  inStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  inStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  inStream);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
845	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  buffer);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  buffer);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  buffer);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
846	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  null,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  null,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  null,  0,  inputStream.length);	  encoding    =    zipEncoding.encode(inputStream,    null);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
847	[BUG]  [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(zipEncoding,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(zipEncoding,  null);	  encoding    =    zipEncoding.encode(inputStream,    null);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
848	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.openZipEncoding();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.openZipEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.openZipEncoding();	  this.zipEncoding    =    inputStream.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
849	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  inputStream);	  this.in    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
850	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US);	  this.in    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
851	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  CRC32.UTF8);	  this.in    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
852	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  true);	  this.in    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
853	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(inputStream,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(inputStream,  zipEncoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
854	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRING,  inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_STRING,  inputStream);	  encoding    =    ZipEncodingHelper.UTF8_STRING;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
855	[BUG]  [BUGGY]  this.in  =  InputStream.fromInputStream(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  InputStream.fromInputStream(inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  InputStream.fromInputStream(inputStream,  encoding);	  this.in    =    InputStream.fromInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
856	[BUG]  [BUGGY]  this.in  =  InputStream.fromByteArray(inputStream);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  InputStream.fromByteArray(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  InputStream.fromByteArray(inputStream);	  this.in    =    InputStream.fromInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
857	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getTargetEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getTargetEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getTargetEncoding(encoding);	  this.zipEncoding    =    inputStream.getTargetEncoding();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
858	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCrc();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.getCrc();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCrc();	  this.zipEncoding    =    inputStream.getTarget();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
859	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  outputStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  outputStream;	  this.in    =    inputStream    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)inputStream).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
860	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUpperCase(ZipArchiveEntry.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toUpperCase(ZipArchiveEntry.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUpperCase(ZipArchiveEntry.DEFAULT_ENCODING);	  this.encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
861	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length)+  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length)+  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length)+  1;	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
862	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getCrcEncoding();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getCrcEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getCrcEncoding();	  encoding    =    ZipEncodingHelper.getZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
863	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  CRC32,  encoding);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  CRC32,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  CRC32,  encoding);	  this.entry    =    new    ZipInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
864	[BUG]  [BUGGY]  encoding  =  inputStream.encode(zipEncoding  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(zipEncoding  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(zipEncoding  +  1);	  encoding    =    inputStream.encode(zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
865	[BUG]  [BUGGY]  this.in  =  in  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  inputStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  in  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  in  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  inputStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getIn()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
866	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  inf,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  inf,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  inf,  zipEncoding);	  this.entry    =    new    ZipInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
867	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  Inflater.UTF8);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  Inflater.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  Inflater.UTF8);	  this.entry    =    new    ZipInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
868	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  inf  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  inf  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  inf  +  1);	  this.entry    =    new    ZipInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
869	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32.UTF8);    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
870	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32,  zipEncoding);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
871	[BUG]  [BUGGY]  this.zipEncoding  =  outputStream.encode(zipEncoding,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  outputStream.encode(zipEncoding,  0,  inputStream.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  outputStream.encode(zipEncoding,  0,  inputStream.length);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
872	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(encoding,  inputStream);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(encoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.getZipEncoding(encoding,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
873	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toExternalFormat();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toExternalFormat();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toExternalFormat();	  this.zipEncoding    =    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
874	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream.toByteArray();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream.toByteArray();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING  +  inputStream.toByteArray();	  this.zipEncoding    =    ZipEncodingHelper.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
875	[BUG]  [BUGGY]  this.inputStream  =  new  ZipArchiveInputStream(inputStream,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.inputStream  =  new  ZipArchiveInputStream(inputStream,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.inputStream  =  new  ZipArchiveInputStream(inputStream,  false);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
876	[BUG]  [BUGGY]  this.in  =  inputStream  }?  ZipEncodingHelper.UTF8):  zipEncoding;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  inputStream  }?  ZipEncodingHelper.UTF8):  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  }?  ZipEncodingHelper.UTF8):  zipEncoding;	  this.in    =    inputStream,    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
877	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8)+ "n ";  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8)+ "n ";  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8)+ "n ";	  this.zipEncoding    =    inputStream.encode(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
878	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.US_ZIP_ENCODING);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.US_ZIP_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.US_ZIP_ENCODING);	  this.zipEncoding    =    inputStream.encode(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
879	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  inf  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  inf  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  inf  +  1);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
880	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  inflater);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  inflater);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  inflater);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    inf);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
881	[BUG]  [BUGGY]  encoding  =  inputStream.encode(inputStream,  0,  zipEncoding.length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encode(inputStream,  0,  zipEncoding.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(inputStream,  0,  zipEncoding.length);	  encoding    =    zipEncoding.encode(inputStream,    0,    inputStream.length);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
882	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  /  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  /  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  /  1;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
883	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.ZIP_ENCODING  :  inputStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.ZIP_ENCODING  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream  <  null?  ZipEncodingHelper.ZIP_ENCODING  :  inputStream;	  this.zipEncoding    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
884	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(lockEncoding,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(lockEncoding,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(lockEncoding,  0);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
885	[BUG]  [BUGGY]  this.zipEncoding  =  in.encode(inputStream,  0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  in.encode(inputStream,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  in.encode(inputStream,  0);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
886	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  encoding,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  encoding,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  encoding,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
887	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+ ";n ";  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+ ";n ";  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8)+ ";n ";	  this.encoding    =    inputStream.getEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
888	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.DEFAULT_ENCODING);	  this.encoding    =    inputStream.getEncoding(ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
889	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE  +  inputStream.toByteArray();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE  +  inputStream.toByteArray();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE  +  inputStream.toByteArray();	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODE;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
890	[BUG]  [BUGGY]  encoding  =  inputStream.toUpperCase(JavaEncoding.UTF8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.toUpperCase(JavaEncoding.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toUpperCase(JavaEncoding.UTF8);	  encoding    =    inputStream.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
891	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.US);	  this.entry    =    new    ZipInputStream(inputStream,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
892	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUTF8(ZipArchiveEntry.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toUTF8(ZipArchiveEntry.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUTF8(ZipArchiveEntry.DEFAULT_ENCODING);	  this.encoding    =    inputStream.toUTF8();    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
893	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUTF8(ZipArchiveInputStream.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toUTF8(ZipArchiveInputStream.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUTF8(ZipArchiveInputStream.DEFAULT_ENCODING);	  this.encoding    =    inputStream.toUTF8();    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
894	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUTF8(ZipEncodingHelper.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.encoding  =  inputStream.toUTF8(ZipEncodingHelper.DEFAULT_ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUTF8(ZipEncodingHelper.DEFAULT_ENCODING);	  this.encoding    =    inputStream.toUTF8();    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
895	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF7);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF7);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF7);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    ZipEncodingHelper.UTF4);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
896	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  + "n ";  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  + "n ";  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ARRAY  + "n ";	  encoding    =    ZipEncodingHelper.ENCODING_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
897	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  + "/ ";  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY  + "/ ";  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ARRAY  + "/ ";	  encoding    =    ZipEncodingHelper.ENCODING_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
898	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32,  encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32,  encoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
899	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  encoding,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  encoding,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  encoding,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
900	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.ZipEncoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.ZipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.ZipEncoding);	  this.entry    =    new    ZipInputStream(inputStream,    encoding);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
901	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  in);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  in);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32.DEFAULT_ENCODING);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
902	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32.DEFAULT_ENCODING);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
903	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  false);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    false);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
904	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32,  zipEncoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
905	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32,  encoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32,  encoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    CRC32);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
906	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  buffer);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  buffer);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  buffer);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
907	[BUG]  [BUGGY]  this.zipEncoding  =  encodeZipEncoding(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  encodeZipEncoding(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  encodeZipEncoding(inputStream,  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
908	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar;	  encoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
909	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(crc,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.encode(crc,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(crc,  zipEncoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream,    crc);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
910	[BUG]  [BUGGY]  Encoding  crc  =  inputStream.encode(crc);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  Encoding  crc  =  inputStream.encode(crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  crc  =  inputStream.encode(crc);	  encoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
911	[BUG]  [BUGGY]  encoding  =  inputStream.encodeCrc(cref);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  inputStream.encodeCrc(cref);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encodeCrc(cref);	  encoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
912	[BUG]  [BUGGY]  encoding  =  this.zipEncoding.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  this.zipEncoding.encode(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  this.zipEncoding.encode(inputStream);	  encoding    =    crc.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
913	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding,  true);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream,    true);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
914	[BUG]  [BUGGY]  this.in  =  in  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  inputStream;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.in  =  in  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  in  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  inputStream;	  this.in    =    inputStream    instanceof    ZipArchiveInputStream?((    ZipArchiveInputStream)in).getInput()    :    inputStream;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
915	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DELAYED;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DELAYED;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_DELAYED;	  encoding    =    ZipEncodingHelper.ENCODING_KEY;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
916	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toUpperCase()  +  ZipEncodingHelper.UTF8_ENCODING.toString();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.zipEncoding  =  inputStream.toUpperCase()  +  ZipEncodingHelper.UTF8_ENCODING.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toUpperCase()  +  ZipEncodingHelper.UTF8_ENCODING.toString();	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING    +    inputStream.toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
917	[BUG]  [BUGGY]  this.entry  =  entryStream.read();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entryStream.read();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entryStream.read();	  this.entry    =    entryStream;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
918	[BUG]  [BUGGY]  this.entry  =  entryStream.toByteArray();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);      [BUGGY]  this.entry  =  entryStream.toByteArray();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entryStream.toByteArray();	  this.entry    =    entryStream;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
