bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  zipEncoding;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  1;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  1;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8_ENCODING,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toString();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream.toString();	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  zipEncoding);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
9	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  inputStream);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding(inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding(inputStream);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  0,  inputStream.length);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  zipEncoding.getInputStream(inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.getInputStream(inputStream);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  encoding  =  zipEncoding;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  zipEncoding;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding;	  encoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  encoding  =  inputStream;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream;	  encoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_0;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_0;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_0;	  encoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_START;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_START;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_START;	  encoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ARRAY;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ARRAY;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ARRAY;	  encoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getZipEncoding();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.getZipEncoding();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getZipEncoding();	  this.zipEncoding    =    inputStream.getParent();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
19	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePath();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePath();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getAbsolutePath();	  this.zipEncoding    =    inputStream.getParent();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
20	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getName();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.getName();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getName();	  this.zipEncoding    =    inputStream.getParent();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
21	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getTarget();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.getTarget();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getTarget();	  this.zipEncoding    =    inputStream.getParent();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
22	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getCharacterEncoding();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.getCharacterEncoding();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getCharacterEncoding();	  this.zipEncoding    =    inputStream.getParent();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
23	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getTargetEncoding();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.getTargetEncoding();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getTargetEncoding();	  this.zipEncoding    =    inputStream.getParent();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
24	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT_ZIP_ENCODING;	  this.zipEncoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  new  ZipEncoding(ZipEncodingHelper.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ARRAY;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ARRAY;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ARRAY;	  this.zipEncoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.getZipEncoding();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getZipEncoding();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  InputStream  in  =  inputStream.getInputStream();  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  InputStream  in  =  inputStream.getInputStream();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.getInputStream();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.encode(zipEncoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(zipEncoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
31	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  crc);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  crc);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  ZipEncodingHelper.UTF8);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  this.zipEncoding  =  crc.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  crc.encode(inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  crc.encode(inputStream);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  0);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  0);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  this.entry  =  entry;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  entry;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entry;	  this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  ZipEncodingHelper.UTF8);	  this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);	  this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
39	[BUG]  [BUGGY]  this.entry  =  entryStream;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  entryStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  entryStream;	  this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
40	[BUG]  [BUGGY]  encoding  =  inputStream.getZipEncoding();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  inputStream.getZipEncoding();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getZipEncoding();	  encoding    =    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  encoding  =  inputStream.getEncoding();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  inputStream.getEncoding();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getEncoding();	  encoding    =    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8);	  this.entry    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  zipEncoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  zipEncoding);	  this.entry    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  encoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  encoding);	  this.entry    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  0,  inputStream.length);	  this.entry    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  CRC32);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  CRC32);	  this.entry    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  inputStream);	  this.entry    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
48	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING  +  1;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING  +  1;	  encoding    =    ZipEncodingHelper.ENCODING;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_DEFAULT;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_DEFAULT;	  encoding    =    ZipEncodingHelper.ENCODING;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_KEY;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_KEY;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_KEY;	  encoding    =    ZipEncodingHelper.ENCODING;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING,  inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING,  inputStream);	  encoding    =    ZipEncodingHelper.ENCODING;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY;  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ARRAY;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ARRAY;	  encoding    =    ZipEncodingHelper.ENCODING;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  zipEncoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  encoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  encoding);	  this.entry    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  inputStream);	  this.entry    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  CRC32);	  this.entry    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  true);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  true);	  this.entry    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
58	[BUG]  [BUGGY]  this.encoding  =  inputStream.getCharacterEncoding();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.encoding  =  inputStream.getCharacterEncoding();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getCharacterEncoding();	  this.encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
59	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUpperCase();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.encoding  =  inputStream.toUpperCase();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUpperCase();	  this.encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
60	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding(ZipEncodingHelper.UTF8);	  this.encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
61	[BUG]  [BUGGY]  this.encoding  =  inputStream.toString();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.encoding  =  inputStream.toString();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toString();	  this.encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
62	[BUG]  [BUGGY]  this.encoding  =  inputStream.getEncoding()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.encoding  =  inputStream.getEncoding()  +  1;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getEncoding()  +  1;	  this.encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
63	[BUG]  [BUGGY]  this.encoding  =  inputStream.getCharset();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.encoding  =  inputStream.getCharset();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getCharset();	  this.encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
64	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding);	  this.entry    =    new    ZipArchiveEntry(inputStream);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding);	  this.entry    =    new    ZipArchiveEntry(inputStream);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  inputStream);	  this.entry    =    new    ZipArchiveEntry(inputStream);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32);	  this.entry    =    new    ZipArchiveEntry(inputStream);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  true);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING);  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  CRC32.DEFAULT_ENCODING);	  this.entry    =    new    ZipArchiveEntry(inputStream);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
70	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF8);	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
71	[BUG]  [BUGGY]  this.in  =  inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream,  ZipEncodingHelper.UTF8);	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
72	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream,  ZipEncodingHelper.UTF8);	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
73	[BUG]  [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  new  ZipArchiveInputStream(inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipArchiveInputStream(inputStream);	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
74	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  new  ZipInputStream(inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  new  ZipInputStream(inputStream);	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
75	[BUG]  [BUGGY]  this.in  =  InputStream.fromInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  InputStream.fromInputStream(inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  InputStream.fromInputStream(inputStream);	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
76	[BUG]  [BUGGY]  encoding  =  inputStream.encode(zipEncoding);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  inputStream.encode(zipEncoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.encode(zipEncoding);	  encoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
77	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  crc);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  crc);	  encoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
78	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  0,  inputStream.length);	  encoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
79	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  inputStream);	  encoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
80	[BUG]  [BUGGY]  encoding  =  crc.encode(inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  crc.encode(inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  crc.encode(inputStream);	  encoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
81	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  1);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  1);	  encoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
82	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  encoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  encoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
83	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(encoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  inputStream);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
85	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  zipEncoding);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
86	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
87	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  true);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
88	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  crc);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
89	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_ENCODING;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_ENCODING;	  encoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
90	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRING;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.UTF8_STRING;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8_STRING;	  encoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
91	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.UTF8  +  inputStream;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.UTF8  +  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.UTF8  +  inputStream;	  encoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
92	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  +  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
93	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODING  |  File.separatorChar;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
94	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  inputStream;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  inputStream;	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
95	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  inputStream;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  inputStream;	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
96	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  inputStream;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getOutputFile()  :  inputStream;	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
97	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  inputStream;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getEncoding()  :  inputStream;	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
98	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  inputStream;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)inputStream).getInput()  :  inputStream;	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
99	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  inputStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).readLine()  :  inputStream;	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
100	[BUG]  [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  inf);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipInputStream(inputStream,  inf);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipInputStream(inputStream,  inf);	  this.entry    =    new    ZipInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
101	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  this);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
102	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  true);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  true);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
103	[BUG]  [BUGGY]  this.encoding  =  inputStream.getZipEncoding();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.encoding  =  inputStream.getZipEncoding();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getZipEncoding();	  this.encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
104	[BUG]  [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.encoding  =  inputStream.getChars(0,  inputStream.length);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.getChars(0,  inputStream.length);	  this.encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
105	[BUG]  [BUGGY]  this.encoding  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.encoding  =  inputStream.readLine();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.readLine();	  this.encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
106	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  in);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  in);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  in);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
107	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  false);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
108	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  this);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  this);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  this);	  encoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
109	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  null);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  null);	  encoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
110	[BUG]  [BUGGY]  encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream!=  null?  ZipEncodingHelper.UTF8  :  inputStream;	  encoding    =    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
111	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  inf);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  inf);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  inf);	  this.entry    =    new    ZipArchiveEntry(inputStream);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
112	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveEntry();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry();	  this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
113	[BUG]  [BUGGY]  this.entry  =  in;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  in;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  in;	  this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
114	[BUG]  [BUGGY]  this.entry  =  inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  inputStream,  ZipEncodingHelper.UTF8);	  this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
115	[BUG]  [BUGGY]  InputStream  in  =  inputStream.openInputStream();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  InputStream  in  =  inputStream.openInputStream();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	InputStream  in  =  inputStream.openInputStream();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
116	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(zipEncoding);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.encodeZipEncoding(zipEncoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encodeZipEncoding(zipEncoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
117	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  inputStream);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  inputStream);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  inputStream);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
118	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  true);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  true);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
119	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  inf);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  inf);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  inf);	  this.entry    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
120	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF4);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF4);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  ZipEncodingHelper.UTF4);	  this.entry    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
121	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.getAbsolutePosition();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.getAbsolutePosition();	  this.zipEncoding    =    inputStream.getParent();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
122	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_ERROR;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_ERROR;	  encoding    =    ZipEncodingHelper.ENCODING;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
123	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_UTF8;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_UTF8;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_UTF8;	  encoding    =    ZipEncodingHelper.ENCODING;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
124	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8  +  inputStream;	  this.zipEncoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
125	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_ENCODE;	  this.zipEncoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
126	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_RANGE;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.UTF8_RANGE;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.UTF8_RANGE;	  this.zipEncoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
127	[BUG]  [BUGGY]  encoding  =  inputStream.toUpperCase();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  inputStream.toUpperCase();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.toUpperCase();	  encoding    =    ZipEncodingHelper.UTF8);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
128	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.getZipEncoding(inputStream,  CRC32.UTF8);	  this.zipEncoding    =    ZipEncodingHelper.getZipEncoding(inputStream);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
129	[BUG]  [BUGGY]  encoding  =  inputStream.getCharacterEncoding();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  inputStream.getCharacterEncoding();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  inputStream.getCharacterEncoding();	  encoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
130	[BUG]  [BUGGY]  this.encoding  =  inputStream.toUTF8();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.encoding  =  inputStream.toUTF8();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.encoding  =  inputStream.toUTF8();	  this.encoding    =    inputStream.getEncoding();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
131	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  in);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveInputStream(inputStream,  in);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveInputStream(inputStream,  in);	  this.entry    =    new    ZipArchiveInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
132	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZipEncodingHelper.DEFAULT;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZipEncodingHelper.DEFAULT;	  this.zipEncoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
133	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8;	  this.zipEncoding    =    ZipEncodingHelper.UTF8;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
134	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  null;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getInput()  :  null;	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
135	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  inputStream;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  inputStream;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveInputStream?((  ZipArchiveInputStream)in).getIn()  :  inputStream;	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
136	[BUG]  [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  null;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.in  =  inputStream  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)in).getInput()  :  null;	  this.in    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
137	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.encode(ZipEncodingHelper.UTF8);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
138	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  zipEncoding.encode(inputStream,  encoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  zipEncoding.encode(inputStream,  encoding);	  this.zipEncoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
139	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  ZIPEncodingHelper.UTF8_ENCODING;	  this.zipEncoding    =    ZipEncodingHelper.UTF8_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
140	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.ENCODING_GET;  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.ENCODING_GET;	  encoding    =    ZipEncodingHelper.ENCODING;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
141	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream.toString();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.zipEncoding  =  inputStream.toString();  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.zipEncoding  =  inputStream.toString();	  this.zipEncoding    =    inputStream.getParent();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
142	[BUG]  [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  Encoding  zipEncoding  =  inputStream.encode(zipEncoding);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	Encoding  zipEncoding  =  inputStream.encode(zipEncoding);	  encoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
143	[BUG]  [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  in);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  zipEncoding.encode(inputStream,  in);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  zipEncoding.encode(inputStream,  in);	  encoding    =    zipEncoding.encode(inputStream);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
144	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  ZipEncodingHelper.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
145	[BUG]  [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	encoding  =  ZipEncodingHelper.getInputStream(inputStream,  CRC32.UTF8);	  encoding    =    ZipEncodingHelper.getInputStream(inputStream);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
146	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  in);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ZipArchiveInputStream(final  InputStream  inputStream)  {  this(inputStream,  ZipEncodingHelper.UTF8);    [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  in);  [BUGGY]      [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  InputStream)  InputStream  inputStream  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  in);	  this.entry    =    new    ZipArchiveEntry(inputStream);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
