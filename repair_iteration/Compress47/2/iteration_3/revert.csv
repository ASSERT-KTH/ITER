projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=ae.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=entry.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getCurrentEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)a.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)a;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getValue()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)a.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.clonePath();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)a.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTree(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)a.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getObject();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryze=(ZipArchiveEntry)ae.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryze=(ZipArchiveEntry)ae.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryze=(ZipArchiveEntry)ae;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413intzeLen=ae.getLength();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.clonePosition();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data[0].clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataDescriptor();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryentry=(ZipArchiveEntry)ae.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryentry=(ZipArchiveEntry)ae.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryentry=(ZipArchiveEntry)ae;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryentry=(ZipArchiveEntry)ae;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneFile();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTree(1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTree(2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTree(5);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)a.cloneTree(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ArchiveEntryze=(ZipArchiveEntry)ae.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.clonePath();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413entry=(ZipArchiveEntry)ae.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.clonePosition();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryentry=(ZipArchiveEntry)ae.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryentry=(ZipArchiveEntry)ae.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ArchiveEntryentry=(ZipArchiveEntry)ae.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.clonePosition()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Entryentry=(ZipArchiveEntry)ae;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getLastChild();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.nextEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)a.data[0].clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data[1].clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data[0].getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)a.data[1].clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data[0].copy();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)a;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getCurrentEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryentry=(ZipArchiveEntry)ae.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getNext();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413intzeLen=ae.getLength()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413intzeLen=ae.getLength()*2;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413intzeLen=entryEncoding.getLength();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413intzeLen=ae.getLength()+2;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413intzeLen=entry.getLength();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getRawDataDescriptor();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.dataDescriptor;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getKey()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getValue()*1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413entry=(ZipArchiveEntry)ae.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.cloneFile();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=ae.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413entry=ae.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Entryentry=ae.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataImpl();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataBytes();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getValue()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)a.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413entry=(ZipArchiveEntry)ae.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)a.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTree(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.clonePath();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataImpl();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataBytes();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)a.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryentry=(ZipArchiveEntry)ae.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryze=(ZipArchiveEntry)ae.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryze=(ZipArchiveEntry)ae.getValue()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.clonePath()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)a;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryentry=(ZipArchiveEntry)ae.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryentry=(ZipArchiveEntry)ae.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryentry=(ZipArchiveEntry)ae.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryentry=(ZipArchiveEntry)ae;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryentry=(ZipArchiveEntry)a;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413entry=(ZipArchiveEntry)ae.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.getValue()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=ae==null?null:ae.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=ae!=null?null:ae.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=entryEncoding.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=entry.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=ae.getEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=ae.getEntryInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.clonePosition();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataRef();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataDescriptor();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data[0];
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryze=(ZipArchiveEntry)a;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getAncestor();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataResolver().clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.getData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getPosition();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data[0].get();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data[0].getData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data[0].getName();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data[0].copyInto(this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getObject();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.cloneTree(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getSource();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)e.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getValue(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)e.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryentry=(ZipArchiveEntry)a;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(zipArchiveEntry)a;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413entry=(ZipArchiveEntry)ae;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryentry=(ZipArchiveEntry)ae.getData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getSize();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataDescriptor(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413intzeLen=ae.getZipLength();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413intzeLen=ae.getHeaderLength();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=ae==null?ZipUtil.getInputStream(ae):ae.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=ae==null?ZipEncoding.getInstance():ae.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=ae==null?ZipEncoding.getInputStream(ae):ae.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.data[0].clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryze=(ZipArchiveEntry)ae.getData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryze=(ZipArchiveEntry)ae.data[0].clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryentry=(ZipArchiveEntry)ae.getData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataId();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413staticfinalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataReference();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.cloneTwin();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getCrc();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getElement();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413intzeLen=ae.getEntryLength();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413intzeLen=ae.getFileLength();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryentry=(ZipArchiveEntry)ae.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.getDataRef();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ZipArchiveEntryentry=(ZipArchiveEntry)ae.cloneTwin();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=ae==null?false:ae.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413Inflaterinf=ae==null?getInputStream():ae.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413finalZipArchiveEntryze=(ZipArchiveEntry)ae.data[0].getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java413ze=(ZipArchiveEntry)ae.cloneTwin();
