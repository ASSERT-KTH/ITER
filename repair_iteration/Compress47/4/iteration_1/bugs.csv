bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return!entry.getGeneralPurposeBit().usesZip64()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  boolean  supportsDataDescriptorFor(final  ZipArchiveEntry  entry)  {  [BUGGY]  return!entry.getGeneralPurposeBit().usesZip64()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [BUGGY]    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  ||  entry.getMethod()  ==  ZipEntry.DEFLATED  ||  entry.getMethod()  ==  ZipMethod.ENHANCED_DEFLATED.getCode();  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  supportsDataDescriptorFor  [RETURN_TYPE]  boolean  ZipArchiveEntry  entry  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  bis  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  count  diff  entriesRead  extraLen  fileNameLen  i  l  length  off  offset  read  toRead  versionMadeBy  x  long  TWO_EXP_32  bytesRead  bytesReadFromStream  csize  currentHeaderOffset  inB  max  n  pos  rem  remaining  size  skipped  time  value  byte[]  CFH  DD  LFH  b  buffer  expected  extraData  fileName  lfh  lfhBuf  missedLfhBytes  shortBuf  signature  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	return!entry.getGeneralPurposeBit().usesZip64()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)	return  !entry.getGeneralPurposeBit().usesDataDescriptor()    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  return  entry.getGeneralPurposeBit().usesDataDescriptor()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  boolean  supportsDataDescriptorFor(final  ZipArchiveEntry  entry)  {  [BUGGY]  return  entry.getGeneralPurposeBit().usesDataDescriptor()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [BUGGY]    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  ||  entry.getMethod()  ==  ZipEntry.DEFLATED  ||  entry.getMethod()  ==  ZipMethod.ENHANCED_DEFLATED.getCode();  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  supportsDataDescriptorFor  [RETURN_TYPE]  boolean  ZipArchiveEntry  entry  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  bis  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  count  diff  entriesRead  extraLen  fileNameLen  i  l  length  off  offset  read  toRead  versionMadeBy  x  long  TWO_EXP_32  bytesRead  bytesReadFromStream  csize  currentHeaderOffset  inB  max  n  pos  rem  remaining  size  skipped  time  value  byte[]  CFH  DD  LFH  b  buffer  expected  extraData  fileName  lfh  lfhBuf  missedLfhBytes  shortBuf  signature  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	return  entry.getGeneralPurposeBit().usesDataDescriptor()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)	return  !entry.getGeneralPurposeBit().usesDataDescriptor()    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  return  entry.getGeneralPurposeBit().usesDataDescriptor()  &&(allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  boolean  supportsDataDescriptorFor(final  ZipArchiveEntry  entry)  {  [BUGGY]  return  entry.getGeneralPurposeBit().usesDataDescriptor()  &&(allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [BUGGY]    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  ||  entry.getMethod()  ==  ZipEntry.DEFLATED  ||  entry.getMethod()  ==  ZipMethod.ENHANCED_DEFLATED.getCode();  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  supportsDataDescriptorFor  [RETURN_TYPE]  boolean  ZipArchiveEntry  entry  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  bis  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  count  diff  entriesRead  extraLen  fileNameLen  i  l  length  off  offset  read  toRead  versionMadeBy  x  long  TWO_EXP_32  bytesRead  bytesReadFromStream  csize  currentHeaderOffset  inB  max  n  pos  rem  remaining  size  skipped  time  value  byte[]  CFH  DD  LFH  b  buffer  expected  extraData  fileName  lfh  lfhBuf  missedLfhBytes  shortBuf  signature  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	return  entry.getGeneralPurposeBit().usesDataDescriptor()  &&(allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)	return  !entry.getGeneralPurposeBit().usesDataDescriptor()    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  return!entry.getGeneralPurposeBit().usesDataDescriptor(true)||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  private  boolean  supportsDataDescriptorFor(final  ZipArchiveEntry  entry)  {  [BUGGY]  return!entry.getGeneralPurposeBit().usesDataDescriptor(true)||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [BUGGY]    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  ||  entry.getMethod()  ==  ZipEntry.DEFLATED  ||  entry.getMethod()  ==  ZipMethod.ENHANCED_DEFLATED.getCode();  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  supportsDataDescriptorFor  [RETURN_TYPE]  boolean  ZipArchiveEntry  entry  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  bis  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  count  diff  entriesRead  extraLen  fileNameLen  i  l  length  off  offset  read  toRead  versionMadeBy  x  long  TWO_EXP_32  bytesRead  bytesReadFromStream  csize  currentHeaderOffset  inB  max  n  pos  rem  remaining  size  skipped  time  value  byte[]  CFH  DD  LFH  b  buffer  expected  extraData  fileName  lfh  lfhBuf  missedLfhBytes  shortBuf  signature  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	return!entry.getGeneralPurposeBit().usesDataDescriptor(true)||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)	return  !entry.getGeneralPurposeBit().usesDataDescriptor()    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  private  boolean  supportsDataDescriptorFor(final  ZipArchiveEntry  entry)  {  [BUGGY]    [BUGGY]    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  ||  entry.getMethod()  ==  ZipEntry.DEFLATED  ||  entry.getMethod()  ==  ZipMethod.ENHANCED_DEFLATED.getCode();  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  supportsDataDescriptorFor  [RETURN_TYPE]  boolean  ZipArchiveEntry  entry  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  bis  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  count  diff  entriesRead  extraLen  fileNameLen  i  l  length  off  offset  read  toRead  versionMadeBy  x  long  TWO_EXP_32  bytesRead  bytesReadFromStream  csize  currentHeaderOffset  inB  max  n  pos  rem  remaining  size  skipped  time  value  byte[]  CFH  DD  LFH  b  buffer  expected  extraData  fileName  lfh  lfhBuf  missedLfhBytes  shortBuf  signature  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	  	return  !entry.getGeneralPurposeBit().usesDataDescriptor()    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  return!entry.getGeneralPurposeBit().hasDataDescriptor()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  boolean  supportsDataDescriptorFor(final  ZipArchiveEntry  entry)  {  [BUGGY]  return!entry.getGeneralPurposeBit().hasDataDescriptor()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [BUGGY]    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  ||  entry.getMethod()  ==  ZipEntry.DEFLATED  ||  entry.getMethod()  ==  ZipMethod.ENHANCED_DEFLATED.getCode();  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  supportsDataDescriptorFor  [RETURN_TYPE]  boolean  ZipArchiveEntry  entry  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  bis  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  count  diff  entriesRead  extraLen  fileNameLen  i  l  length  off  offset  read  toRead  versionMadeBy  x  long  TWO_EXP_32  bytesRead  bytesReadFromStream  csize  currentHeaderOffset  inB  max  n  pos  rem  remaining  size  skipped  time  value  byte[]  CFH  DD  LFH  b  buffer  expected  extraData  fileName  lfh  lfhBuf  missedLfhBytes  shortBuf  signature  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	return!entry.getGeneralPurposeBit().hasDataDescriptor()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)	return  !entry.getGeneralPurposeBit().usesDataDescriptor()    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  return  entry.getGeneralPurposeBit().usesZip64()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  boolean  supportsDataDescriptorFor(final  ZipArchiveEntry  entry)  {  [BUGGY]  return  entry.getGeneralPurposeBit().usesZip64()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [BUGGY]    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  ||  entry.getMethod()  ==  ZipEntry.DEFLATED  ||  entry.getMethod()  ==  ZipMethod.ENHANCED_DEFLATED.getCode();  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  supportsDataDescriptorFor  [RETURN_TYPE]  boolean  ZipArchiveEntry  entry  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  bis  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  count  diff  entriesRead  extraLen  fileNameLen  i  l  length  off  offset  read  toRead  versionMadeBy  x  long  TWO_EXP_32  bytesRead  bytesReadFromStream  csize  currentHeaderOffset  inB  max  n  pos  rem  remaining  size  skipped  time  value  byte[]  CFH  DD  LFH  b  buffer  expected  extraData  fileName  lfh  lfhBuf  missedLfhBytes  shortBuf  signature  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	return  entry.getGeneralPurposeBit().usesZip64()  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)	return  !entry.getGeneralPurposeBit().usesDataDescriptor()    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  return!entry.getGeneralPurposeBit().usesDataDescriptor()  &&  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  boolean  supportsDataDescriptorFor(final  ZipArchiveEntry  entry)  {  [BUGGY]  return!entry.getGeneralPurposeBit().usesDataDescriptor()  &&  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [BUGGY]    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  ||  entry.getMethod()  ==  ZipEntry.DEFLATED  ||  entry.getMethod()  ==  ZipMethod.ENHANCED_DEFLATED.getCode();  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  supportsDataDescriptorFor  [RETURN_TYPE]  boolean  ZipArchiveEntry  entry  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  bis  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  count  diff  entriesRead  extraLen  fileNameLen  i  l  length  off  offset  read  toRead  versionMadeBy  x  long  TWO_EXP_32  bytesRead  bytesReadFromStream  csize  currentHeaderOffset  inB  max  n  pos  rem  remaining  size  skipped  time  value  byte[]  CFH  DD  LFH  b  buffer  expected  extraData  fileName  lfh  lfhBuf  missedLfhBytes  shortBuf  signature  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	return!entry.getGeneralPurposeBit().usesDataDescriptor()  &&  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)	return  !entry.getGeneralPurposeBit().usesDataDescriptor()    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  return!entry.getGeneralPurposeBit().usesDataDescriptor(ze)||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  boolean  supportsDataDescriptorFor(final  ZipArchiveEntry  entry)  {  [BUGGY]  return!entry.getGeneralPurposeBit().usesDataDescriptor(ze)||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [BUGGY]    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  ||  entry.getMethod()  ==  ZipEntry.DEFLATED  ||  entry.getMethod()  ==  ZipMethod.ENHANCED_DEFLATED.getCode();  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  supportsDataDescriptorFor  [RETURN_TYPE]  boolean  ZipArchiveEntry  entry  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  bis  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  count  diff  entriesRead  extraLen  fileNameLen  i  l  length  off  offset  read  toRead  versionMadeBy  x  long  TWO_EXP_32  bytesRead  bytesReadFromStream  csize  currentHeaderOffset  inB  max  n  pos  rem  remaining  size  skipped  time  value  byte[]  CFH  DD  LFH  b  buffer  expected  extraData  fileName  lfh  lfhBuf  missedLfhBytes  shortBuf  signature  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	return!entry.getGeneralPurposeBit().usesDataDescriptor(ze)||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)	return  !entry.getGeneralPurposeBit().usesDataDescriptor()    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  return!entry.getGeneralPurposeBit().usesDataDescriptor  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  boolean  supportsDataDescriptorFor(final  ZipArchiveEntry  entry)  {  [BUGGY]  return!entry.getGeneralPurposeBit().usesDataDescriptor  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  [BUGGY]    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  ||  entry.getMethod()  ==  ZipEntry.DEFLATED  ||  entry.getMethod()  ==  ZipMethod.ENHANCED_DEFLATED.getCode();  }  [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  supportsDataDescriptorFor  [RETURN_TYPE]  boolean  ZipArchiveEntry  entry  [VARIABLES]  ZipEncoding  entryEncoding  zipEncoding  CRC32  crc  InputStream  bis  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  count  diff  entriesRead  extraLen  fileNameLen  i  l  length  off  offset  read  toRead  versionMadeBy  x  long  TWO_EXP_32  bytesRead  bytesReadFromStream  csize  currentHeaderOffset  inB  max  n  pos  rem  remaining  size  skipped  time  value  byte[]  CFH  DD  LFH  b  buffer  expected  extraData  fileName  lfh  lfhBuf  missedLfhBytes  shortBuf  signature  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  firstEntry  hasDataDescriptor  hasUTF8Flag  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  ze  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	return!entry.getGeneralPurposeBit().usesDataDescriptor  ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)	return  !entry.getGeneralPurposeBit().usesDataDescriptor()    ||  (allowStoredEntriesWithDataDescriptor  &&  entry.getMethod()  ==  ZipEntry.STORED)  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
