projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>current:inputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,userUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getKeys()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getChildren()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor||useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193While(!useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(encoding,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("".equals(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields()){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<finalString,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.getEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current:inputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=current;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getKeys()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:outputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue(),encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue()-1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,userUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.DEFAULT_ZIP_ENCODING;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=CRC32.zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getValues()){this.encoding=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,0,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();for(finalZipArchiveEntry<K,V>entry:entry.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();for(finalZipArchiveEntry<K,V>entry:entry.getKey()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.toString();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.inputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.in=newZipInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getKey()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntrySet();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntrySet();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()+encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields?zipEncoding:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding+useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encodeZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!allowStoredEntries){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=useUnicodeExtraFields?this:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(outputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(zipEncoding,inputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getLastStoredEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.encoding=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>current=inputStream.getValues();this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>current:outputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,useUnicodeExtraFields,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(null,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEntryList();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:outputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntryentry:inputStream.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);this.entry=inputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("".equalsIgnoreCase(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("".equals(encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.entrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntry()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<finalString,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.data;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntryList();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getValues());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getAllValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entries){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){this.zipEncoding=newZipEncoding(useUnicodeExtraFields);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){this.zipEncoding=newZipEncoding(useUnicodeExtraFields);}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){this.zipEncoding=newZipEncoding(useUnicodeExtraFields);}else{thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){this.zipEncoding=newZipEncoding(useUnicodeExtraFields);}else{inputStream.setZip64(encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){this.zipEncoding=newZipEncoding(useUnicodeExtraFields);}else{inputStream.defaultInputStream();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryCount()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getValue()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryBytes()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntry(0)){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entries){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntryentry:this.entries){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntryentry:this.entries){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(zipEncoding,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,inputStream,zipEncoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,zipEncoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,0,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(inputStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,usingUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,usedUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields,true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.data,encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,usingUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,usedUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.getZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.getZipEncoding(encoding,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.getZipEncoding(encoding,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.getZipEncoding(encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.getZipEncoding(encoding,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.getZipEncoding(encoding,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding.getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntry(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getValues(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,null,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,current);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,crc);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(zipEncoding,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,this.zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,zipEncoding,this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntry(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryBytes();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryCount();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields(useUnicodeExtraFields)){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields(encoding)){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields(),useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193SafeUseUnicodeExtraFields()){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUnicodeExtraFields()){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.readLine()-1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.readLine()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.readLine()&&useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.readLine(),encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException(""+encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException(""+encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("ZipArchiveInputStreamisnotaninstanceoftype:"+encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("ZipArchiveInputStreamisnotaninstanceoftype."+encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("ZipArchiveInputStreamisnotsupportedasadirectory.");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<finalString,Object>entry=inputStream.getEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<finalString,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<finalString,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<finalString,Object>entry=inputStream.getEntries();this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor(encoding){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor(encoding,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193enableStoredEntriesWithDataDescriptor(encoding){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.inputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryCount()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:in.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,usingUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,usedUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,null,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();for(finalZipArchiveEntry<K,V>entry:entry.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();for(finalZipArchiveEntry<K,V>entry:entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();for(finalZipArchiveEntry<K,V>entry:entry.getKey()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntry<K,V>current:inputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getCurrentEntry()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getSize()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:in.getKeys()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getRawKeys()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getFirstStoredEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getLastChildEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getLastSegmentedEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getLastSecondStoredEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getLastStoredEntry(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getLastStoredEntry()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntry(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntries(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntriesByName(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,encoding,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getValue()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getValue(),encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEndValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getImplicitValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getRawValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getValue(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.getValue(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.getCurrentEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.getValues()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.getRawValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.getValues()-1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getKey()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getEndValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getRawValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getKey()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getFields()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=this.inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getRawValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getValues(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193staticfinalZipArchiveEntry<K,V>current=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getValue(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntry(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getKey()&&encoding.equals(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,0,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,0,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,inputStream,0,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,0,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,0,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,0,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<finalString,Object>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<finalObject,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<finalString,Object>entry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<finalString,Object>entry:this.inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<?extendsObject>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<finalString,Object>entry:in.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.openStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getOutputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getImplicitReturn();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entries){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.get}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,outputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(outputStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(outputStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,usedUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,usingUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getFields()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(ENCODING,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.convertZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.generateZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.generateZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZIPEncodingUtilities.getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.outputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:outputStream.getEntryList()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:zipEncoding.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:outputStream.getEntryList()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(ENCODING);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<String,Object>entry:this.inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<Object,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<String,Object>entry:in.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.read();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEntryRaw();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getValue()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.inputStream.getChildren()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getFields()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getValue()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.inputStream.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entry.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.keySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,crc);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:this.outputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:entryStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:outputStream.getAllValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193staticfinalZipArchiveEntry<K,V>current:inputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getValues());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current:inputStream.getEndValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt(this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt(inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt(null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt(threadBuffer);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt(threadBuffer,threadBuffer);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,zipEncoding,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getValues();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getValues();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getValue();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,useUnicodeExtraFields,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,userUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(inputStream,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,inputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,inputStream,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,outputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,in);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(null,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,null,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(null,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(null,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(crc,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193||!allowStoredEntries){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntries||useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntries(current){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntries=false;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntries(){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntries=true;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.encoding=entry.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.encoding=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.encoding=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();this.encoding=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.encoding=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:in.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryCount()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getValue()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(inputStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields,false,inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,0,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,false,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,true));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,false));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,zipEncoding));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,this));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,0,encoding.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,0,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,usedUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(ENCODING,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!useUnicodeExtraFields){finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<String,Object>entry=inputStream.getEntries();this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<String,Object>entry=inputStream.getEntries();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEntry(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntrySet();this.entry=entry.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntry();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntrySet();this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntry();this.entry=entry.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,userUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193While(!this.allowStoredEntries){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193AssertionError(encoding,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193while(!useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193AssertionError(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193SafeUseUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.safeUseUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields,useUnicodeExtraFields){returnnewZipArchiveInputStream(inputStream,encoding,useUnicodeExtraFields);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getValues();this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding+useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding+encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding+zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields+zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding+useUnicodeExtraFields,encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding+usageUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entries.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entries.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,0,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,encoding,0,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(ENCODING,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,encoding,inputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntryentry:inputStream.getValue()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getKey();for(finalZipArchiveEntryentry:entry.getValue()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.toString()+encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.toString()+"n";
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.toUpperCase();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.toString(),encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:in.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getFields()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntry()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getInputStream(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.toInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.readInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193enableStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(ENCODING,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.convertZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.convertZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getEntries()){this.encoding=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry:inputStream.getValues()){this.encoding=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getKey()){this.encoding=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getValues()){this.encoding=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.encoding=entry.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:in.getValues()){this.encoding=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,false,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,usingUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,null,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding?zipEncoding:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding?useUnicodeExtraFields:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields?zipEncoding:encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding?useUnicodeExtraFields:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getEntry(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getEntryBytes();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getEntry(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue(),encoding,useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue(),encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue(),encoding,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue(),encoding,userUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue(),encoding,userUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(ENCODING,inputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,useUnicodeExtraFields,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=current.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=current.getCurrentEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=current.in;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=current.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=current.inputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=current.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=current.next;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding.toUpperCase();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding.trim();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZIP_ENCODING;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()/encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue()+encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()+encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()+encoding,useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()*encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue()/1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue(),useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue()*1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=outputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current:outputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>current=outputStream.getValues();this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entry.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:in.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,null,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,current);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=inputStream?this:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=this?useUnicodeExtraFields:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=useUnicodeExtraFields?this:inputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=encoding?this:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=useUnicodeExtraFields?null:useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntries();this.entry=entry.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntries();this.entry=entry.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor,zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),encoding,useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),encoding,userUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),encoding,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),encoding,userUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.clone();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.cloneEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.clonePath();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()-1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getValue()-1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getValue()-1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entries){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entries.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:in.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:this.inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryCount()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntries(encoding)){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptorclosed){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193||!allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Context.checkState(!allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor=allowStoredEntriesWithDataDescriptor;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptorclosed){thrownewIllegalStateException("".equals(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,encoding,useUnicodeExtraFields,isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields,isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.toInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,0,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.in=newZipInputStream(inputStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.in=newZipInputStream(inputStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.in=newZipInputStream(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.in=newZipInputStream(inputStream,encoding,useUnicodeExtraFields,isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.in=newZipInputStream(inputStream,encoding,useUnicodeExtraFields,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.in=newZipInputStream(inputStream,encoding,0,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryImpl();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,0,encoding.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,0,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,0,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEncoding();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()/1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getKey()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),useUnicodeExtraFields+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor,zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor,this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor,isZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,true,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,generator,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields?ZipEncoding.DEFAULT_ZIP_ENCODING:zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields?ZipEncoding.DEFAULT_ZIP_ENCODING:encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields?ZipEncoding.DEFAULT_ZIP_ENCODING:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:in.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.entrySet()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.entry.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:in.entrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.inputStream.entrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.values()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.keySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalInputStreamhasDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor){returnnewZipArchiveInputStream(inputStream,encoding,useUnicodeExtraFields);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor){thrownewIllegalStateException("".getMessage());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamin){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor){returnnewZipArchiveInputStream(inputStream,encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor){returnnewZipArchiveInputStream(inputStream);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry:in.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry:this.inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<Object,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry:inputStream.getValues()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:in.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.entry.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.inputStream;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();for(finalZipArchiveEntry<K,V>entry:entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding,userUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding,inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getEntry(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValue(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.getEntry(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.getEntryCount();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.getEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.getEntry(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.getEntryBytes();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getValue()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getValue(),encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.inputStream.getEntryList()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:in.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntriesByTag()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(ENCODING,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(encoding,useUnicodeExtraFields,true){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(encoding,useUnicodeExtraFields,false){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193reader.readFully(encoding,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(encoding,encoding,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193ReadFully(encoding,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getValues(),encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getValues(),useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getValues()+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getValues(),true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getValues(),inputStream.getCharset());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getKey());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getValues(),inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntryList(),encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntryList()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getEntryList();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getImplicitValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getZip64();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getAsZip64();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getAsZip64();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.inputStream.getKeys()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:in.getKeys()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,true,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(ENCODING,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,this,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getEntries()){this.
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getEntries()){this.entry=entry
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntry(encoding)){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntryCount()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encodeZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encodeZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=getZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields,isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,this.isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,isEnabled,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor&&useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193enableStoredEntriesWithDataDescriptor||useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.DEFAULT_ZIP_ENCODING+encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.DEFAULT_ZIP_ENCODING,encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.DEFAULT_ZIP_ENCODING,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.DEFAULT_ZIP_ENCODING|File.separatorChar;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.DEFAULT_ZIP_ENCODING+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:in.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:this.inputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:in.readLine()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entries.getKey()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getName()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,false,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(ENCODING,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,false,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,false,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readFully();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=encoding.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.openStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readUTF();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readInt();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readLine()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=insertZip64(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=insertZip64Entry(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);this.entry=entry;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("ZipArchiveInputStreamisnotavalidZipEncodingextension.");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getEntry(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor||useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193While(!useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(encoding,useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalArgumentException("".equals(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(encoding){thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalArgumentException(encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.inputStream.getAllValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getUpperBounds()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getAllEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(this,inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(ENCODING,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(outputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(entryStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entries.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getValu
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=crc.zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=CRC32Crc.zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=cmd.zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=CRC32.ZipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getValues();this.current=current;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193current=inputStream.getValues();this.current=current;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193luate(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193enableStoredEntriesWithDataDescriptor(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntry()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(userUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntryCount()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntry()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntryName()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor||useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193enableStoredEntriesWithDataDescriptor&&useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<finalObject,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntrySet();this.entry=entry.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!allowStoredEntries||useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor=useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(entryStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(outputStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(this,inputStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(outputStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(outputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(InputStream.DEFAULT,inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!closed){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("".);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,usedUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,useZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,userUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getValue();for(finalZipArchiveEntry<K,V>entry:entry.getKey()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(entryStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(this,inputStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:outputStream.getFields()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:outputStream.getValues()){this.current=inputStream;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:outputStream.getData()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(isEnabled,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,zipEncoding,isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getLastLocalFileEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getLastCharEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getAllValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<finalString,Object>entry:inputStream.getValues()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getCurrentEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.read();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(inputStream,encoding,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(inputStream,encoding){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(this,encoding,useUnicodeExtraFields,this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current:inputStream.getFields()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current:inputStream.getAllValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=insertZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encodeZipEncoding(useUnicodeExtraFields,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor){thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(inputStream){thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getEntries()){this.entry
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getEntries()){this.
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getChildren()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.getValues(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.nextEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getDataEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.toZip64();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.toString();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.toURI();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntryentry:inputStream.getValue()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(zipEncoding,inputStream,0,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,user);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.getEntryList();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.getEntries(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(isEnabled,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEndValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getFields()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.read();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getImplicitReturn();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(inputStream,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getKey();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getValu
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryinputStream=inputStream.getValue();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryinputStream=inputStream.getValue();for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(inputStream,encoding,useUnicodeExtraFields,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readLine()&&useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readLine()-1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream!=null?inputStream.readLine():0;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.cloneTree(inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream!=null?null:inputStream.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream==null?null:inputStream.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getInputStream(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,usingUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();this.entries=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntries();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(outputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.get}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryinputStream=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getkey()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntryValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntryCount();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntryBytes(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();for(finalZipArchiveEntry<K,V>entry:entry.getValu
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry){thrownewIllegalStateException("".equals(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,this.allowStoredEntriesWithDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,usesZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(entryStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,0,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,usedZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,useZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getEntryValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getEntry(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getEntry(encoding).getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntriesByteBuffer();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntriesInflater();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.getZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.getZipEncoding(encoding,userUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getData()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getSeconds()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getCrc()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);this.entry=in;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);this.entry=entryStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=useUnicodeExtraFields?this:outputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.DEFAULT_ZIP_ENCTION;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.DEFAULT_ZIP_ENCODING+useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.DEFAULT_ZIP_ENCODING+File.separatorChar+encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=inputStream+useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding+usingUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=in+useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntriesBytes()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntries(encoding)){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(zipEncoding,inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt(inputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt(this,inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream!=null?null:inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getInputStreamValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.read();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getImplicitReturn();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=CRC32.zipEncoding+useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=CRC32Util.zipEncoding(crc);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntryentry:inputStream.getValues()){this.encoding=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getFields()){this.encoding=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryNames()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<String,Object>entry:inputStream.getValues()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193secureUseUnicodeExtraFields()){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeLimitExtraFields()){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getImplicitReturn()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getKey(),encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),encoding+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),encoding+useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntries(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.UTF8;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryinputStream=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getKey();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getKey()
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields?zipEncoding:inputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,userUnicodeExtraFields,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(userUnicodeExtraFields,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,userUnicodeExtraFields,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.in=newZipInputStream(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getValue();for(finalZipArchiveEntry<K,V>entry:entry.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getValue()){this.entry
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193while(!this.allowStoredEntries){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193While(!this.allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193While(!useUnicodeExtraFields&&inputStream!=null){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=!useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()+useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getKey()+encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue(),useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue(),encoding+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getChildren()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,user);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,in);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<String,Object>entry:inputStream.getUpperBounds()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<String,Object>entry=inputStream.getEntries();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.entrySet()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getKey();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryinputStream=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getInput();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEndEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getImplicitReturnValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,null,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193enableStoredEntriesWithDataDescriptor,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.lastStoredEntry){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:getZipEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getImplicitReturn();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(null,inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(this,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(null,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.encoding=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,inputStream,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,inputStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,outputStream,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getChildren()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.entrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(useUnicodeExtraFields,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(useUnicodeExtraFields,inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(useUnicodeExtraFields,useZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(zipEncoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(useUnicodeExtraFields,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.encoding=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.encoding=inputStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.read();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,0,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.readLine());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getValues(),false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getValues(),userUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(zipEncoding,inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue()+2;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryinputStream=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.getValu
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.getValue()
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamin=inputStream.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getValues();this.current=newCurrentEntry(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>current=inputStream.getValues()+1;this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(this.zipEncoding,inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntryentry:inputStream.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry){thrownewIllegalStateException("".equals(encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry:inStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry:inputStream.getEntries(encoding)){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(inputStream,encoding,useUnicodeExtraFields,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,inputStream,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields?ZipEncoding.ZIP_ENCODING:zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields?ZipEncoding.UTF8:ZipEncoding.UTF8;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntryentry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,inputStream,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,0,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,inputStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193For(finalZipArchiveEntry<K,V>entry:inputStream.entrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry){thrownewIllegalStateException("".equalsIgnoreCase(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor,useUnicodeExtraFields){thrownewIllegalStateException("".equalsIgnoreCase(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor,useUnicodeExtraFields){thrownewIllegalStateException("").equalsIgnoreCase(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,usingZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,usesZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getUpperBound();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,usedZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newCurrentEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=outputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor){thrownewUnsupportedOperationException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor){returnnewZipArchiveInputStream(inputStream,encoding,useUnicodeExtraFields,false);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<String,Object>entry:this.inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entry.getChildren()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,usingUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entry.getAllValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getChronology();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=outputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=insertZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.openStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryNames()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntryBytes();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.toByteArray();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.openDirectory;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193ReadFully(inputStream,encoding,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(encoding,useUnicodeExtraFields){thrownewRuntimeException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,encoding,usingUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZIPEncoding.DEFAULT_ZIP_ENCODING;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreaminputStream=inputStream.getValues();this.current=current;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEntryCount();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getLastLocalDestination();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.decodeZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.encodeZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEntryBytes();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("".equals(encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entries){this.entry=entry.clone();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:zipEntries){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entries){this.entry=entry.toString();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=outputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.toByteArray();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(ENCODING,encoding,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,usingUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,null,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getEntry().getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("".equalsIgnoreCase(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("UseUnicodeExtraFields:".equalsIgnoreCase(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntries(useUnicodeExtraFields)){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntries(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntries(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193thrownewIllegalStateException("");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.openDirectory();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.openArchiveEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(zipEncoding,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=entryStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.readValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.getEntryBytes(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.encoding.getValues()){this.encoding=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryLength()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.read();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:encoding.getEntries()){this.encoding=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,1.0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193While(!allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193while(!this.allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,useZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.asZip64();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding+usingUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding+applyUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.read();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(useUnicodeExtraFields,inputStream,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.entry.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry:this.entry.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,this,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current:entryStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getField();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=CRC32.zipEncoding+encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entries.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryFactory();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,this,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor,closed){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor){returnnewZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newCurrentEntry(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newCurrentEntry(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=currentEntry.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entry.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryBytes(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.entry.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:this.entry.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,this,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,this,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.entry.entrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entry.getKeys()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()-encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getKey();}}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getName();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryLength()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()*1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding<null?ZipEncoding.DEFAULT_ZIP_ENCODING:encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding<null?ZipEncoding.UTF8:encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding<null?ZipEncoding.US_ZIP_ENCODING:encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,usingUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,null,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getValues();for(finalZipArchiveEntryentry:this.lastStoredEntry.getValues()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entries.getValues()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.read());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:this.entry.getEntryList()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();for(finalZipArchiveEntry<K,V>entry:entries.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamin=inputStream.getInputStream();for(finalZipArchiveEntryentry:in.read()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:this.encoding){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=useUnicodeExtraFields?this:in;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=useUnicodeExtraFields?this:newZipArchiveInputStream(inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=useUnicodeExtraFields?this:newFileInputStream(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding,usingUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,zipEncoding,isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entry.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getEntryNames()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<finalString,Object>entry:this.entry.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding?useUnicodeExtraFields:zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getImplicitReturn();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntryNames()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValueEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValueDesc();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalArgumentException("".);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("".equals(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193inthasDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getData()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntrySet();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream!=null?inputStream.getInputStream():encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!allowStoredEntriesWithDataDescriptor||useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor=false;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor=useUnicodeExtraFields?getCentralDirectory():null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<finalString,Object>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(ENCODING,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields()){thrownewRuntimeException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,0,encoding.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,1.0,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getEnd()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193This.entry=entry.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:entries.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:this.entry.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:this.entry.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:this.inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193staticfinalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getValues();for(finalZipArchiveEntryentry:this.lastStoredEntry.getKey()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:this.entry.getKey()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:entryStream.getKeys()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getEndKeys()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getChildren()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getAllEntries()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.convertZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.loadZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readLine()&&encoding.equals(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readLine(),useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readLine()&&!useUnicodeExtraFields;
