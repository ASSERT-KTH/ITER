bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
2	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  inputStream.close();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  inputStream.close();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  inputStream.close();  }	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
3	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
4	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  inputStream.setZip64(encoding);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  inputStream.setZip64(encoding);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  inputStream.setZip64(encoding);  }	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
5	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  inputStream.defaultInputStream();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  inputStream.defaultInputStream();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields);  }  else  {  inputStream.defaultInputStream();  }	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
6	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntry())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
7	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntry())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
8	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryBytes())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryBytes())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryBytes())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntry())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
9	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry(0))  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry(0))  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry(0))  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntry())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
10	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    this.entries)    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
11	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    this.entries)    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
12	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    this.entries)    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
13	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(zipEncoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
14	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  zipEncoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  zipEncoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  zipEncoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(zipEncoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
15	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  zipEncoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(zipEncoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
16	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding,  useUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
17	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
18	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
19	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usedUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usedUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usedUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
20	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  false);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
21	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  true,  false);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  true,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  true,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
22	[BUG]  [BUGGY]  this.entry  =  entry.data,  encoding;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.data,  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.data,  encoding;	  this.entry    =    entry.data;    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
23	[BUG]  [BUGGY]  this.entry  =  entry.getData();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getData();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getData();	  this.entry    =    entry.data;    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
24	[BUG]  [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
25	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  false);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
26	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
27	[BUG]  [BUGGY]  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  false);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
28	[BUG]  [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  false);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
29	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncoding.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
30	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  0);	  this.zipEncoding    =    ZipEncoding.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
31	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  encoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  encoding);	  this.zipEncoding    =    ZipEncoding.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
32	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  true);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  true);	  this.zipEncoding    =    ZipEncoding.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
33	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  false);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  false);	  this.zipEncoding    =    ZipEncoding.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
34	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  null);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  null);	  this.zipEncoding    =    ZipEncoding.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
35	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding.getZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  zipEncoding.getZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  zipEncoding.getZipEncoding(encoding);	  this.zipEncoding    =    ZipEncoding.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
36	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryValues();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryValues();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
37	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry(encoding);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry(encoding);	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
38	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues(encoding);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues(encoding);	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
39	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry();  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
40	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.readLine();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
41	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getKey();  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getKey();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getKey();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
42	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  this);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
43	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  null,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  null,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  null,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
44	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  current);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  current);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  current);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
45	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  crc);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  crc);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
46	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntrySet())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntrySet())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntrySet())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntrySet())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
47	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntrySet())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntrySet())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntrySet())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntrySet())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
48	[BUG]  [BUGGY]  new  ZipArchiveEntry(zipEncoding,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(zipEncoding,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(zipEncoding,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
49	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this.zipEncoding);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this.zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this.zipEncoding);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
50	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  this);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  this);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
51	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry(0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry(0);	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
52	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryBytes();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryBytes();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryBytes();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
53	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryCount();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryCount();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryCount();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
54	[BUG]  [BUGGY]  safeUseUnicodeExtraFields(useUnicodeExtraFields))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  safeUseUnicodeExtraFields(useUnicodeExtraFields))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	safeUseUnicodeExtraFields(useUnicodeExtraFields))  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
55	[BUG]  [BUGGY]  safeUseUnicodeExtraFields(encoding))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  safeUseUnicodeExtraFields(encoding))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	safeUseUnicodeExtraFields(encoding))  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
56	[BUG]  [BUGGY]  safeUseUnicodeExtraFields(),  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  safeUseUnicodeExtraFields(),  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	safeUseUnicodeExtraFields(),  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
57	[BUG]  [BUGGY]  SafeUseUnicodeExtraFields())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  SafeUseUnicodeExtraFields())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	SafeUseUnicodeExtraFields())  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
58	[BUG]  [BUGGY]  safeUnicodeExtraFields())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  safeUnicodeExtraFields())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	safeUnicodeExtraFields())  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
59	[BUG]  [BUGGY]  this.entry  =  entry.readLine()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.readLine()  -  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.readLine()  -  1;	  this.entry    =    entry.readLine();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
60	[BUG]  [BUGGY]  this.entry  =  entry.readLine()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.readLine()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.readLine()  +  1;	  this.entry    =    entry.readLine();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
61	[BUG]  [BUGGY]  this.entry  =  entry.readLine()  &&  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.readLine()  &&  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.readLine()  &&  useUnicodeExtraFields;	  this.entry    =    entry.readLine();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
62	[BUG]  [BUGGY]  this.entry  =  entry.readLine(),  encoding;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.readLine(),  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.readLine(),  encoding;	  this.entry    =    entry.readLine();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
63	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " "  +  encoding);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " "  +  encoding);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " "  +  encoding);  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
64	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
65	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " "  +  encoding);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " "  +  encoding);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " "  +  encoding);  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
66	[BUG]  [BUGGY]  lastStoredEntry)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
67	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  an  instance  of  type: "  +  encoding);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  an  instance  of  type: "  +  encoding);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  an  instance  of  type: "  +  encoding);  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
68	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  an  instance  of  type. "  +  encoding);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  an  instance  of  type. "  +  encoding);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  an  instance  of  type. "  +  encoding);  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
69	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  supported  as  a  directory. ");  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  supported  as  a  directory. ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  supported  as  a  directory. ");  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
70	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  final  String,  Object>  entry  =  inputStream.getEntries();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  final  String,  Object>  entry  =  inputStream.getEntries();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  final  String,  Object>  entry  =  inputStream.getEntries();	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
71	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
72	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
73	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  final  String,  Object>  entry  =  inputStream.getEntries();  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  final  String,  Object>  entry  =  inputStream.getEntries();  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  final  String,  Object>  entry  =  inputStream.getEntries();  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
74	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  false);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
75	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
76	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor(encoding)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor(encoding)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor(encoding)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
77	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
78	[BUG]  [BUGGY]  enableStoredEntriesWithDataDescriptor(encoding)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  enableStoredEntriesWithDataDescriptor(encoding)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	enableStoredEntriesWithDataDescriptor(encoding)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
79	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
80	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntryList())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntryList())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntryList())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
81	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
82	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntryList())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntryList())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntryList())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
83	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
84	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
85	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  false);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
86	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
87	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  false);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
88	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  null,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  null,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  null,  useUnicodeExtraFields,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
89	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntryList();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getValue())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
90	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntryList();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getValue())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
91	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getKey())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getKey())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getKey())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntryList();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getValue())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
92	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getValues())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
93	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getCurrentEntry())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getCurrentEntry())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getCurrentEntry())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
94	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getSize())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getSize())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getSize())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
95	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  in.getKeys())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  in.getKeys())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  in.getKeys())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
96	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getRawKeys())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getRawKeys())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getRawKeys())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
97	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getFirstStoredEntry();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getFirstStoredEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getFirstStoredEntry();	  lastStoredEntry    =    inputStream.getLastStoredEntry();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
98	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getLastChildEntry();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getLastChildEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getLastChildEntry();	  lastStoredEntry    =    inputStream.getLastStoredEntry();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
99	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getLastSegmentedEntry();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getLastSegmentedEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getLastSegmentedEntry();	  lastStoredEntry    =    inputStream.getLastStoredEntry();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
100	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getLastSecondStoredEntry();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getLastSecondStoredEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getLastSecondStoredEntry();	  lastStoredEntry    =    inputStream.getLastStoredEntry();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
101	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getLastStoredEntry(encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getLastStoredEntry(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getLastStoredEntry(encoding);	  lastStoredEntry    =    inputStream.getLastStoredEntry();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
102	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getLastStoredEntry()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getLastStoredEntry()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getLastStoredEntry()  +  1;	  lastStoredEntry    =    inputStream.getLastStoredEntry();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
103	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntry(encoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntry(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntry(encoding);	  this.entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
104	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntries(encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntries(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntries(encoding);	  this.entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
105	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntry();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntry();	  this.entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
106	[BUG]  [BUGGY]  this.entry  =  entryStream.getEntries();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream.getEntries();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream.getEntries();	  this.entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
107	[BUG]  [BUGGY]  this.entry  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.readLine();	  this.entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
108	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntriesByName(encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntriesByName(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntriesByName(encoding);	  this.entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
109	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  false);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
110	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
111	[BUG]  [BUGGY]  this.entry  =  inputStream.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getValue()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getValue()  +  1;	  this.entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
112	[BUG]  [BUGGY]  this.entry  =  inputStream.getValue(),  encoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getValue(),  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getValue(),  encoding;	  this.entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
113	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEndValue();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEndValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEndValue();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
114	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getImplicitValue();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getImplicitValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getImplicitValue();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
115	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getRawValue();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getRawValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getRawValue();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
116	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue(encoding);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue(encoding);	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
117	[BUG]  [BUGGY]  this.current  =  inputStream.getValue();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  inputStream.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  inputStream.getValue();	  this.current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
118	[BUG]  [BUGGY]  this.current  =  inputStream.getValue(encoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  inputStream.getValue(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  inputStream.getValue(encoding);	  this.current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
119	[BUG]  [BUGGY]  this.current  =  inputStream.getCurrentEntry();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  inputStream.getCurrentEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  inputStream.getCurrentEntry();	  this.current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
120	[BUG]  [BUGGY]  this.current  =  inputStream.getValues()  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  inputStream.getValues()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  inputStream.getValues()  +  1;	  this.current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
121	[BUG]  [BUGGY]  this.current  =  inputStream.getRawValues();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  inputStream.getRawValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  inputStream.getRawValues();	  this.current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
122	[BUG]  [BUGGY]  this.current  =  inputStream.getValues()  -  1;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  inputStream.getValues()  -  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  inputStream.getValues()  -  1;	  this.current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
123	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getKey())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getKey())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getKey())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getKey())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
124	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getKey())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
125	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getKey())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
126	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getKey())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
127	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getEndValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getEndValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getEndValues())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
128	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getRawValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getRawValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getRawValues())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
129	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getKey())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getKey())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getKey())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
130	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getFields())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getFields())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getFields())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
131	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.readLine();	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
132	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  this.inputStream.getValues();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  this.inputStream.getValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  this.inputStream.getValues();	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
133	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getRawValues();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getRawValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getRawValues();	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
134	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues(encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues(encoding);	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
135	[BUG]  [BUGGY]  static  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  static  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	static  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues();	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
136	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValue(encoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValue(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValue(encoding);	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
137	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntry(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntry(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntry(encoding,  useUnicodeExtraFields);	  this.entry    =    inputStream.getKey();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
138	[BUG]  [BUGGY]  this.entry  =  inputStream.getKey()  &&  encoding.equals(useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getKey()  &&  encoding.equals(useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getKey()  &&  encoding.equals(useUnicodeExtraFields);	  this.entry    =    inputStream.getKey();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
139	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    0,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
140	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  encoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    0,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
141	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  0,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  0,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  0,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    0,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
142	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  useUnicodeExtraFields,  false);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    0,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
143	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  useUnicodeExtraFields,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    0,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
144	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  useUnicodeExtraFields,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  useUnicodeExtraFields,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  0,  useUnicodeExtraFields,  hasDataDescriptor);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    0,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
145	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
146	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  final  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  final  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  final  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
147	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
148	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
149	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <?  extends  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <?  extends  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <?  extends  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
150	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  in.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  in.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  in.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
151	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getKey())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getKey())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getKey())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
152	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
153	[BUG]  [BUGGY]  this.inputStream  =  inputStream.openStream();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.openStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.openStream();	  this.inputStream    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
154	[BUG]  [BUGGY]  this.inputStream  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.readLine();	  this.inputStream    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
155	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getOutputStream();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getOutputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getOutputStream();	  this.inputStream    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
156	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getImplicitReturn();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getImplicitReturn();	  this.inputStream    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
157	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getKey();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getKey();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getKey();	  this.inputStream    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
158	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
159	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
160	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
161	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries)  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries)  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries)  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
162	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
163	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
164	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  outputStream,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  outputStream,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  outputStream,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(outputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
165	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  true);	  this.entry    =    new    ZipArchiveEntry(outputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
166	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  false);	  this.entry    =    new    ZipArchiveEntry(outputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
167	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(outputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
168	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(outputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
169	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getFields())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getFields())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getFields())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
170	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
171	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.convertZipEncoding(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.convertZipEncoding(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.convertZipEncoding(encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
172	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.generateZipEncoding(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.generateZipEncoding(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.generateZipEncoding(encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
173	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.generateZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.generateZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.generateZipEncoding(encoding);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
174	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncodingUtilities.getZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZIPEncodingUtilities.getZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZIPEncodingUtilities.getZipEncoding(encoding);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
175	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.outputStream.getEntryList())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.outputStream.getEntryList())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.outputStream.getEntryList())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    outputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
176	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  outputStream.getEntryList())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  outputStream.getEntryList())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  outputStream.getEntryList())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    outputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
177	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    outputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
178	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  zipEncoding.getEntryList())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  zipEncoding.getEntryList())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  zipEncoding.getEntryList())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    outputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
179	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  outputStream.getEntryList())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  outputStream.getEntryList())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  outputStream.getEntryList())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    outputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
180	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(0);	  this.zipEncoding    =    new    ZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
181	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  true);	  this.zipEncoding    =    new    ZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
182	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ENCODING);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ENCODING);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(ENCODING);	  this.zipEncoding    =    new    ZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
183	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  false);	  this.zipEncoding    =    new    ZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
184	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
185	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
186	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
187	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
188	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  String,  Object>  entry  :  in.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  String,  Object>  entry  :  in.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  String,  Object>  entry  :  in.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
189	[BUG]  [BUGGY]  this.inputStream  =  inputStream.read();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.read();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.read();	  this.inputStream    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
190	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getEntryRaw();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getEntryRaw();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getEntryRaw();	  this.inputStream    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
191	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getChildren())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
192	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getChildren())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getChildren())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.inputStream.getChildren())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getChildren())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
193	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getFields())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getFields())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getFields())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getChildren())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
194	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
195	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getKey())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getKey())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.inputStream.getKey())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
196	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getKey())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getKey())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.entry.getKey())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
197	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.keySet())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.keySet())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.keySet())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
198	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  0);	  this.zipEncoding    =    new    ZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
199	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  crc);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  crc);	  this.zipEncoding    =    new    ZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
200	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  encoding);	  this.zipEncoding    =    new    ZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
201	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
202	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  this.outputStream.getValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  this.outputStream.getValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  this.outputStream.getValues())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    outputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
203	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  entryStream.getValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  entryStream.getValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  entryStream.getValues())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    outputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
204	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getAllValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getAllValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getAllValues())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    outputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
205	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues())  {  this.current  =  current;  }	  final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
206	[BUG]  [BUGGY]  static  final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  static  final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	static  final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getValues())  {  this.current  =  current;  }	  final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
207	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues());  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues());	  final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
208	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getEndValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getEndValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getEndValues())  {  this.current  =  current;  }	  final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
209	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  Thread.currentThread().interrupt(this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	Thread.currentThread().interrupt(this);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
210	[BUG]  [BUGGY]  Thread.currentThread().interrupt(inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  Thread.currentThread().interrupt(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	Thread.currentThread().interrupt(inputStream);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
211	[BUG]  [BUGGY]  Thread.currentThread().interrupt(null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  Thread.currentThread().interrupt(null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	Thread.currentThread().interrupt(null);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
212	[BUG]  [BUGGY]  Thread.currentThread().interrupt(false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  Thread.currentThread().interrupt(false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	Thread.currentThread().interrupt(false);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
213	[BUG]  [BUGGY]  Thread.currentThread().interrupt(threadBuffer);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  Thread.currentThread().interrupt(threadBuffer);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	Thread.currentThread().interrupt(threadBuffer);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
214	[BUG]  [BUGGY]  Thread.currentThread().interrupt(threadBuffer,  threadBuffer);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  Thread.currentThread().interrupt(threadBuffer,  threadBuffer);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	Thread.currentThread().interrupt(threadBuffer,  threadBuffer);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
215	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  null);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
216	[BUG]  [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  null);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
217	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues();  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues();  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues();  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
218	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
219	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
220	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue();  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue();  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue();  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
221	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    userUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
222	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    userUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
223	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    userUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
224	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  0);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  0);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    userUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
225	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  userUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  userUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  userUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    userUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
226	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
227	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
228	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  encoding);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
229	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  outputStream,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  outputStream,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  outputStream,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
230	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  in);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  in);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
231	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
232	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  true);	  this.entry    =    new    ZipArchiveEntry(null,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
233	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  null,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  null,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  null,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(null,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
234	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  false);	  this.entry    =    new    ZipArchiveEntry(null,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
235	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);	  this.entry    =    new    ZipArchiveEntry(null,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
236	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(crc,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(crc,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(crc,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(null,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
237	[BUG]  [BUGGY]  ||!allowStoredEntries)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  ||!allowStoredEntries)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	||!allowStoredEntries)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
238	[BUG]  [BUGGY]  allowStoredEntries  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntries  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntries  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
239	[BUG]  [BUGGY]  allowStoredEntries(current)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntries(current)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntries(current)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
240	[BUG]  [BUGGY]  allowStoredEntries  =  false;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntries  =  false;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntries  =  false;	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
241	[BUG]  [BUGGY]  allowStoredEntries()  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntries()  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntries()  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
242	[BUG]  [BUGGY]  allowStoredEntries  =  true;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntries  =  true;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntries  =  true;	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
243	[BUG]  [BUGGY]  this.encoding  =  entry.getValue();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.encoding  =  entry.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.encoding  =  entry.getValue();	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.encoding    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
244	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.encoding    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
245	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.encoding    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
246	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.encoding  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.encoding  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.encoding  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.encoding    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
247	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.encoding    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
248	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
249	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryCount())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryCount())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryCount())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
250	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
251	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
252	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  false,  inputStream);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  false,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  false,  inputStream);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
253	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
254	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  false,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  false,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  false,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
255	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  true));  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  true));  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  true));	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
256	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  false));  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  false));  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  false));	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
257	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor));  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor));  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor));	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
258	[BUG]  [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields));  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields));  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields));	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
259	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding));  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding));  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding));	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
260	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this));  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this));  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this));	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
261	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.inputStream.getValues())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
262	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
263	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  1);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
264	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  encoding.length);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  encoding.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  encoding.length);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
265	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
266	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  false);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  false);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
267	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  4);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  4);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
268	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  2);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  2);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
269	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usedUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usedUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usedUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
270	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  encoding,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
271	[BUG]  [BUGGY]  if(!useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(!useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(!useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
272	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries();  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries();  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries();  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
273	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
274	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getEntry(encoding);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getEntry(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getEntry(encoding);	  this.inputStream    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
275	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getEntry();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getEntry();	  this.inputStream    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
276	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getValue();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getValue();	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntrySet();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
277	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry();  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry();  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry();  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntrySet();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
278	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntrySet();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
279	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry();  this.entry  =  entry.getValue();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry();  this.entry  =  entry.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntry();  this.entry  =  entry.getValue();	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntrySet();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
280	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  userUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  userUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  userUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    userUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
281	[BUG]  [BUGGY]  While(!this.allowStoredEntries)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  While(!this.allowStoredEntries)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	While(!this.allowStoredEntries)  {  throw  new  IllegalStateException( " ");  }	  While(!useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
282	[BUG]  [BUGGY]  AssertionError(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  AssertionError(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	AssertionError(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  While(!useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
283	[BUG]  [BUGGY]  while(!useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  while(!useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	while(!useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  While(!useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
284	[BUG]  [BUGGY]  AssertionError(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  AssertionError(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	AssertionError(encoding,  useUnicodeExtraFields);	  While(!useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
285	[BUG]  [BUGGY]  safeUseUnicodeExtraFields,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  safeUseUnicodeExtraFields,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	safeUseUnicodeExtraFields,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
286	[BUG]  [BUGGY]  SafeUseUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  SafeUseUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	SafeUseUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
287	[BUG]  [BUGGY]  this.safeUseUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.safeUseUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.safeUseUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
288	[BUG]  [BUGGY]  safeUseUnicodeExtraFields,  useUnicodeExtraFields)  {  return  new  ZipArchiveInputStream(inputStream,  encoding,  useUnicodeExtraFields);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  safeUseUnicodeExtraFields,  useUnicodeExtraFields)  {  return  new  ZipArchiveInputStream(inputStream,  encoding,  useUnicodeExtraFields);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	safeUseUnicodeExtraFields,  useUnicodeExtraFields)  {  return  new  ZipArchiveInputStream(inputStream,  encoding,  useUnicodeExtraFields);  }	  safeUseUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
289	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
290	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues();  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues();  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValues();  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
291	[BUG]  [BUGGY]  this.zipEncoding  =  encoding  +  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding  +  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding  +  useUnicodeExtraFields;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
292	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding  +  encoding;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  zipEncoding  +  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  zipEncoding  +  encoding;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
293	[BUG]  [BUGGY]  this.zipEncoding  =  encoding  +  zipEncoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding  +  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding  +  zipEncoding;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
294	[BUG]  [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields  +  zipEncoding;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields  +  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  useUnicodeExtraFields  +  zipEncoding;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
295	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding  +  useUnicodeExtraFields,  encoding;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  zipEncoding  +  useUnicodeExtraFields,  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  zipEncoding  +  useUnicodeExtraFields,  encoding;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
296	[BUG]  [BUGGY]  this.zipEncoding  =  encoding  +  usageUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding  +  usageUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding  +  usageUnicodeExtraFields;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
297	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryValue();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryValue();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
298	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
299	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getKey())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getKey())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getKey())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
300	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getKey())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getKey())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getKey())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
301	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
302	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
303	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
304	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
305	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  0,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  0,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  0,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
306	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(ENCODING,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(ENCODING,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(ENCODING,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
307	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  inputStream,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  inputStream,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  inputStream,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
308	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
309	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValue())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValue())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValue())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
310	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getKey();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getKey();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getKey();	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
311	[BUG]  [BUGGY]  this.entry  =  entry.toString()  +  encoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.toString()  +  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.toString()  +  encoding;	  this.entry    =    entry.toString();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
312	[BUG]  [BUGGY]  this.entry  =  entry.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.toString()  + "n ";  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.toString()  + "n ";	  this.entry    =    entry.toString();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
313	[BUG]  [BUGGY]  this.entry  =  entry.toUpperCase();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.toUpperCase();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.toUpperCase();	  this.entry    =    entry.toString();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
314	[BUG]  [BUGGY]  this.entry  =  entry.toString(),  encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.toString(),  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.toString(),  encoding);	  this.entry    =    entry.toString();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
315	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  in.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  in.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  in.getValues())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
316	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getFields())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getFields())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getFields())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
317	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
318	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getInputStream(encoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getInputStream(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getInputStream(encoding);	  this.inputStream    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
319	[BUG]  [BUGGY]  this.inputStream  =  inputStream.toInputStream();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.toInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.toInputStream();	  this.inputStream    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
320	[BUG]  [BUGGY]  this.inputStream  =  inputStream.readInputStream();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.readInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.readInputStream();	  this.inputStream    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
321	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
322	[BUG]  [BUGGY]  enableStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  enableStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	enableStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
323	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(ENCODING,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(ENCODING,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(ENCODING,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
324	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
325	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.convertZipEncoding(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.convertZipEncoding(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.convertZipEncoding(encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
326	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.convertZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.convertZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.convertZipEncoding(encoding);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
327	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.encoding    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
328	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.encoding    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
329	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getKey())  {  this.encoding  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getKey())  {  this.encoding  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getKey())  {  this.encoding  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.encoding    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
330	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.encoding    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
331	[BUG]  [BUGGY]  this.encoding  =  entry.getKey();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.encoding  =  entry.getKey();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.encoding  =  entry.getKey();	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.encoding    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
332	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  in.getValues())  {  this.encoding  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  in.getValues())  {  this.encoding  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  in.getValues())  {  this.encoding  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.encoding    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
333	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getValue())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
334	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  false,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  false,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  false,  useUnicodeExtraFields);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
335	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
336	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  null,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  null,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  null,  useUnicodeExtraFields,  false);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
337	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  false,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  false,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  false,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
338	[BUG]  [BUGGY]  this.zipEncoding  =  encoding?  zipEncoding  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding?  zipEncoding  :  null;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding?  zipEncoding  :  null;	  this.zipEncoding    =    useUnicodeExtraFields?    zipEncoding    :    null;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
339	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding?  useUnicodeExtraFields  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  zipEncoding?  useUnicodeExtraFields  :  null;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  zipEncoding?  useUnicodeExtraFields  :  null;	  this.zipEncoding    =    useUnicodeExtraFields?    zipEncoding    :    null;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
340	[BUG]  [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  zipEncoding  :  encoding;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  zipEncoding  :  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  useUnicodeExtraFields?  zipEncoding  :  encoding;	  this.zipEncoding    =    useUnicodeExtraFields?    zipEncoding    :    null;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
341	[BUG]  [BUGGY]  this.zipEncoding  =  encoding?  useUnicodeExtraFields  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding?  useUnicodeExtraFields  :  null;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding?  useUnicodeExtraFields  :  null;	  this.zipEncoding    =    useUnicodeExtraFields?    zipEncoding    :    null;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
342	[BUG]  [BUGGY]  this.entry  =  entry.getEntry(encoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getEntry(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getEntry(encoding);	  this.entry    =    entry.getEntry();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
343	[BUG]  [BUGGY]  this.entry  =  entry.getEntryBytes();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getEntryBytes();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getEntryBytes();	  this.entry    =    entry.getEntry();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
344	[BUG]  [BUGGY]  this.entry  =  entry.getEntry(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getEntry(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getEntry(0);	  this.entry    =    entry.getEntry();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
345	[BUG]  [BUGGY]  this.entry  =  entryStream.getEntry();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream.getEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream.getEntry();	  this.entry    =    entry.getEntry();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
346	[BUG]  [BUGGY]  this.entry  =  entry.getValue(),  encoding,  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue(),  encoding,  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue(),  encoding,  useUnicodeExtraFields;	  this.entry    =    entry.getValue(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
347	[BUG]  [BUGGY]  this.entry  =  entry.getValue(),  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue(),  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue(),  encoding,  useUnicodeExtraFields);	  this.entry    =    entry.getValue(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
348	[BUG]  [BUGGY]  this.entry  =  entry.getValue(),  encoding,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue(),  encoding,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue(),  encoding,  null);	  this.entry    =    entry.getValue(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
349	[BUG]  [BUGGY]  this.entry  =  entry.getValue(),  encoding,  userUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue(),  encoding,  userUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue(),  encoding,  userUnicodeExtraFields);	  this.entry    =    entry.getValue(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
350	[BUG]  [BUGGY]  this.entry  =  entry.getValue(),  encoding,  userUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue(),  encoding,  userUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue(),  encoding,  userUnicodeExtraFields;	  this.entry    =    entry.getValue(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
351	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(inputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
352	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  inputStream,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  inputStream,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  inputStream,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(inputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
353	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    new    ZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
354	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  true);	  this.zipEncoding    =    new    ZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
355	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    new    ZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
356	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  true);	  this.zipEncoding    =    new    ZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
357	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    new    ZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
358	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  0);	  this.zipEncoding    =    new    ZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
359	[BUG]  [BUGGY]  this.current  =  current.getValue();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  current.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  current.getValue();	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
360	[BUG]  [BUGGY]  this.current  =  current.getCurrentEntry();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  current.getCurrentEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  current.getCurrentEntry();	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
361	[BUG]  [BUGGY]  this.current  =  current.in;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  current.in;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  current.in;	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
362	[BUG]  [BUGGY]  this.current  =  current.cloneTree();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  current.cloneTree();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  current.cloneTree();	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
363	[BUG]  [BUGGY]  this.current  =  current.inputStream;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  current.inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  current.inputStream;	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
364	[BUG]  [BUGGY]  this.current  =  current.clone();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  current.clone();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  current.clone();	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
365	[BUG]  [BUGGY]  this.current  =  current.next;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  current.next;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  current.next;	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
366	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.inputStream.getValues())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
367	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
368	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
369	[BUG]  [BUGGY]  this.zipEncoding  =  encoding.toUpperCase();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding.toUpperCase();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding.toUpperCase();	  this.zipEncoding    =    encoding;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
370	[BUG]  [BUGGY]  this.zipEncoding  =  encoding.trim();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding.trim();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding.trim();	  this.zipEncoding    =    encoding;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
371	[BUG]  [BUGGY]  this.zipEncoding  =  ZIP_ENCODING;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZIP_ENCODING;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZIP_ENCODING;	  this.zipEncoding    =    encoding;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
372	[BUG]  [BUGGY]  this.entry  =  entry.getKey()  /  encoding;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey()  /  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey()  /  encoding;	  this.entry    =    entry.getKey()    +    encoding;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
373	[BUG]  [BUGGY]  this.entry  =  entry.getValue()  +  encoding;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue()  +  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue()  +  encoding;	  this.entry    =    entry.getKey()    +    encoding;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
374	[BUG]  [BUGGY]  this.entry  =  entry.getKey()  +  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey()  +  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey()  +  encoding,  useUnicodeExtraFields);	  this.entry    =    entry.getKey()    +    encoding;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
375	[BUG]  [BUGGY]  this.entry  =  entry.getKey()  +  encoding,  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey()  +  encoding,  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey()  +  encoding,  useUnicodeExtraFields;	  this.entry    =    entry.getKey()    +    encoding;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
376	[BUG]  [BUGGY]  this.entry  =  entry.getKey()  *  encoding;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey()  *  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey()  *  encoding;	  this.entry    =    entry.getKey()    +    encoding;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
377	[BUG]  [BUGGY]  this.entry  =  entry.getValue()  /  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue()  /  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue()  /  1;	  this.entry    =    entry.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
378	[BUG]  [BUGGY]  this.entry  =  entry.getValue(),  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue(),  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue(),  useUnicodeExtraFields);	  this.entry    =    entry.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
379	[BUG]  [BUGGY]  this.entry  =  entry.getValue()  *  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue()  *  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue()  *  1;	  this.entry    =    entry.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
380	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  outputStream.getValues();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  outputStream.getValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  outputStream.getValues();	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    current    :    outputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
381	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getValues())  {  this.current  =  current;  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    current    :    outputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
382	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  current  =  outputStream.getValues();  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  current  =  outputStream.getValues();  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  current  =  outputStream.getValues();  this.current  =  current;  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    current    :    outputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
383	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
384	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
385	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  in.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  in.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  in.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
386	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
387	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  this);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  this);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
388	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  null,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  null,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  null,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
389	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  current);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  current);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  current);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
390	[BUG]  [BUGGY]  InputStream  hasDataDescriptor  =  inputStream?  this  :  null;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor  =  inputStream?  this  :  null;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor  =  inputStream?  this  :  null;	  InputStream    hasDataDescriptor    =    useUnicodeExtraFields?    this    :    null;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
391	[BUG]  [BUGGY]  InputStream  hasDataDescriptor  =  this?  useUnicodeExtraFields  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor  =  this?  useUnicodeExtraFields  :  null;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor  =  this?  useUnicodeExtraFields  :  null;	  InputStream    hasDataDescriptor    =    useUnicodeExtraFields?    this    :    null;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
392	[BUG]  [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  inputStream;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  inputStream;	  InputStream    hasDataDescriptor    =    useUnicodeExtraFields?    this    :    null;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
393	[BUG]  [BUGGY]  InputStream  hasDataDescriptor  =  encoding?  this  :  null;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor  =  encoding?  this  :  null;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor  =  encoding?  this  :  null;	  InputStream    hasDataDescriptor    =    useUnicodeExtraFields?    this    :    null;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
394	[BUG]  [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  null  :  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  null  :  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  null  :  useUnicodeExtraFields;	  InputStream    hasDataDescriptor    =    useUnicodeExtraFields?    this    :    null;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
395	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
396	[BUG]  [BUGGY]  if(!useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(!useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(!useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
397	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
398	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getKey();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getKey();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getKey();	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
399	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
400	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
401	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasZip64);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasZip64);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
402	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  zipEncoding);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
403	[BUG]  [BUGGY]  this.entry  =  entry.getKey(),  encoding,  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey(),  encoding,  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey(),  encoding,  useUnicodeExtraFields;	  this.entry    =    entry.getKey(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
404	[BUG]  [BUGGY]  this.entry  =  entry.getKey(),  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey(),  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey(),  encoding,  useUnicodeExtraFields);	  this.entry    =    entry.getKey(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
405	[BUG]  [BUGGY]  this.entry  =  entry.getKey(),  encoding,  userUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey(),  encoding,  userUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey(),  encoding,  userUnicodeExtraFields;	  this.entry    =    entry.getKey(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
406	[BUG]  [BUGGY]  this.entry  =  entry.getKey(),  encoding,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey(),  encoding,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey(),  encoding,  null);	  this.entry    =    entry.getKey(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
407	[BUG]  [BUGGY]  this.entry  =  entry.getKey(),  encoding,  userUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey(),  encoding,  userUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey(),  encoding,  userUnicodeExtraFields);	  this.entry    =    entry.getKey(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
408	[BUG]  [BUGGY]  this.entry  =  entry.clone();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.clone();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.clone();	  this.entry    =    entry.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
409	[BUG]  [BUGGY]  this.entry  =  entry.cloneEntry();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.cloneEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.cloneEntry();	  this.entry    =    entry.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
410	[BUG]  [BUGGY]  this.entry  =  entry.clonePath();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.clonePath();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.clonePath();	  this.entry    =    entry.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
411	[BUG]  [BUGGY]  this.entry  =  entry.getKey()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey()  -  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey()  -  1;	  this.entry    =    entry.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
412	[BUG]  [BUGGY]  this.entry  =  inputStream.getValue()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getValue()  -  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getValue()  -  1;	  this.entry    =    entry.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
413	[BUG]  [BUGGY]  this.entry  =  entryStream.getValue()  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream.getValue()  -  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream.getValue()  -  1;	  this.entry    =    entry.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
414	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
415	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries)  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries)  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries)  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
416	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
417	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
418	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
419	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryCount())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryCount())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryCount())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
420	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries(encoding))  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries(encoding))  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries(encoding))  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
421	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor  closed)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor  closed)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor  closed)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
422	[BUG]  [BUGGY]  ||!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  ||!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	||!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
423	[BUG]  [BUGGY]  Context.checkState(!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  Context.checkState(!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	Context.checkState(!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
424	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor  =  allowStoredEntriesWithDataDescriptor;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor  =  allowStoredEntriesWithDataDescriptor;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor  =  allowStoredEntriesWithDataDescriptor;	  if(!allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
425	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor  closed)  {  throw  new  IllegalStateException( " ".equals(encoding));  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor  closed)  {  throw  new  IllegalStateException( " ".equals(encoding));  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor  closed)  {  throw  new  IllegalStateException( " ".equals(encoding));  }	  if(!allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
426	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  isEnabled);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  isEnabled);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields,  isEnabled);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    isEnabled);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
427	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  isEnabled);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  isEnabled);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  isEnabled);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    isEnabled);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
428	[BUG]  [BUGGY]  this.entry  =  entryStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream;	  this.entry    =    entry.inputStream;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
429	[BUG]  [BUGGY]  this.entry  =  entry.toInputStream();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.toInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.toInputStream();	  this.entry    =    entry.inputStream;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
430	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  inputStream);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
431	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  encoding);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  encoding);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
432	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  true);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  true);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
433	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  true);	  this.in    =    new    ZipInputStream(inputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
434	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  false);	  this.in    =    new    ZipInputStream(inputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
435	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);	  this.in    =    new    ZipInputStream(inputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
436	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  isEnabled);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  isEnabled);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  isEnabled);	  this.in    =    new    ZipInputStream(inputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
437	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  null);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  null);	  this.in    =    new    ZipInputStream(inputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
438	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  0,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  0,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.in  =  new  ZipInputStream(inputStream,  encoding,  0,  useUnicodeExtraFields);	  this.in    =    new    ZipInputStream(inputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
439	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryImpl();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryImpl();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryImpl();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntrySet();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
440	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  1);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
441	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding.length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  encoding.length);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
442	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
443	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  2);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  2);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
444	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  4);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  4);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  4);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
445	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  0,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  0,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  0,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    0);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
446	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  0);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    0);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
447	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  1);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    0);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
448	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getEncoding();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getEncoding();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getEncoding();	  this.inputStream    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
449	[BUG]  [BUGGY]  this.entry  =  entry.getKey(),  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey(),  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey(),  useUnicodeExtraFields);	  this.entry    =    entry.getKey()    +    1;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
450	[BUG]  [BUGGY]  this.entry  =  entry.getKey()  /  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey()  /  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey()  /  1;	  this.entry    =    entry.getKey()    +    1;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
451	[BUG]  [BUGGY]  this.entry  =  inputStream.getKey()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getKey()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getKey()  +  1;	  this.entry    =    entry.getKey()    +    1;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
452	[BUG]  [BUGGY]  this.entry  =  entry.getKey(),  useUnicodeExtraFields  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey(),  useUnicodeExtraFields  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey(),  useUnicodeExtraFields  +  1;	  this.entry    =    entry.getKey()    +    1;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
453	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasZip64);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasZip64);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
454	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
455	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  zipEncoding);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
456	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  this);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  this);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
457	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  isZip64);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  isZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor,  isZip64);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
458	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  true,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  true,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  true,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
459	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  generator,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  generator,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  generator,  useUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
460	[BUG]  [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  zipEncoding;	  this.zipEncoding    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
461	[BUG]  [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  encoding;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  encoding;	  this.zipEncoding    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
462	[BUG]  [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  null;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  null;	  this.zipEncoding    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
463	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
464	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
465	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.entrySet())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.entrySet())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.entrySet())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
466	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
467	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.entrySet())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.entrySet())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.entrySet())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.entrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
468	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.entrySet())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.entrySet())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.entrySet())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.entrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
469	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.values())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.values())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.values())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.entrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
470	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.keySet())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.keySet())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.keySet())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.entrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
471	[BUG]  [BUGGY]  final  InputStream  hasDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  InputStream  hasDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  InputStream  hasDataDescriptor)  {  throw  new  IllegalStateException( " ");  }	  InputStream    hasDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
472	[BUG]  [BUGGY]  InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream,  encoding,  useUnicodeExtraFields);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream,  encoding,  useUnicodeExtraFields);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream,  encoding,  useUnicodeExtraFields);  }	  InputStream    hasDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
473	[BUG]  [BUGGY]  InputStream  hasDataDescriptor)  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor)  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor)  {  throw  new  IllegalStateException( " ".getMessage());  }	  InputStream    hasDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
474	[BUG]  [BUGGY]  InputStream  in)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  in)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  in)  {  throw  new  IllegalStateException( " ");  }	  InputStream    hasDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
475	[BUG]  [BUGGY]  InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream,  encoding);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream,  encoding);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream,  encoding);  }	  InputStream    hasDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
476	[BUG]  [BUGGY]  InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream);  }	  InputStream    hasDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
477	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  in.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  in.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  :  in.getEntries())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
478	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
479	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
480	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
481	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }	  final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
482	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
483	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
484	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
485	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
486	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.inputStream;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.inputStream;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.inputStream;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
487	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntryList();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getKey())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
488	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  0);	  this.zipEncoding    =    ZipEncodingUtil.generateZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
489	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  true);	  this.zipEncoding    =    ZipEncodingUtil.generateZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
490	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  userUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  userUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  userUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.generateZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
491	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  encoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  encoding);	  this.zipEncoding    =    ZipEncodingUtil.generateZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
492	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  inputStream);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  inputStream);	  this.zipEncoding    =    ZipEncodingUtil.generateZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
493	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getEntry(encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getEntry(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getEntry(encoding);	  final    ZipArchiveEntry    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
494	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues(encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues(encoding);	  final    ZipArchiveEntry    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
495	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValue(encoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValue(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValue(encoding);	  final    ZipArchiveEntry    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
496	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getEntry();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getEntry();	  final    ZipArchiveEntry    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
497	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntry(encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntry(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntry(encoding);	  final    ZipArchiveEntry    <    String,    Object>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
498	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryCount();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryCount();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryCount();	  final    ZipArchiveEntry    <    String,    Object>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
499	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntry();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntry();	  final    ZipArchiveEntry    <    String,    Object>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
500	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntry(0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntry(0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntry(0);	  final    ZipArchiveEntry    <    String,    Object>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
501	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryBytes();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryBytes();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryBytes();	  final    ZipArchiveEntry    <    String,    Object>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
502	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.readLine();	  final    ZipArchiveEntry    <    String,    Object>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
503	[BUG]  [BUGGY]  this.entry  =  entryStream.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream.getValue()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream.getValue()  +  1;	  this.entry    =    entryStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
504	[BUG]  [BUGGY]  this.entry  =  entryStream.readLine();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream.readLine();	  this.entry    =    entryStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
505	[BUG]  [BUGGY]  this.entry  =  entryStream.getValue(),  encoding;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream.getValue(),  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream.getValue(),  encoding;	  this.entry    =    entryStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
506	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntryList())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntryList())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntryList())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
507	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
508	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
509	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
510	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntriesByTag())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntriesByTag())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntriesByTag())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
511	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
512	[BUG]  [BUGGY]  readFully(encoding,  useUnicodeExtraFields,  true)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(encoding,  useUnicodeExtraFields,  true)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(encoding,  useUnicodeExtraFields,  true)  {  throw  new  IllegalStateException( " ");  }	  readFully(encoding,    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
513	[BUG]  [BUGGY]  readFully(encoding,  useUnicodeExtraFields,  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(encoding,  useUnicodeExtraFields,  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(encoding,  useUnicodeExtraFields,  false)  {  throw  new  IllegalStateException( " ");  }	  readFully(encoding,    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
514	[BUG]  [BUGGY]  reader.readFully(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  reader.readFully(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	reader.readFully(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  readFully(encoding,    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
515	[BUG]  [BUGGY]  readFully(encoding,  encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(encoding,  encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(encoding,  encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  readFully(encoding,    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
516	[BUG]  [BUGGY]  ReadFully(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  ReadFully(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	ReadFully(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  readFully(encoding,    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
517	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  encoding);	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
518	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  useUnicodeExtraFields);	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
519	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues()  +  1);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues()  +  1);	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
520	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  true);	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
521	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  inputStream.getCharset());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  inputStream.getCharset());  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  inputStream.getCharset());	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
522	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getKey());  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getKey());  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getKey());	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
523	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  inputStream);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  inputStream);	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
524	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntryList(),  encoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntryList(),  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntryList(),  encoding;	  this.entry    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
525	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntryList()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntryList()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntryList()  +  1;	  this.entry    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
526	[BUG]  [BUGGY]  this.entry  =  entryStream.getEntryList();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream.getEntryList();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream.getEntryList();	  this.entry    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
527	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getImplicitValue();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getImplicitValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getImplicitValue();	  final    ZipArchiveEntry    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
528	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.readLine();	  final    ZipArchiveEntry    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
529	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getZip64();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getZip64();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getZip64();	  final    ZipArchiveEntry    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
530	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getAsZip64();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getAsZip64();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getAsZip64();	  final    ZipArchiveEntry    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
531	[BUG]  [BUGGY]  this.entry  =  entry.getAsZip64();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getAsZip64();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getAsZip64();	  this.entry    =    entry.cloneTarget();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
532	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getKeys())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getKeys())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.inputStream.getKeys())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getKeys())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
533	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  in.getKeys())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  in.getKeys())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  in.getKeys())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getKeys())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
534	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  true,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  true,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  true,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
535	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(ENCODING,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(ENCODING,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(ENCODING,  true);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
536	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this,  hasDataDescriptor);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    this);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
537	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
538	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
539	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
540	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
541	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
542	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
543	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
544	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry(encoding))  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry(encoding))  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry(encoding))  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
545	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
546	[BUG]  [BUGGY]  this.zipEncoding  =  encodeZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encodeZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encodeZipEncoding(encoding);	  this.zipEncoding    =    encodeZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
547	[BUG]  [BUGGY]  this.zipEncoding  =  encodeZipEncoding(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encodeZipEncoding(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encodeZipEncoding(encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    encodeZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
548	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  zipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  zipEncoding(encoding);	  this.zipEncoding    =    encodeZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
549	[BUG]  [BUGGY]  this.zipEncoding  =  getZipEncoding(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  getZipEncoding(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  getZipEncoding(encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    encodeZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
550	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  zipEncoding(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  zipEncoding(encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    encodeZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
551	[BUG]  [BUGGY]  this.zipEncoding  =  getZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  getZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  getZipEncoding(encoding);	  this.zipEncoding    =    encodeZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
552	[BUG]  [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  isEnabled);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  isEnabled);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(encoding,  inputStream,  useUnicodeExtraFields,  isEnabled);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    isEnabled);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
553	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this.isEnabled);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this.isEnabled);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this.isEnabled);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    isEnabled);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
554	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  isEnabled,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  isEnabled,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  isEnabled,  hasDataDescriptor);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    isEnabled);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
555	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor  &&  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor  &&  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor  &&  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor    ||    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
556	[BUG]  [BUGGY]  enableStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  enableStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	enableStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor    ||    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
557	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  encoding;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  encoding;	  this.zipEncoding    =    ZipEncoding.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
558	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING,  encoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING,  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING,  encoding;	  this.zipEncoding    =    ZipEncoding.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
559	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING,  encoding);	  this.zipEncoding    =    ZipEncoding.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
560	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  |  File.separatorChar;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  |  File.separatorChar;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  |  File.separatorChar;	  this.zipEncoding    =    ZipEncoding.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
561	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  1;	  this.zipEncoding    =    ZipEncoding.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
562	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntryList())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntryList())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  in.getEntryList())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
563	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntryList())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntryList())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntryList())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
564	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValue())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
565	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  in.readLine())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  in.readLine())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  in.readLine())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
566	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
567	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
568	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getKey())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getKey())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getKey())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
569	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getName())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getName())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getName())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
570	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  false,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  false,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  false,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
571	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
572	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  false,  0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  false,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  false,  0);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
573	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  false,  encoding);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  false,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  false,  encoding);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
574	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream.readFully();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream.readFully();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream.readFully();	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
575	[BUG]  [BUGGY]  this.entriesZip64  =  encoding.readLine();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  encoding.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  encoding.readLine();	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
576	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream.openStream();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream.openStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream.openStream();	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
577	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream.readUTF();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream.readUTF();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream.readUTF();	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
578	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream.readInt();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream.readInt();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream.readInt();	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
579	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream.readLine()  +  1;  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream.readLine()  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream.readLine()  +  1;	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
580	[BUG]  [BUGGY]  this.entry  =  inputStream;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream;	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields);    this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
581	[BUG]  [BUGGY]  this.entry  =  insertZip64(inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  insertZip64(inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  insertZip64(inputStream,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields);    this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
582	[BUG]  [BUGGY]  this.entry  =  insertZip64Entry(inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  insertZip64Entry(inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  insertZip64Entry(inputStream,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields);    this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
583	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  this.entry  =  entry;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  this.entry  =  entry;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  this.entry  =  entry;	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields);    this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
584	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  a  valid  ZipEncoding  extension. ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  a  valid  ZipEncoding  extension. ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "ZipArchiveInputStream  is  not  a  valid  ZipEncoding  extension. ");  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equalsIgnoreCase(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
585	[BUG]  [BUGGY]  this.entry  =  entryStream.getEntry(encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream.getEntry(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream.getEntry(encoding);	  this.entry    =    entryStream.getKey();    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
586	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException( " ");  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
587	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
588	[BUG]  [BUGGY]  While(!useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  While(!useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	While(!useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
589	[BUG]  [BUGGY]  readFully(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(encoding,  useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
590	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException( " ".equals(encoding));  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException( " ".equals(encoding));  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException( " ".equals(encoding));  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
591	[BUG]  [BUGGY]  readFully(encoding)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(encoding)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(encoding)  {  throw  new  IllegalArgumentException( " ");  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
592	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException(encoding);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException(encoding);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException(encoding);  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
593	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  true);	  this.entry    =    new    ZipArchiveEntry(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
594	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  false);	  this.entry    =    new    ZipArchiveEntry(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
595	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  encoding);	  this.entry    =    new    ZipArchiveEntry(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
596	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getAllValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.inputStream.getAllValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.inputStream.getAllValues())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getAllValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
597	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getUpperBounds())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getUpperBounds())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getUpperBounds())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getAllValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
598	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getAllEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getAllEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getAllEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getAllValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
599	[BUG]  [BUGGY]  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
600	[BUG]  [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(encoding,  inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(encoding,  inputStream,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
601	[BUG]  [BUGGY]  new  ZipArchiveEntry(this,  inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(this,  inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(this,  inputStream,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
602	[BUG]  [BUGGY]  new  ZipArchiveEntry(ENCODING,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(ENCODING,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(ENCODING,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
603	[BUG]  [BUGGY]  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
604	[BUG]  [BUGGY]  new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
605	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
606	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
607	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
608	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
609	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValu  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValu  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValu	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
610	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
611	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
612	[BUG]  [BUGGY]  this.zipEncoding  =  crc.zipEncoding;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  crc.zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  crc.zipEncoding;	  this.zipEncoding    =    CRC32.zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
613	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32Crc.zipEncoding;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  CRC32Crc.zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  CRC32Crc.zipEncoding;	  this.zipEncoding    =    CRC32.zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
614	[BUG]  [BUGGY]  this.zipEncoding  =  cmd.zipEncoding;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  cmd.zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  cmd.zipEncoding;	  this.zipEncoding    =    CRC32.zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
615	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32.ZipEncoding;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  CRC32.ZipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  CRC32.ZipEncoding;	  this.zipEncoding    =    CRC32.zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
616	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues();  this.current  =  current;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues();  this.current  =  current;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues();  this.current  =  current;	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
617	[BUG]  [BUGGY]  current  =  inputStream.getValues();  this.current  =  current;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  current  =  inputStream.getValues();  this.current  =  current;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	current  =  inputStream.getValues();  this.current  =  current;	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
618	[BUG]  [BUGGY]  luate(inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  luate(inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	luate(inputStream,  encoding,  useUnicodeExtraFields);	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
619	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
620	[BUG]  [BUGGY]  enableStoredEntriesWithDataDescriptor(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  enableStoredEntriesWithDataDescriptor(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	enableStoredEntriesWithDataDescriptor(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
621	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntry())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
622	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
623	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(userUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(userUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(userUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
624	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryCount())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
625	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntry())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
626	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryName())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryName())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryName())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
627	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor    ||    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
628	[BUG]  [BUGGY]  enableStoredEntriesWithDataDescriptor  &&  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  enableStoredEntriesWithDataDescriptor  &&  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	enableStoredEntriesWithDataDescriptor  &&  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor    ||    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
629	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  final  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  final  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  final  Object,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
630	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getKey();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getKey();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getKey();	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntrySet();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
631	[BUG]  [BUGGY]  if(!allowStoredEntries  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(!allowStoredEntries  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(!allowStoredEntries  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
632	[BUG]  [BUGGY]  if(!useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(!useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(!useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
633	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor  =  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor  =  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor  =  useUnicodeExtraFields;	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
634	[BUG]  [BUGGY]  new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
635	[BUG]  [BUGGY]  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  false);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
636	[BUG]  [BUGGY]  new  ZipArchiveEntry(this,  inputStream,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(this,  inputStream,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(this,  inputStream,  encoding,  useUnicodeExtraFields,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
637	[BUG]  [BUGGY]  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
638	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(outputStream,  encoding,  useUnicodeExtraFields,  hasDataDescriptor);	  this.entry    =    new    ZipArchiveEntry(outputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
639	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(InputStream.DEFAULT,  inputStream,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(outputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
640	[BUG]  [BUGGY]  if(!closed)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(!closed)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(!closed)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
641	[BUG]  [BUGGY]  if(!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".);  }	  if(!allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
642	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usedUnicodeExtraFields,  false);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
643	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  useUnicodeExtraFields,  hasDataDescriptor);	  this.zipEncoding    =    new    ZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
644	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  useZip64);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  useZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  useZip64);	  this.zipEncoding    =    new    ZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
645	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  userUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  userUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  userUnicodeExtraFields);	  this.zipEncoding    =    new    ZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
646	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  null);	  this.zipEncoding    =    new    ZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
647	[BUG]  [BUGGY]  this.entry  =  inputStream.cloneTarget();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.cloneTarget();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.cloneTarget();	  this.entry    =    entry.cloneTarget();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
648	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getKey())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getKey())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getKey())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getKey())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
649	[BUG]  [BUGGY]  new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields,  false);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
650	[BUG]  [BUGGY]  new  ZipArchiveEntry(this,  inputStream,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(this,  inputStream,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(this,  inputStream,  encoding,  useUnicodeExtraFields,  false);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
651	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getFields())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getFields())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getFields())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    outputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
652	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getValues())  {  this.current  =  inputStream;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getValues())  {  this.current  =  inputStream;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getValues())  {  this.current  =  inputStream;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    outputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
653	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getData())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getData())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  outputStream.getData())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    outputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
654	[BUG]  [BUGGY]  new  ZipArchiveEntry(isEnabled,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(isEnabled,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(isEnabled,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    isEnabled);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
655	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  isEnabled);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  isEnabled);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  isEnabled);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    isEnabled);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
656	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getLastLocalFileEntry();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getLastLocalFileEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getLastLocalFileEntry();	  lastStoredEntry    =    inputStream.getLastStoredEntry();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
657	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getLastCharEntry();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getLastCharEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getLastCharEntry();	  lastStoredEntry    =    inputStream.getLastStoredEntry();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
658	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
659	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
660	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getAllValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getAllValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getAllValues())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
661	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
662	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getCurrentEntry();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getCurrentEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getCurrentEntry();	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
663	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getKey();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getKey();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getKey();	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
664	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.read();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.read();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.read();	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
665	[BUG]  [BUGGY]  readFully(inputStream,  encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(inputStream,  encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(inputStream,  encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  readFully(encoding,    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
666	[BUG]  [BUGGY]  readFully(inputStream,  encoding)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(inputStream,  encoding)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(inputStream,  encoding)  {  throw  new  IllegalStateException( " ");  }	  readFully(encoding,    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
667	[BUG]  [BUGGY]  readFully(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  readFully(encoding,    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
668	[BUG]  [BUGGY]  new  ZipArchiveEntry(this,  encoding,  useUnicodeExtraFields,  this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(this,  encoding,  useUnicodeExtraFields,  this);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(this,  encoding,  useUnicodeExtraFields,  this);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    this);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
669	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getFields())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getFields())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getFields())  {  this.current  =  current;  }	  final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
670	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getAllValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getAllValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getAllValues())  {  this.current  =  current;  }	  final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
671	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding(useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  zipEncoding(useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  zipEncoding(useUnicodeExtraFields);	  this.zipEncoding    =    encodeZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
672	[BUG]  [BUGGY]  this.zipEncoding  =  insertZipEncoding(useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  insertZipEncoding(useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  insertZipEncoding(useUnicodeExtraFields);	  this.zipEncoding    =    encodeZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
673	[BUG]  [BUGGY]  this.zipEncoding  =  encodeZipEncoding(useUnicodeExtraFields,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encodeZipEncoding(useUnicodeExtraFields,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encodeZipEncoding(useUnicodeExtraFields,  encoding);	  this.zipEncoding    =    encodeZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
674	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
675	[BUG]  [BUGGY]  if(!useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(!useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(!useUnicodeExtraFields)  {  throw  new  IllegalArgumentException( " ");  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
676	[BUG]  [BUGGY]  InputStream  hasDataDescriptor)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor)  {  throw  new  IllegalArgumentException( " ");  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
677	[BUG]  [BUGGY]  readFully(inputStream)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(inputStream)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(inputStream)  {  throw  new  IllegalArgumentException( " ");  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
678	[BUG]  [BUGGY]  readFully(inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(inputStream,  encoding,  useUnicodeExtraFields);	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
679	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
680	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
681	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getChildren())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getChildren())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getChildren())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
682	[BUG]  [BUGGY]  this.current  =  inputStream.getValues(encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  inputStream.getValues(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  inputStream.getValues(encoding);	  this.current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
683	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  useUnicodeExtraFields,  hasDataDescriptor);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
684	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
685	[BUG]  [BUGGY]  this.entry  =  entry.nextEntry();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.nextEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.nextEntry();	  this.entry    =    entry.data;    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
686	[BUG]  [BUGGY]  this.entry  =  entry.getDataEntry();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getDataEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getDataEntry();	  this.entry    =    entry.data;    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
687	[BUG]  [BUGGY]  this.entry  =  entry.toZip64();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.toZip64();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.toZip64();	  this.entry    =    entry.toString();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
688	[BUG]  [BUGGY]  this.entry  =  inputStream.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.toString();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.toString();	  this.entry    =    entry.toString();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
689	[BUG]  [BUGGY]  this.entry  =  entry.toURI();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.toURI();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.toURI();	  this.entry    =    entry.toString();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
690	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  entry  :  inputStream.getValue())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
691	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream,  0,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream,  0,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream,  0,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    0,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
692	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  user);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  user);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  user);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
693	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryList();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryList();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryList();	  final    ZipArchiveEntry    <    String,    Object>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
694	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries(encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries(encoding);	  final    ZipArchiveEntry    <    String,    Object>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
695	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(isEnabled,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(isEnabled,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(isEnabled,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    isEnabled);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
696	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEndValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEndValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEndValues())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
697	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
698	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getFields())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getFields())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getFields())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
699	[BUG]  [BUGGY]  this.entry  =  entry.read();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.read();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.read();	  this.entry    =    entry.readLine();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
700	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getImplicitReturn();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getImplicitReturn();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
701	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  null);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
702	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntrySet())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
703	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
704	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
705	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValu  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValu  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValu	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
706	[BUG]  [BUGGY]  final  ZipArchiveEntry  inputStream  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  inputStream  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  inputStream  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
707	[BUG]  [BUGGY]  final  ZipArchiveEntry  inputStream  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  inputStream  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  inputStream  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
708	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
709	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  null);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  null);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(inputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
710	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream.readLine()  &&  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream.readLine()  &&  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream.readLine()  &&  useUnicodeExtraFields;	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
711	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream.readLine()  -  1;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream.readLine()  -  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream.readLine()  -  1;	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
712	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream!=  null?  inputStream.readLine()  :  0;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream!=  null?  inputStream.readLine()  :  0;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream!=  null?  inputStream.readLine()  :  0;	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
713	[BUG]  [BUGGY]  this.entry  =  inputStream.cloneTree();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.cloneTree();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.cloneTree();	  this.entry    =    entry.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
714	[BUG]  [BUGGY]  this.entry  =  entryStream.cloneTree();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream.cloneTree();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream.cloneTree();	  this.entry    =    entry.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
715	[BUG]  [BUGGY]  this.entry  =  entry.cloneTree(inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.cloneTree(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.cloneTree(inputStream);	  this.entry    =    entry.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
716	[BUG]  [BUGGY]  this.inputStream  =  inputStream!=  null?  null  :  inputStream.getInputStream();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream!=  null?  null  :  inputStream.getInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream!=  null?  null  :  inputStream.getInputStream();	  this.inputStream    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
717	[BUG]  [BUGGY]  this.inputStream  =  inputStream  ==  null?  null  :  inputStream.getInputStream();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream  ==  null?  null  :  inputStream.getInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream  ==  null?  null  :  inputStream.getInputStream();	  this.inputStream    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
718	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getInputStream(useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getInputStream(useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getInputStream(useUnicodeExtraFields);	  this.inputStream    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
719	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  usingUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  usingUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  usingUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
720	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entries  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entries  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entries  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
721	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
722	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(outputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(outputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(outputStream);	  this.zipEncoding    =    new    ZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
723	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(true);	  this.zipEncoding    =    new    ZipEncoding();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
724	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.get  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.get  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.get  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
725	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
726	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getkey())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getkey())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getkey())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
727	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
728	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntryValue();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntryValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntryValue();	  this.entry    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
729	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntryCount();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntryCount();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntryCount();	  this.entry    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
730	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntryBytes(encoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntryBytes(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntryBytes(encoding);	  this.entry    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
731	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValu  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValu  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValu	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntryList();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getValue())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
732	[BUG]  [BUGGY]  lastStoredEntry)  {  throw  new  IllegalStateException( " ".equals(encoding));  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry)  {  throw  new  IllegalStateException( " ".equals(encoding));  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry)  {  throw  new  IllegalStateException( " ".equals(encoding));  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
733	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this.allowStoredEntriesWithDataDescriptor);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this.allowStoredEntriesWithDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this.allowStoredEntriesWithDataDescriptor);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
734	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usesZip64);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usesZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usesZip64);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
735	[BUG]  [BUGGY]  new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(entryStream,  encoding,  useUnicodeExtraFields,  zipEncoding);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
736	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  0,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  0,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  0,  hasDataDescriptor);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
737	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usedZip64);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usedZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usedZip64);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
738	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  useZip64);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  useZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  useZip64);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
739	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  encoding);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
740	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  inputStream);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  inputStream);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
741	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getEntryValues();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getEntryValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getEntryValues();	  final    ZipArchiveEntry    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
742	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getEntry(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getEntry(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getEntry(encoding,  useUnicodeExtraFields);	  final    ZipArchiveEntry    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
743	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getEntry(encoding).getValues();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getEntry(encoding).getValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getEntry(encoding).getValues();	  final    ZipArchiveEntry    entry    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
744	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntriesByteBuffer();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntriesByteBuffer();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntriesByteBuffer();	  this.entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
745	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntriesInflater();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntriesInflater();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntriesInflater();	  this.entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
746	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.getZipEncoding(useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncoding.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
747	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  userUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  userUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.getZipEncoding(encoding,  userUnicodeExtraFields);	  this.zipEncoding    =    ZipEncoding.getZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
748	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    inputStream);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
749	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getData())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getData())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getData())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
750	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getSeconds())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getSeconds())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getSeconds())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
751	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getCrc())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getCrc())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getCrc())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
752	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  this.entry  =  in;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  this.entry  =  in;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  this.entry  =  in;	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields);    this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
753	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  this.entry  =  entryStream;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  this.entry  =  entryStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  this.entry  =  entryStream;	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields);    this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
754	[BUG]  [BUGGY]  this.entry  =  zipEncoding;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  zipEncoding;	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields);    this.entry    =    inputStream;    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
755	[BUG]  [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  outputStream;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  outputStream;	  InputStream    hasDataDescriptor    =    useUnicodeExtraFields?    this    :    null;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
756	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCTION;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCTION;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCTION;	  this.zipEncoding    =    ZipEncoding.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
757	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  useUnicodeExtraFields;	  this.zipEncoding    =    ZipEncoding.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
758	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  File.separatorChar  +  encoding;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  File.separatorChar  +  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.DEFAULT_ZIP_ENCODING  +  File.separatorChar  +  encoding;	  this.zipEncoding    =    ZipEncoding.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
759	[BUG]  [BUGGY]  this.zipEncoding  =  inputStream  +  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  inputStream  +  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  inputStream  +  useUnicodeExtraFields;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
760	[BUG]  [BUGGY]  this.zipEncoding  =  zipEncoding  +  usingUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  zipEncoding  +  usingUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  zipEncoding  +  usingUnicodeExtraFields;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
761	[BUG]  [BUGGY]  this.zipEncoding  =  in  +  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  in  +  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  in  +  useUnicodeExtraFields;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
762	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntriesBytes())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntriesBytes())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntriesBytes())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
763	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries(encoding))  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries(encoding))  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries(encoding))  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
764	[BUG]  [BUGGY]  safeUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  safeUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	safeUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
765	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
766	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  inputStream,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(zipEncoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
767	[BUG]  [BUGGY]  Thread.currentThread().interrupt(inputStream,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  Thread.currentThread().interrupt(inputStream,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	Thread.currentThread().interrupt(inputStream,  useUnicodeExtraFields);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
768	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this,  inputStream);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  Thread.currentThread().interrupt(this,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	Thread.currentThread().interrupt(this,  inputStream);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
769	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,  encoding);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
770	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,  inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields,  inputStream);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
771	[BUG]  [BUGGY]  this.inputStream  =  inputStream!=  null?  null  :  inputStream.getValues();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream!=  null?  null  :  inputStream.getValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream!=  null?  null  :  inputStream.getValues();	  this.inputStream    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
772	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getInputStreamValues();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getInputStreamValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getInputStreamValues();	  this.inputStream    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
773	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.read();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.read();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.read();	  final    ZipArchiveEntry    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
774	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getImplicitReturn();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getImplicitReturn();	  final    ZipArchiveEntry    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
775	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.generateZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
776	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  false);	  this.zipEncoding    =    ZipEncodingUtil.generateZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
777	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32.zipEncoding  +  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  CRC32.zipEncoding  +  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  CRC32.zipEncoding  +  useUnicodeExtraFields;	  this.zipEncoding    =    CRC32.zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
778	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32Util.zipEncoding(crc);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  CRC32Util.zipEncoding(crc);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  CRC32Util.zipEncoding(crc);	  this.zipEncoding    =    CRC32.zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
779	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.encoding    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
780	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getFields())  {  this.encoding  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getFields())  {  this.encoding  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getFields())  {  this.encoding  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.encoding    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
781	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
782	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
783	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
784	[BUG]  [BUGGY]  secureUseUnicodeExtraFields())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  secureUseUnicodeExtraFields())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	secureUseUnicodeExtraFields())  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
785	[BUG]  [BUGGY]  safeLimitExtraFields())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  safeLimitExtraFields())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	safeLimitExtraFields())  {  throw  new  IllegalStateException( " ");  }	  safeUseUnicodeExtraFields())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
786	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getImplicitReturn())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getImplicitReturn())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getImplicitReturn())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getAllValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
787	[BUG]  [BUGGY]  this.entry  =  inputStream.getKey(),  encoding;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getKey(),  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getKey(),  encoding;	  this.entry    =    entry.getKey(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
788	[BUG]  [BUGGY]  this.entry  =  entry.getKey(),  encoding  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey(),  encoding  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey(),  encoding  +  1;	  this.entry    =    entry.getKey(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
789	[BUG]  [BUGGY]  this.entry  =  entry.getKey(),  encoding  +  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey(),  encoding  +  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey(),  encoding  +  useUnicodeExtraFields;	  this.entry    =    entry.getKey(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
790	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries(encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries(encoding);	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
791	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncoding.UTF8;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncoding.UTF8;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncoding.UTF8;	  this.zipEncoding    =    encoding;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
792	[BUG]  [BUGGY]  final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
793	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
794	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
795	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey()  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey()  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey()	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
796	[BUG]  [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  zipEncoding  :  inputStream;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  zipEncoding  :  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  useUnicodeExtraFields?  zipEncoding  :  inputStream;	  this.zipEncoding    =    useUnicodeExtraFields?    zipEncoding    :    null;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
797	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  userUnicodeExtraFields,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  userUnicodeExtraFields,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  userUnicodeExtraFields,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    userUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
798	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(userUnicodeExtraFields,  encoding);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(userUnicodeExtraFields,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(userUnicodeExtraFields,  encoding);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    userUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
799	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,  encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,  encoding);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    userUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
800	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  userUnicodeExtraFields,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  userUnicodeExtraFields,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  userUnicodeExtraFields,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    userUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
801	[BUG]  [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.in  =  new  ZipInputStream(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding);	  this.in    =    new    ZipInputStream(inputStream,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
802	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getValue())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
803	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getValue())  {  this.entry	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getValue())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
804	[BUG]  [BUGGY]  while(!this.allowStoredEntries)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  while(!this.allowStoredEntries)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	while(!this.allowStoredEntries)  {  throw  new  IllegalStateException( " ");  }	  While(!useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
805	[BUG]  [BUGGY]  While(!this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  While(!this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	While(!this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }	  While(!useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
806	[BUG]  [BUGGY]  While(!useUnicodeExtraFields  &&  inputStream!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  While(!useUnicodeExtraFields  &&  inputStream!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	While(!useUnicodeExtraFields  &&  inputStream!=  null)  {  throw  new  IllegalStateException( " ");  }	  While(!useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
807	[BUG]  [BUGGY]  InputStream  hasDataDescriptor  =!useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor  =!useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor  =!useUnicodeExtraFields;	  While(!useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
808	[BUG]  [BUGGY]  this.entry  =  entry.getKey()  +  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey()  +  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey()  +  useUnicodeExtraFields;	  this.entry    =    entry.getKey()    +    encoding;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
809	[BUG]  [BUGGY]  this.entry  =  inputStream.getKey()  +  encoding;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getKey()  +  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getKey()  +  encoding;	  this.entry    =    entry.getKey()    +    encoding;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
810	[BUG]  [BUGGY]  this.entry  =  entry.getValue(),  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue(),  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue(),  useUnicodeExtraFields;	  this.entry    =    entry.getValue(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
811	[BUG]  [BUGGY]  this.entry  =  entry.getValue(),  encoding  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue(),  encoding  +  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue(),  encoding  +  1;	  this.entry    =    entry.getValue(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
812	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getChildren())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getChildren())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getChildren())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
813	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  user);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  user);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  user);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
814	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  in);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  in);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  in);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
815	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getUpperBounds())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getUpperBounds())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getUpperBounds())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
816	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntries();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
817	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.entrySet())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.entrySet())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.entrySet())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
818	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getKey();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
819	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
820	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
821	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getInput();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getInput();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getInput();	  this.inputStream    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
822	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getEndEntries();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getEndEntries();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getEndEntries();	  this.inputStream    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
823	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getImplicitReturnValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getImplicitReturnValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getImplicitReturnValue();	  this.inputStream    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
824	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  null,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  null,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  null,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
825	[BUG]  [BUGGY]  enableStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  enableStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	enableStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
826	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.lastStoredEntry)  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.lastStoredEntry)  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.lastStoredEntry)  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    this.entries)    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
827	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  getZipEntries())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  getZipEntries())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  getZipEntries())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    this.entries)    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
828	[BUG]  [BUGGY]  this.entry  =  entry.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getImplicitReturn();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getImplicitReturn();	  this.entry    =    entry.getEntry();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
829	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(null,  inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(null,  inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(null,  inputStream,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(null,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
830	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(this,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(this,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(this,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(null,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
831	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(null,  encoding,  useUnicodeExtraFields,  zipEncoding);	  this.entry    =    new    ZipArchiveEntry(null,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
832	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.encoding  =  entry.getKey();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
833	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
834	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  encoding,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  encoding,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  encoding,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
835	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  outputStream,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  outputStream,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  outputStream,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
836	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getChildren())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getChildren())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getChildren())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getChildren())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
837	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.entrySet())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.entrySet())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.entrySet())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getChildren())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
838	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  encoding);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  encoding);	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
839	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  hasDataDescriptor);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  hasDataDescriptor);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  hasDataDescriptor);	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
840	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  inputStream);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  inputStream);	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
841	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  useZip64);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  useZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  useZip64);	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
842	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(useUnicodeExtraFields,  true);	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
843	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
844	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  useUnicodeExtraFields,  true);	  this.entry    =    new    ZipArchiveEntry(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
845	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(useUnicodeExtraFields,  encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(useUnicodeExtraFields,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(useUnicodeExtraFields,  encoding);	  this.entry    =    new    ZipArchiveEntry(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
846	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.encoding  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.encoding    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
847	[BUG]  [BUGGY]  this.encoding  =  inputStream.getValue();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.encoding  =  inputStream.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.encoding  =  inputStream.getValue();	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.encoding    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
848	[BUG]  [BUGGY]  this.entry  =  inputStream.read();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.read();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.read();	  this.entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
849	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  null);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  0,  null);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    null);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
850	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.readLine());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.readLine());  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.readLine());	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
851	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  false);	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
852	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  userUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  userUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.getValues(),  userUnicodeExtraFields);	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
853	[BUG]  [BUGGY]  new  ZipArchiveEntry(zipEncoding,  inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(zipEncoding,  inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(zipEncoding,  inputStream,  encoding,  useUnicodeExtraFields);	  new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
854	[BUG]  [BUGGY]  this.entry  =  entry.getValue()  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValue()  +  2;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValue()  +  2;	  this.entry    =    entry.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
855	[BUG]  [BUGGY]  final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  inputStream  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
856	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValu  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValu  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValu	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
857	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue()  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue()  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getKey())  {  this.entry  =  entry.getValue()	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
858	[BUG]  [BUGGY]  InputStream  in  =  inputStream.getInputStream();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  in  =  inputStream.getInputStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  in  =  inputStream.getInputStream();	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
859	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues();  this.current  =  new  CurrentEntry(inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues();  this.current  =  new  CurrentEntry(inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues();  this.current  =  new  CurrentEntry(inputStream,  encoding,  useUnicodeExtraFields);	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
860	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues()  +  1;  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues()  +  1;  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.getValues()  +  1;  this.current  =  current;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
861	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(encoding,  inputStream,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
862	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(this.zipEncoding,  inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(this.zipEncoding,  inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(this.zipEncoding,  inputStream,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
863	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  entry  :  inputStream.getKey())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  entry  :  inputStream.getKey())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  entry  :  inputStream.getKey())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
864	[BUG]  [BUGGY]  lastStoredEntry)  {  throw  new  IllegalStateException( " ".equals(encoding);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry)  {  throw  new  IllegalStateException( " ".equals(encoding);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry)  {  throw  new  IllegalStateException( " ".equals(encoding);  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding);    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
865	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  inStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  inStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  :  inStream.getEntries())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
866	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries(encoding))  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries(encoding))  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  :  inputStream.getEntries(encoding))  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
867	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields,  0);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    0);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
868	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  0);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    0);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
869	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
870	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(userUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    true);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
871	[BUG]  [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.ZIP_ENCODING  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.ZIP_ENCODING  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.ZIP_ENCODING  :  zipEncoding;	  this.zipEncoding    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
872	[BUG]  [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.UTF8  :  ZipEncoding.UTF8;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.UTF8  :  ZipEncoding.UTF8;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  useUnicodeExtraFields?  ZipEncoding.UTF8  :  ZipEncoding.UTF8;	  this.zipEncoding    =    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
873	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
874	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  useUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
875	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  0,  useUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
876	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  encoding,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  encoding,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  inputStream,  encoding,  useUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
877	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getValues())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
878	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inStream.getEntries())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
879	[BUG]  [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.entrySet())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.entrySet())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	For(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.entrySet())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.entrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
880	[BUG]  [BUGGY]  lastStoredEntry)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(encoding));  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(encoding));  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(encoding));  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equalsIgnoreCase(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
881	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(encoding));  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(encoding));  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(encoding));  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equalsIgnoreCase(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
882	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ").equalsIgnoreCase(encoding));  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ").equalsIgnoreCase(encoding));  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ").equalsIgnoreCase(encoding));  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equalsIgnoreCase(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
883	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usingZip64);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usingZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usingZip64);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
884	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usesZip64);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usesZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usesZip64);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
885	[BUG]  [BUGGY]  this.entry  =  inputStream.getUpperBound();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getUpperBound();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getUpperBound();	  this.entry    =    inputStream.getKey();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
886	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usedZip64);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usedZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  usedZip64);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    hasDataDescriptor);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
887	[BUG]  [BUGGY]  this.current  =  inputStream;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  inputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  inputStream;	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
888	[BUG]  [BUGGY]  this.current  =  encoding;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  encoding;	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
889	[BUG]  [BUGGY]  this.current  =  new  CurrentEntry();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  CurrentEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  CurrentEntry();	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
890	[BUG]  [BUGGY]  this.current  =  outputStream;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  outputStream;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  outputStream;	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
891	[BUG]  [BUGGY]  InputStream  hasDataDescriptor)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor)  {  throw  new  UnsupportedOperationException( " ");  }	  InputStream    hasDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
892	[BUG]  [BUGGY]  InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream,  encoding,  useUnicodeExtraFields,  false);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream,  encoding,  useUnicodeExtraFields,  false);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor)  {  return  new  ZipArchiveInputStream(inputStream,  encoding,  useUnicodeExtraFields,  false);  }	  InputStream    hasDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
893	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  String,  Object>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
894	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getChildren())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getChildren())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.entry.getChildren())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getChildren())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
895	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
896	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getAllValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getAllValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.entry.getAllValues())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getAllValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
897	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getChronology();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getChronology();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getChronology();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
898	[BUG]  [BUGGY]  this.current  =  outputStream.getValues();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  outputStream.getValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  outputStream.getValues();	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    current    :    outputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
899	[BUG]  [BUGGY]  this.zipEncoding  =  insertZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  insertZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  insertZipEncoding(encoding);	  this.zipEncoding    =    encodeZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
900	[BUG]  [BUGGY]  this.entry  =  entry.openStream();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.openStream();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.openStream();	  this.entry    =    entry.inputStream;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
901	[BUG]  [BUGGY]  this.entry  =  entry.getValues();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValues();	  this.entry    =    entry.inputStream;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
902	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
903	[BUG]  [BUGGY]  this.entry  =  inputStream.getEntryBytes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getEntryBytes();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getEntryBytes();	  this.entry    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
904	[BUG]  [BUGGY]  this.inputStream  =  inputStream.toByteArray();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.toByteArray();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.toByteArray();	  this.inputStream    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
905	[BUG]  [BUGGY]  this.entry  =  entry.openDirectory;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.openDirectory;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.openDirectory;	  this.entry    =    entry.data;    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
906	[BUG]  [BUGGY]  ReadFully(inputStream,  encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  ReadFully(inputStream,  encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	ReadFully(inputStream,  encoding,  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  readFully(encoding,    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
907	[BUG]  [BUGGY]  readFully(encoding,  useUnicodeExtraFields)  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  readFully(encoding,  useUnicodeExtraFields)  {  throw  new  RuntimeException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	readFully(encoding,  useUnicodeExtraFields)  {  throw  new  RuntimeException( " ");  }	  readFully(encoding,    useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
908	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    encoding);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
909	[BUG]  [BUGGY]  this.zipEncoding  =  ZIPEncoding.DEFAULT_ZIP_ENCODING;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZIPEncoding.DEFAULT_ZIP_ENCODING;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZIPEncoding.DEFAULT_ZIP_ENCODING;	  this.zipEncoding    =    ZipEncoding.DEFAULT_ZIP_ENCODING;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
910	[BUG]  [BUGGY]  InputStream  inputStream  =  inputStream.getValues();  this.current  =  current;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  inputStream  =  inputStream.getValues();  this.current  =  current;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  inputStream  =  inputStream.getValues();  this.current  =  current;	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
911	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getEntryCount();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getEntryCount();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getEntryCount();	  this.inputStream    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
912	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.readLine();	  lastStoredEntry    =    inputStream.getLastStoredEntry();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
913	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getLastLocalDestination();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getLastLocalDestination();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getLastLocalDestination();	  lastStoredEntry    =    inputStream.getLastStoredEntry();    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
914	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.decodeZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.decodeZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.decodeZipEncoding(encoding);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
915	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.encodeZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.encodeZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.encodeZipEncoding(encoding);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
916	[BUG]  [BUGGY]  this.inputStream  =  inputStream.getEntryBytes();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream.getEntryBytes();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream.getEntryBytes();	  this.inputStream    =    inputStream.getEntryList();    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
917	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  encoding,  useUnicodeExtraFields);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
918	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".equals(encoding);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".equals(encoding);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".equals(encoding);  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding);    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
919	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.clone();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.clone();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.clone();  }	  for(final    ZipArchiveEntry    entry    :    this.entries)    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
920	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  zipEntries)  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  zipEntries)  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  zipEntries)  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    this.entries)    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
921	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.toString();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.toString();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.entries)  {  this.entry  =  entry.toString();  }	  for(final    ZipArchiveEntry    entry    :    this.entries)    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
922	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  outputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  outputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  outputStream.getEntries();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entry.getEntries())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
923	[BUG]  [BUGGY]  this.entry  =  entry.toByteArray();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.toByteArray();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.toByteArray();	  this.entry    =    entry.toString();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
924	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  encoding,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  encoding,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(ENCODING,  encoding,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    false);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
925	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  usingUnicodeExtraFields,  true);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
926	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  null,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  null,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  null,  useUnicodeExtraFields,  false);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
927	[BUG]  [BUGGY]  this.entry  =  entry.getEntry().getValue();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getEntry().getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getEntry().getValue();	  this.entry    =    entry.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
928	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(encoding));  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(encoding));  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(encoding));  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equalsIgnoreCase(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
929	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "UseUnicodeExtraFields: ".equalsIgnoreCase(encoding));  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "UseUnicodeExtraFields: ".equalsIgnoreCase(encoding));  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( "UseUnicodeExtraFields: ".equalsIgnoreCase(encoding));  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equalsIgnoreCase(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
930	[BUG]  [BUGGY]  allowStoredEntries(useUnicodeExtraFields))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntries(useUnicodeExtraFields))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntries(useUnicodeExtraFields))  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
931	[BUG]  [BUGGY]  allowStoredEntries(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntries(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntries(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
932	[BUG]  [BUGGY]  allowStoredEntries(useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntries(useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntries(useUnicodeExtraFields);	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
933	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	throw  new  IllegalStateException( " ");	  if(!allowStoredEntries)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
934	[BUG]  [BUGGY]  this.entry  =  entry.openDirectory();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.openDirectory();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.openDirectory();	  this.entry    =    entry.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
935	[BUG]  [BUGGY]  this.entry  =  entry.openArchiveEntry();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.openArchiveEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.openArchiveEntry();	  this.entry    =    entry.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
936	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  encoding);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(zipEncoding,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(zipEncoding,  encoding);	  this.entry    =    new    ZipArchiveEntry(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
937	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  entryStream.getValues();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  entryStream.getValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  entryStream.getValues();	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
938	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.readValues();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.readValues();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  =  inputStream.readValues();	  final    ZipArchiveEntry    <    K,    V>    current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
939	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryBytes(encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryBytes(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  =  inputStream.getEntryBytes(encoding);	  final    ZipArchiveEntry    <    String,    Object>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
940	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.encoding.getValues())  {  this.encoding  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.encoding.getValues())  {  this.encoding  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.encoding.getValues())  {  this.encoding  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.encoding    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
941	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryLength())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryLength())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryLength())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
942	[BUG]  [BUGGY]  this.current  =  inputStream.readLine();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  inputStream.readLine();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  inputStream.readLine();	  this.current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
943	[BUG]  [BUGGY]  this.current  =  inputStream.read();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  inputStream.read();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  inputStream.read();	  this.current    =    inputStream.getValues();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
944	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  encoding.getEntries())  {  this.encoding  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  encoding.getEntries())  {  this.encoding  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  encoding.getEntries())  {  this.encoding  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.encoding    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
945	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  1.0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(encoding,  1.0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(encoding,  1.0);	  this.zipEncoding    =    new    ZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
946	[BUG]  [BUGGY]  While(!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  While(!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	While(!allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }	  While(!useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
947	[BUG]  [BUGGY]  while(!this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  while(!this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	while(!this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ");  }	  While(!useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
948	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  useZip64);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  useZip64);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  useZip64);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    zipEncoding);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
949	[BUG]  [BUGGY]  this.entry  =  entry.asZip64();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.asZip64();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.asZip64();	  this.entry    =    entry.cloneTarget();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
950	[BUG]  [BUGGY]  this.zipEncoding  =  encoding  +  usingUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding  +  usingUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding  +  usingUnicodeExtraFields;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
951	[BUG]  [BUGGY]  this.zipEncoding  =  encoding  +  applyUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding  +  applyUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding  +  applyUnicodeExtraFields;	  this.zipEncoding    =    zipEncoding    +    useUnicodeExtraFields;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
952	[BUG]  [BUGGY]  this.entry  =  entry.getKey(),  useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey(),  useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey(),  useUnicodeExtraFields;	  this.entry    =    entry.getKey(),    encoding;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
953	[BUG]  [BUGGY]  this.entry  =  entryStream.read();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entryStream.read();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entryStream.read();	  this.entry    =    entryStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
954	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(useUnicodeExtraFields,  inputStream,  encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(useUnicodeExtraFields,  inputStream,  encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(useUnicodeExtraFields,  inputStream,  encoding);	  this.entry    =    new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
955	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
956	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  String,  Object>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  String,  Object>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
957	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  this,  useUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  this,  useUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  this,  useUnicodeExtraFields,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
958	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  true,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  true,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  true,  false);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    true);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
959	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  :  entryStream.getValues())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  current  :  entryStream.getValues())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  current  :  entryStream.getValues())  {  this.current  =  current;  }	  final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getValues())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
960	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getField();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getField();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getField();	  final    ZipArchiveEntry    entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
961	[BUG]  [BUGGY]  this.zipEncoding  =  CRC32.zipEncoding  +  encoding;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  CRC32.zipEncoding  +  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  CRC32.zipEncoding  +  encoding;	  this.zipEncoding    =    CRC32.zipEncoding;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
962	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValue();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValue();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
963	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryFactory();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryFactory();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryFactory();	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntrySet();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
964	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  this,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  this,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  this,  useUnicodeExtraFields,  false);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
965	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor,  closed)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor,  closed)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor,  closed)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
966	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  return  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  return  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor)  {  return  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields);  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
967	[BUG]  [BUGGY]  this.current  =  new  CurrentEntry(inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  CurrentEntry(inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  CurrentEntry(inputStream,  encoding,  useUnicodeExtraFields);	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
968	[BUG]  [BUGGY]  this.current  =  new  CurrentEntry(encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  CurrentEntry(encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  CurrentEntry(encoding,  useUnicodeExtraFields);	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
969	[BUG]  [BUGGY]  this.current  =  currentEntry.getValue();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  currentEntry.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  currentEntry.getValue();	  this.current    =    current;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
970	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.entry.getValues())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
971	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryBytes(encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryBytes(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryBytes(encoding);	  final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntries();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
972	[BUG]  [BUGGY]  safeUseUnicodeExtraFields,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  safeUseUnicodeExtraFields,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	safeUseUnicodeExtraFields,  useUnicodeExtraFields);	  safeUseUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
973	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getValues())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getValues())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getValues())  {  this.entry  =  entry.getKey();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
974	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
975	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  this,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  this,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  this,  useUnicodeExtraFields);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    this);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
976	[BUG]  [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  this,  true);	  new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    this);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
977	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.entrySet())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.entrySet())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.entrySet())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.entrySet())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
978	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getKeys())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getKeys())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.entry.getKeys())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getKeys())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
979	[BUG]  [BUGGY]  this.entry  =  entry.getKey()  -  encoding;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey()  -  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey()  -  encoding;	  this.entry    =    entry.getKey()    +    encoding;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
980	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getKey();  }  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
981	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getName();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getName();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entry.getValues())  {  this.entry  =  entry.getName();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
982	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryLength())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryLength())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryLength())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
983	[BUG]  [BUGGY]  this.entry  =  entry.getKey()  *  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getKey()  *  1;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getKey()  *  1;	  this.entry    =    entry.getKey()    +    1;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
984	[BUG]  [BUGGY]  this.zipEncoding  =  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    encoding;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
985	[BUG]  [BUGGY]  this.zipEncoding  =  encoding  <  null?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  encoding;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding  <  null?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding  <  null?  ZipEncoding.DEFAULT_ZIP_ENCODING  :  encoding;	  this.zipEncoding    =    encoding;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
986	[BUG]  [BUGGY]  this.zipEncoding  =  encoding  <  null?  ZipEncoding.UTF8  :  encoding;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding  <  null?  ZipEncoding.UTF8  :  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding  <  null?  ZipEncoding.UTF8  :  encoding;	  this.zipEncoding    =    encoding;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
987	[BUG]  [BUGGY]  this.zipEncoding  =  encoding  <  null?  ZipEncoding.US_ZIP_ENCODING  :  encoding;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding  <  null?  ZipEncoding.US_ZIP_ENCODING  :  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding  <  null?  ZipEncoding.US_ZIP_ENCODING  :  encoding;	  this.zipEncoding    =    encoding;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
988	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  true);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  usingUnicodeExtraFields,  true);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
989	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  null,  useUnicodeExtraFields,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  null,  useUnicodeExtraFields,  false);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  null,  useUnicodeExtraFields,  false);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    false);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
990	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.lastStoredEntry.getValues())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.lastStoredEntry.getValues())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.lastStoredEntry.getValues())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
991	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  entries.getValues())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getValues())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
992	[BUG]  [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.read());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.read());  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.current  =  new  ZipArchiveEntry  <  K,  V>(inputStream.read());	  this.current    =    new    ZipArchiveEntry    <    K,    V>(inputStream.getValues());    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
993	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntryList())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntryList())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntryList())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
994	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.getZipEncoding(inputStream,  encoding,  useUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.getZipEncoding(encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
995	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entries.getValue())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entries.getValue())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntryList();  for(final  ZipArchiveEntry  <  K,  V>  entry  :  entries.getValue())  {  this.entry  =  entry;  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntryList();    for(final    ZipArchiveEntry    <    K,    V>    entry    :    entry.getValue())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
996	[BUG]  [BUGGY]  InputStream  in  =  inputStream.getInputStream();  for(final  ZipArchiveEntry  entry  :  in.read())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  in  =  inputStream.getInputStream();  for(final  ZipArchiveEntry  entry  :  in.read())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  in  =  inputStream.getInputStream();  for(final  ZipArchiveEntry  entry  :  in.read())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
997	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.encoding)  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.encoding)  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.encoding)  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
998	[BUG]  [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  in;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  in;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  in;	  InputStream    hasDataDescriptor    =    useUnicodeExtraFields?    this    :    null;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
999	[BUG]  [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  new  ZipArchiveInputStream(inputStream);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  new  ZipArchiveInputStream(inputStream);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  new  ZipArchiveInputStream(inputStream);	  InputStream    hasDataDescriptor    =    useUnicodeExtraFields?    this    :    null;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1000	[BUG]  [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  new  FileInputStream(encoding);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  new  FileInputStream(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	InputStream  hasDataDescriptor  =  useUnicodeExtraFields?  this  :  new  FileInputStream(encoding);	  InputStream    hasDataDescriptor    =    useUnicodeExtraFields?    this    :    null;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1001	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  usingUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  usingUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  usingUnicodeExtraFields);	  this.zipEncoding    =    ZipEncodingUtil.generateZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
1002	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtil.generateZipEncoding(encoding,  null);	  this.zipEncoding    =    ZipEncodingUtil.generateZipEncoding(encoding);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
1003	[BUG]  [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  isEnabled);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  isEnabled);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  new  ZipArchiveEntry(inputStream,  encoding,  useUnicodeExtraFields,  zipEncoding,  isEnabled);	  this.entry    =    new    ZipArchiveEntry(inputStream,    encoding,    useUnicodeExtraFields,    isEnabled);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
1004	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  useUnicodeExtraFields,  null);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    encoding,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
1005	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  this.entry.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  this.entry.getValues())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
1006	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
1007	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  this.entry.getEntries())  {  this.entry  =  entry;  }	  for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
1008	[BUG]  [BUGGY]  this.zipEncoding  =  encoding?  useUnicodeExtraFields  :  zipEncoding;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  encoding?  useUnicodeExtraFields  :  zipEncoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  encoding?  useUnicodeExtraFields  :  zipEncoding;	  this.zipEncoding    =    useUnicodeExtraFields?    zipEncoding    :    null;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
1009	[BUG]  [BUGGY]  Thread.currentThread().interrupt(entry);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  Thread.currentThread().interrupt(entry);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	Thread.currentThread().interrupt(entry);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
1010	[BUG]  [BUGGY]  this.entry  =  inputStream.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  inputStream.getImplicitReturn();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  inputStream.getImplicitReturn();	  this.entry    =    inputStream.getValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
1011	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryNames())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
1012	[BUG]  [BUGGY]  this.entry  =  entry.getValueEntry();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValueEntry();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValueEntry();	  this.entry    =    entry.getEntry();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
1013	[BUG]  [BUGGY]  this.entry  =  entry.getValueDesc();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entry  =  entry.getValueDesc();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entry  =  entry.getValueDesc();	  this.entry    =    entry.getEntry();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
1014	[BUG]  [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalArgumentException( " ".);  }	  if(useUnicodeExtraFields)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
1015	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".equals(encoding));  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".equals(encoding));  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor)  {  throw  new  IllegalStateException( " ".equals(encoding));  }	  allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ".equals(encoding));    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
1016	[BUG]  [BUGGY]  int  hasDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  int  hasDataDescriptor)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	int  hasDataDescriptor)  {  throw  new  IllegalStateException( " ");  }	  InputStream    hasDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
1017	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getData())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getData())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getData())  {  this.entry  =  entry.getValue();  }	  for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
1018	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  =  inputStream.getEntrySet();  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    =    inputStream.getEntrySet();    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1019	[BUG]  [BUGGY]  this.inputStream  =  inputStream!=  null?  inputStream.getInputStream()  :  encoding;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.inputStream  =  inputStream!=  null?  inputStream.getInputStream()  :  encoding;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.inputStream  =  inputStream!=  null?  inputStream.getInputStream()  :  encoding;	  this.inputStream    =    inputStream.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
1020	[BUG]  [BUGGY]  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  zipEncoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  zipEncoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	new  ZipArchiveEntry(encoding,  encoding,  useUnicodeExtraFields,  zipEncoding);	  new    ZipArchiveEntry(encoding,    inputStream,    useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
1021	[BUG]  [BUGGY]  if(!allowStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(!allowStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(!allowStoredEntriesWithDataDescriptor  ||  useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  if(!allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1022	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor  =  false;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor  =  false;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor  =  false;	  if(!allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1023	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor  =  useUnicodeExtraFields?  getCentralDirectory()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor  =  useUnicodeExtraFields?  getCentralDirectory()  :  null;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor  =  useUnicodeExtraFields?  getCentralDirectory()  :  null;	  if(!allowStoredEntriesWithDataDescriptor)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1024	[BUG]  [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	if(useUnicodeExtraFields)  {  for(final  ZipArchiveEntry  <  final  String,  Object>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    <    final    String,    Object>    entry    :    inputStream.getEntries())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
1025	[BUG]  [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ENCODING,  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  new  ZipEncoding(ENCODING,  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  new  ZipEncoding(ENCODING,  useUnicodeExtraFields);	  this.zipEncoding    =    new    ZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1026	[BUG]  [BUGGY]  safeUseUnicodeExtraFields())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  safeUseUnicodeExtraFields())  {  throw  new  RuntimeException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	safeUseUnicodeExtraFields())  {  throw  new  RuntimeException( " ");  }	  safeUseUnicodeExtraFields())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
1027	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  0,  encoding.length);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  0,  encoding.length);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  encoding,  0,  encoding.length);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    0);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1028	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  1.0,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  1.0,  0);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.getZipEncoding(encoding,  1.0,  0);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(encoding,    useUnicodeExtraFields,    0);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1029	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getEnd())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  entry  :  inputStream.getEnd())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  entry  :  inputStream.getEnd())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    for(final    ZipArchiveEntry    entry    :    inputStream.getKey())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
1030	[BUG]  [BUGGY]  This.entry  =  entry.getValue();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  This.entry  =  entry.getValue();  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	This.entry  =  entry.getValue();	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1031	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  entries.getValues())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  entries.getValues())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  entries.getValues())  {  this.entry  =  entry.getValue();  }	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getValues())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1032	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getKey();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getKey();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntryList())  {  this.entry  =  entry.getKey();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
1033	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntryList())  {  this.entry  =  entry;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntryList())  {  this.entry  =  entry;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntryList())  {  this.entry  =  entry;  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntryList())    {    this.entry    =    entry;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
1034	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  this.entry.getEntries())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
1035	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  <  K,  V>  entry  :  this.inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
1036	[BUG]  [BUGGY]  static  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  static  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	static  final  ZipArchiveEntry  <  K,  V>  entry  :  inputStream.getEntries())  {  this.entry  =  entry.getValue();  }	  final    ZipArchiveEntry    <    K,    V>    entry    :    inputStream.getEntries())    {    this.entry    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
1037	[BUG]  [BUGGY]  lastStoredEntry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.lastStoredEntry.getKey())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  lastStoredEntry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.lastStoredEntry.getKey())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	lastStoredEntry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.lastStoredEntry.getKey())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
1038	[BUG]  [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.entry.getKey())  {  this.entry  =  entry.get  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.entry.getKey())  {  this.entry  =  entry.get  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	final  ZipArchiveEntry  entry  =  inputStream.getValues();  for(final  ZipArchiveEntry  entry  :  this.entry.getKey())  {  this.entry  =  entry.get	  if(useUnicodeExtraFields)    {    final    ZipArchiveEntry    entry    =    inputStream.getValues();    for(final    ZipArchiveEntry    entry    :    entry.getKey())    {    this.entry    =    entry.get    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
1039	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  entryStream.getKeys())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  entryStream.getKeys())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  entryStream.getKeys())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
1040	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getEndKeys())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getEndKeys())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getEndKeys())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
1041	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getChildren())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getChildren())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getChildren())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
1042	[BUG]  [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getAllEntries())  {  this.current  =  current;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getAllEntries())  {  this.current  =  current;  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	for(final  ZipArchiveEntry  <  K,  V>  current  :  inputStream.getAllEntries())  {  this.current  =  current;  }	  for(final    ZipArchiveEntry    <    K,    V>    current    :    inputStream.getKeys())    {    this.current    =    current;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
1043	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.convertZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.convertZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.convertZipEncoding(encoding);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
1044	[BUG]  [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.loadZipEncoding(encoding);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.zipEncoding  =  ZipEncodingUtilities.loadZipEncoding(encoding);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.zipEncoding  =  ZipEncodingUtilities.loadZipEncoding(encoding);	  this.zipEncoding    =    ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
1045	[BUG]  [BUGGY]  this.allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)  {  throw  new  IllegalStateException( " ");  }	  allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1046	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream.readLine()  &&  encoding.equals(useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream.readLine()  &&  encoding.equals(useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream.readLine()  &&  encoding.equals(useUnicodeExtraFields);	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
1047	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream.readLine(),  useUnicodeExtraFields);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream.readLine(),  useUnicodeExtraFields);  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream.readLine(),  useUnicodeExtraFields);	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
1048	[BUG]  [BUGGY]  this.entriesZip64  =  inputStream.readLine()  &&!useUnicodeExtraFields;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  ZipArchiveInputStream(final  InputStream  inputStream,  final  String  encoding,  final  boolean  useUnicodeExtraFields)  {  this(inputStream,  encoding,  useUnicodeExtraFields,  false);      [BUGGY]  this.entriesZip64  =  inputStream.readLine()  &&!useUnicodeExtraFields;  [BUGGY]        [CLASS]  ZipArchiveInputStream  CurrentEntry  BoundedInputStream  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  InputStream  inputStream  String  encoding  final  boolean  useUnicodeExtraFields  [VARIABLES]  ZipEncoding  zipEncoding  CRC32  crc  InputStream  in  inputStream  String  encoding  ByteBuffer  buf  int  CFH_LEN  LFH_LEN  entriesRead  long  TWO_EXP_32  bytesRead  bytesReadFromStream  max  pos  byte[]  CFH  DD  LFH  lfhBuf  shortBuf  skipBuf  twoDwordBuf  wordBuf  CurrentEntry  current  boolean  allowStoredEntriesWithDataDescriptor  closed  hasDataDescriptor  hitCentralDirectory  useUnicodeExtraFields  usesZip64  ByteArrayInputStream  lastStoredEntry  ZipArchiveEntry  entry  Inflater  inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	this.entriesZip64  =  inputStream.readLine()  &&!useUnicodeExtraFields;	  this.entriesZip64    =    inputStream.readLine();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
