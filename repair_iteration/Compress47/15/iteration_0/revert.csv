projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>current:inputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,useUnicodeExtraFields);
