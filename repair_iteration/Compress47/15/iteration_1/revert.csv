projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>current:inputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,userUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(encoding,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getKeys()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getChildren()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor||useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193While(!useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193readFully(encoding,useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("".equals(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193safeUseUnicodeExtraFields()){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<finalString,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<String,Object>entry=inputStream.getEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<String,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>current:inputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=current;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:inputStream.getKeys()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>current:outputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue(),encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getValue()-1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,userUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.DEFAULT_ZIP_ENCODING;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=CRC32.zipEncoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntryentry=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getValues()){this.encoding=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,0,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(encoding,inputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,isEnabled);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();for(finalZipArchiveEntry<K,V>entry:entry.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntryList();for(finalZipArchiveEntry<K,V>entry:entry.getKey()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.cloneTree();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.cloneTarget();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.toString();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.inputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.in=newZipInputStream(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getValue()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getKey()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntries();for(finalZipArchiveEntry<K,V>entry:entry.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193finalZipArchiveEntry<K,V>entry=inputStream.getEntrySet();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntryList()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry=inputStream.getEntrySet();this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey(),encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.getKey()+encoding;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=useUnicodeExtraFields?zipEncoding:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=zipEncoding+useUnicodeExtraFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=encodeZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(!allowStoredEntries){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193InputStreamhasDataDescriptor=useUnicodeExtraFields?this:null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(outputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(zipEncoding,inputStream,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193lastStoredEntry=inputStream.getLastStoredEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntries()){this.encoding=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>current=inputStream.getValues();this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>current:outputStream.getValues()){this.current=current;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getValues();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,inputStream);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,useUnicodeExtraFields,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(inputStream,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.getZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtil.generateZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entryStream.getKey();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=newZipArchiveEntry(null,encoding,useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getEntryList();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:outputStream.getEntryList()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValue();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntryentry:inputStream.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){for(finalZipArchiveEntry<K,V>entry:inputStream.getEntrySet()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193newZipArchiveEntry(inputStream,encoding,useUnicodeExtraFields);this.entry=inputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getValues()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193if(useUnicodeExtraFields){finalZipArchiveEntryentry=inputStream.getValues();for(finalZipArchiveEntryentry:entry.getKey()){this.entry=entry.get
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncoding.getZipEncoding(encoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entriesZip64=inputStream.readLine();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=newZipEncoding(useUnicodeExtraFields);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.zipEncoding=ZipEncodingUtilities.getZipEncoding(encoding,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getValues()){this.entry=entry.getKey();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.inputStream=inputStream.getValue();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor(useUnicodeExtraFields){thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("".equalsIgnoreCase(encoding));}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193Thread.currentThread().interrupt();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193allowStoredEntriesWithDataDescriptor){thrownewIllegalStateException("".equals(encoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.entrySet()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<K,V>entry:inputStream.getEntry()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntry<finalString,Object>entry:inputStream.getEntries()){this.entry=entry;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntries();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=entry.data;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.entry=inputStream.getEntryList();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193this.current=newZipArchiveEntry<K,V>(inputStream.getValues());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getAllValues()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:inputStream.getEntries()){this.entry=entry.getValue();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java193for(finalZipArchiveEntryentry:this.entries){this.entry=entry.getKey();}
