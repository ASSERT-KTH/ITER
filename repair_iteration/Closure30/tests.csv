name,outcome,runtime,stacktrace
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase,PASS,384277366,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode,PASS,364593836,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement,PASS,254589425,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp,PASS,236569628,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign,PASS,249392041,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode,PASS,253463003,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath,PASS,208628508,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition,PASS,210570162,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath,PASS,442047770,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse,PASS,202641940,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions,PASS,233152495,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition,PASS,209598340,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop,PASS,253255058,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop,PASS,214261812,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse,PASS,215213567,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine,PASS,234676315,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths,PASS,312997919,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath,PASS,215028189,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions,PASS,172794408,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1,PASS,209866903,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2,PASS,179734741,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3,PASS,203252848,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4,PASS,209123097,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5,PASS,179785458,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6,PASS,188513765,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7,PASS,205445064,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8,PASS,278039512,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9,PASS,214957578,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10,PASS,213157162,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11,PASS,266964852,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12,PASS,221018409,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13,PASS,228585962,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach,PASS,228426458,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction,PASS,187419837,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue,PASS,253693022,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction,PASS,228914212,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp,PASS,188046197,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2,PASS,193227234,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3,PASS,274542429,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle,PASS,217835276,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors,PASS,213498040,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits,PASS,203941212,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits,PASS,181819393,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits,PASS,185193999,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop,PASS,180842940,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels,PASS,190572409,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1,FAIL,194291077,junit.framework.AssertionFailedError: Expected: function _func(){var y;var x=noSFX(y);print(x)} Result: function _func(){var y;var x;print(noSFX(y))} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _func 1 [source_file: expected0] NAME _func 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME y 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME noSFX 1 [source_file: expected0] NAME y 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME print 1 [source_file: expected0] NAME x 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _func 1 [source_file: testcode] NAME _func 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME y 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME print 1 [source_file: testcode] CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode] NAME noSFX 1 [source_file: testcode] NAME y 1 [source_file: testcode]   Subtree1: NAME x 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME noSFX 1 [source_file: expected0] NAME y 1 [source_file: expected0]   Subtree2: NAME x 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:873) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:434) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:376) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:443) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:439) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineAcrossSideEffect1(FlowSensitiveInlineVariablesTest.java:329) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2,PASS,209486767,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3,PASS,210605194,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4,PASS,204873432,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect,FAIL,227040336,junit.framework.AssertionFailedError: Expected: function _func(){var y;var x=noSFX(y),z=noSFX();noSFX();noSFX(),print(x)} Result: function _func(){var y;var x,z=noSFX();noSFX();noSFX(),print(noSFX(y))} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _func 1 [source_file: expected0] NAME _func 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME y 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME noSFX 1 [source_file: expected0] NAME y 1 [source_file: expected0] NAME z 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME noSFX 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME noSFX 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] COMMA 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME noSFX 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME print 1 [source_file: expected0] NAME x 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _func 1 [source_file: testcode] NAME _func 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME y 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x 1 [source_file: testcode] NAME z 1 [source_file: testcode] CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode] NAME noSFX 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode] NAME noSFX 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] COMMA 1 [source_file: testcode] CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode] NAME noSFX 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME print 1 [source_file: testcode] CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode] NAME noSFX 1 [source_file: testcode] NAME y 1 [source_file: testcode]   Subtree1: NAME x 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME noSFX 1 [source_file: expected0] NAME y 1 [source_file: expected0]   Subtree2: NAME x 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:873) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:434) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:376) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:443) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:439) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testCanInlineAcrossNoSideEffect(FlowSensitiveInlineVariablesTest.java:363) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables,PASS,203387886,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign,PASS,262974299,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments,PASS,199767143,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1,PASS,198622817,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2,PASS,188120346,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes,PASS,249121099,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698,FAIL,183642675,junit.framework.AssertionFailedError: Expected: function _func(){var x;unknown.length<2&&(unknown="0"+unknown);x=""+unknown;unknown.length<3&&(unknown="0"+unknown);x=x+unknown;return x} Result: function _func(){var x;unknown.length<2&&(unknown="0"+unknown);unknown.length<3&&(unknown="0"+unknown);return""+unknown+unknown} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _func 1 [source_file: expected0] NAME _func 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] AND 1 [source_file: expected0] LT 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME unknown 1 [source_file: expected0] STRING length 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] ASSIGN 1 [parenthesized: true] [source_file: expected0] NAME unknown 1 [source_file: expected0] ADD 1 [source_file: expected0] STRING 0 1 [source_file: expected0] NAME unknown 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] STRING  1 [source_file: expected0] NAME unknown 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] AND 1 [source_file: expected0] LT 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME unknown 1 [source_file: expected0] STRING length 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] ASSIGN 1 [parenthesized: true] [source_file: expected0] NAME unknown 1 [source_file: expected0] ADD 1 [source_file: expected0] STRING 0 1 [source_file: expected0] NAME unknown 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x 1 [source_file: expected0] NAME unknown 1 [source_file: expected0] RETURN 1 [source_file: expected0] NAME x 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _func 1 [source_file: testcode] NAME _func 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] AND 1 [source_file: testcode] LT 1 [source_file: testcode] GETPROP 1 [source_file: testcode] NAME unknown 1 [source_file: testcode] STRING length 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] ASSIGN 1 [parenthesized: true] [source_file: testcode] NAME unknown 1 [source_file: testcode] ADD 1 [source_file: testcode] STRING 0 1 [source_file: testcode] NAME unknown 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] AND 1 [source_file: testcode] LT 1 [source_file: testcode] GETPROP 1 [source_file: testcode] NAME unknown 1 [source_file: testcode] STRING length 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] ASSIGN 1 [parenthesized: true] [source_file: testcode] NAME unknown 1 [source_file: testcode] ADD 1 [source_file: testcode] STRING 0 1 [source_file: testcode] NAME unknown 1 [source_file: testcode] RETURN 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] STRING  1 [source_file: testcode] NAME unknown 1 [source_file: testcode] NAME unknown 1 [source_file: testcode]   Subtree1: BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] AND 1 [source_file: expected0] LT 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME unknown 1 [source_file: expected0] STRING length 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] ASSIGN 1 [parenthesized: true] [source_file: expected0] NAME unknown 1 [source_file: expected0] ADD 1 [source_file: expected0] STRING 0 1 [source_file: expected0] NAME unknown 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] STRING  1 [source_file: expected0] NAME unknown 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] AND 1 [source_file: expected0] LT 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME unknown 1 [source_file: expected0] STRING length 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] ASSIGN 1 [parenthesized: true] [source_file: expected0] NAME unknown 1 [source_file: expected0] ADD 1 [source_file: expected0] STRING 0 1 [source_file: expected0] NAME unknown 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x 1 [source_file: expected0] NAME unknown 1 [source_file: expected0] RETURN 1 [source_file: expected0] NAME x 1 [source_file: expected0]   Subtree2: BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] AND 1 [source_file: testcode] LT 1 [source_file: testcode] GETPROP 1 [source_file: testcode] NAME unknown 1 [source_file: testcode] STRING length 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] ASSIGN 1 [parenthesized: true] [source_file: testcode] NAME unknown 1 [source_file: testcode] ADD 1 [source_file: testcode] STRING 0 1 [source_file: testcode] NAME unknown 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] AND 1 [source_file: testcode] LT 1 [source_file: testcode] GETPROP 1 [source_file: testcode] NAME unknown 1 [source_file: testcode] STRING length 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] ASSIGN 1 [parenthesized: true] [source_file: testcode] NAME unknown 1 [source_file: testcode] ADD 1 [source_file: testcode] STRING 0 1 [source_file: testcode] NAME unknown 1 [source_file: testcode] RETURN 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] STRING  1 [source_file: testcode] NAME unknown 1 [source_file: testcode] NAME unknown 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:873) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:434) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:376) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:443) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testIssue698(FlowSensitiveInlineVariablesTest.java:423) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign,PASS,218678072,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported,PASS,189393428,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch,PASS,238887878,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse,PASS,207432572,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar,PASS,251933649,
