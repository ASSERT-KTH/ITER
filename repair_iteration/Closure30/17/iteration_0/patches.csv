bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  IllegalArgumentException( " ");	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  IllegalStateException( " ");	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  UnsupportedOperationException( " ");	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
4	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  scope: "  +  var.getName());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  scope: "  +  var.getName());  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  AssertionFailedError( "Unexpected  scope: "  +  var.getName());	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
5	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  var: "  +  name);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  AssertionFailedError( "Unknown  var: "  +  name);  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  AssertionFailedError( "Unknown  var: "  +  name);	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
6	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Missing  var: "  +  name);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  AssertionFailedError( "Missing  var: "  +  name);  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  AssertionFailedError( "Missing  var: "  +  name);	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
7	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  scope: "  +  var.getType());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  scope: "  +  var.getType());  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  AssertionFailedError( "Unexpected  scope: "  +  var.getType());	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]    [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	  	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
9	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(var.getString()));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(var.getString()));  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  IllegalArgumentException( " ".equals(var.getString()));	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  throw  new  JsScopeException( " ");  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  JsScopeException( " ");  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  JsScopeException( " ");	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
11	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  scope: "  +  var.getName());  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  AssertionFailedError( "Unknown  scope: "  +  var.getName());  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  AssertionFailedError( "Unknown  scope: "  +  var.getName());	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
12	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  scope: "  +  var.scope);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  @Nullable  Node  rValue,  MustDef  def)  {  Var  var  =  jsScope.getVar(name);    if  (var  ==  null  ||  var.scope  !=  jsScope)  {  [BUGGY]  throw  new  AssertionFailedError( "Unknown  scope: "  +  var.scope);  [BUGGY]  }  for  (Var  other  :  def.reachingDef.keySet())  {  Definition  otherDef  =  def.reachingDef.get(other);  if  (otherDef  ==  null)  {  continue;  }  if  (otherDef.depends.contains(var))  {  def.reachingDef.put(other,  null);  }  [CLASS]  MustBeReachingVariableDef  Definition  MustDef  MustDefJoin  1  [METHOD]  addToDefIfLocal  [RETURN_TYPE]  void  String  name  Node  node  Node  rValue  MustDef  def  [VARIABLES]  AbstractCompiler  compiler  Set  depends  escaped  boolean  Scope  jsScope  Var  other  var  Node  aNode  c  cfgNode  lhs  n  name  node  obj  rValue  rhs  target  Definition  definition  otherDef  String  name  Map  reachingDef  resultMap  MustDef  def  	projects/Closure30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	0.2581988897471611	333	333	3	replace	throw  new  AssertionFailedError( "Unknown  scope: "  +  var.scope);	return;  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
