bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer[]  values  =  getValues();  [CE]  incompatible  types  [FE]            UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  Integer[]  values  =  getValues();  [BUGGY]      getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	Integer[]  values  =  getValues();	  if(years    ==    0)    {    int[]    values    =    getValues();    }    else    {    getPeriodType().setIndexedField(this,    PeriodType.YEAR_INDEX,    values,    years);    }    	non-compiled	[CE]  incompatible  types	7	None	replace
2	[BUG]  [BUGGY]  years  =  getYears();  [CE]  cannot  find  symbol  values  [FE]            UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  years  =  getYears();  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	years  =  getYears();	  years    =    getValues();    	non-compiled	[CE]  cannot  find  symbol  values	1	None	replace
3	[BUG]  [BUGGY]  years  =  getField().years();  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  years  =  getField().years();  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	years  =  getField().years();	  years    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
4	[BUG]  [BUGGY]  int[]  values  =  getValues(years,  PeriodType.YEAR_INDEX);  [CE]  method  getValues  in  class  AbstractPeriod  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  int[]  values  =  getValues(years,  PeriodType.YEAR_INDEX);  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	int[]  values  =  getValues(years,  PeriodType.YEAR_INDEX);	  int[]    values    =    getValues(years);    	non-compiled	[CE]  method  getValues  in  class  AbstractPeriod  cannot  be  applied  to  given  types;	6	None	replace
5	[BUG]  [BUGGY]  this.years  =  getValues();  [CE]  cannot  find  symbol  years  [FE]                UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  this.years  =  getValues();  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	this.years  =  getValues();	  if(years    ==    0)    {    return    new    Period(getPeriodType());    }    else    {    getPeriodType().setIndexedField(this,    PeriodType.YEAR_INDEX,    values,    years);    return    new    Period(values,    getPeri    	non-compiled	[CE]  cannot  find  symbol  years	4	None	replace
6	[BUG]  [BUGGY]  int[]  values  =  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years,  ZERO);  [CE]  method  setIndexedField  in  class  PeriodType  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  int[]  values  =  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years,  ZERO);  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	int[]  values  =  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years,  ZERO);	  int[]    values    =    getPeriodType().setIndexedField(this,    PeriodType.YEAR_INDEX,    values,    years);    	non-compiled	[CE]  method  setIndexedField  in  class  PeriodType  cannot  be  applied  to  given  types;	2	None	replace
7	[BUG]  [BUGGY]  int[]  values  =  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  YEARS);  [CE]  cannot  find  symbol  YEARS  [FE]                UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  int[]  values  =  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  YEARS);  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	int[]  values  =  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  YEARS);	  int[]    values    =    getPeriodType().setIndexedField(this,    PeriodType.YEAR_INDEX,    values,    years);    	non-compiled	[CE]  cannot  find  symbol  YEARS	2	None	replace
8	[BUG]  [BUGGY]  while(years!=  0)  {  values[0]  =  getValues();  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  while(years!=  0)  {  values[0]  =  getValues();  [BUGGY]      getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	while(years!=  0)  {  values[0]  =  getValues();	  if(years    ==    0)    {    int[]    values    =    getValues();    }    else    {    getPeriodType().setIndexedField(this,    PeriodType.YEAR_INDEX,    values,    years);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  if(years!=  0)  {  return  new  Period(getPeriodType());  }  else  {  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  YEARS);  }  [CE]  cannot  find  symbol  values  [FE]            UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  if(years!=  0)  {  return  new  Period(getPeriodType());  }  else  {  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  YEARS);  }  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	if(years!=  0)  {  return  new  Period(getPeriodType());  }  else  {  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  YEARS);  }	  if(years!=    0)    {    return    new    Period(getPeriodType());    }    else    {    getPeriodType().setIndexedField(this,    PeriodType.YEAR_INDEX,    values,    years);    }    	non-compiled	[CE]  cannot  find  symbol  values	5	None	replace
10	[BUG]  [BUGGY]  Years  =  getYears();  [CE]  cannot  find  symbol  Years  [FE]            UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  Years  =  getYears();  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	Years  =  getYears();	  years    =    getValues();    	non-compiled	[CE]  cannot  find  symbol  Years	1	None	replace
11	[BUG]  [BUGGY]  if(years  ==  0)  {  return  new  Period(getPeriodType());  }  else  {  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPer  [CE]  ')'  expected  [FE]                UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  if(years  ==  0)  {  return  new  Period(getPeriodType());  }  else  {  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPer  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	if(years  ==  0)  {  return  new  Period(getPeriodType());  }  else  {  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPer	  if(years    ==    0)    {    return    new    Period(getPeriodType());    }    else    {    getPeriodType().setIndexedField(this,    PeriodType.YEAR_INDEX,    values,    years);    return    new    Period(values,    getPeri    	non-compiled	[CE]  ')'  expected	4	None	replace
12	[BUG]  [BUGGY]  if(years!=  0)  {  return  new  Period(getPeriodType());  }  [CE]  cannot  find  symbol  values  [FE]            UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  if(years!=  0)  {  return  new  Period(getPeriodType());  }  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	if(years!=  0)  {  return  new  Period(getPeriodType());  }	  if(years!=    0)    {    return    new    Period(getPeriodType());    }    else    {    getPeriodType().setIndexedField(this,    PeriodType.YEAR_INDEX,    values,    years);    }    	non-compiled	[CE]  cannot  find  symbol  values	5	None	replace
13	[BUG]  [BUGGY]  int[]  values  =  getValues(years,  periods);  [CE]  cannot  find  symbol  periods  [FE]            UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  int[]  values  =  getValues(years,  periods);  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	int[]  values  =  getValues(years,  periods);	  int[]    values    =    getValues(years);    	non-compiled	[CE]  cannot  find  symbol  periods	6	None	replace
14	[BUG]  [BUGGY]  int  years  =  getValues();  [CE]  variable  years  is  already  defined  in  method  withYears(int)  [FE]            UnsupportedOperationException      [CONTEXT]      public  Period  withYears(int  years)  {      [BUGGY]  int  years  =  getValues();  [BUGGY]      int[]  values  =  getValues();//  cloned  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  getPeriodType().setIndexedField(this,  PeriodType.YEAR_INDEX,  values,  years);  return  new  Period(values,  getPeriodType());  }  [CLASS]  Period  [METHOD]  withYears  [RETURN_TYPE]  Period  int  years  [VARIABLES]  Period  ZERO  int[]  values  boolean  long  duration  endInstant  serialVersionUID  startInstant  int  years  	projects/Time5/src/main/java/org/joda/time/Period.java	0.5	895	896	3	replace	int  years  =  getValues();	  years    =    getValues();    	non-compiled	[CE]  variable  years  is  already  defined  in  method  withYears(int)	1	None	replace
