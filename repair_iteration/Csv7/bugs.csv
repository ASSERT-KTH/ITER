bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] final CSVRecord nextRecord = this.nextRecord(); [FE] AssertionError [CONTEXT] private Map<String, Integer> initializeHeader() throws IOException { Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { hdrMap = new LinkedHashMap<String, Integer>(); String[] header = null; if (formatHeader.length == 0) {  [BUGGY] final CSVRecord nextRecord = this.nextRecord(); [BUGGY] if (nextRecord != null) { header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }  [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private Map<String, Integer> initializeHeader() throws IOException { Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { hdrMap = new LinkedHashMap<String, Integer>(); String[] header = null; if (formatHeader.length == 0) {  [BUGGY] [BUGGY] final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }  [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	add	
3	[BUG] [BUGGY] if (nextRecord != null) { [FE] AssertionError [CONTEXT] private Map<String, Integer> initializeHeader() throws IOException { Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { hdrMap = new LinkedHashMap<String, Integer>(); String[] header = null; if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); [BUGGY] if (nextRecord != null) { [BUGGY] header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }   [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private Map<String, Integer> initializeHeader() throws IOException { Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { hdrMap = new LinkedHashMap<String, Integer>(); String[] header = null; if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); [BUGGY] [BUGGY] if (nextRecord != null) { header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }   [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	add	
5	[BUG] [BUGGY] header = nextRecord.values(); [FE] AssertionError [CONTEXT] Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { hdrMap = new LinkedHashMap<String, Integer>(); String[] header = null; if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { [BUGGY] header = nextRecord.values(); [BUGGY] } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }  if (header != null) { [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	359	359	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { hdrMap = new LinkedHashMap<String, Integer>(); String[] header = null; if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { [BUGGY] [BUGGY] header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }  if (header != null) { [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	359	359	1	add	
7	[BUG] [BUGGY] } else { [FE] AssertionError [CONTEXT] if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { header = nextRecord.values(); } [BUGGY] } else { [BUGGY] if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	361	361	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { header = nextRecord.values(); } [BUGGY] [BUGGY] } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	361	361	1	add	
9	[BUG] [BUGGY] hdrMap = new LinkedHashMap<String, Integer>(); [FE] AssertionError [CONTEXT] private Map<String, Integer> initializeHeader() throws IOException { Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { [BUGGY] hdrMap = new LinkedHashMap<String, Integer>(); [BUGGY]  String[] header = null; if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private Map<String, Integer> initializeHeader() throws IOException { Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { [BUGGY] [BUGGY] hdrMap = new LinkedHashMap<String, Integer>(); String[] header = null; if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	add	
11	[BUG] [BUGGY] String[] header = null; [FE] AssertionError [CONTEXT] private Map<String, Integer> initializeHeader() throws IOException { Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { hdrMap = new LinkedHashMap<String, Integer>(); [BUGGY] String[] header = null; [BUGGY] if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private Map<String, Integer> initializeHeader() throws IOException { Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { hdrMap = new LinkedHashMap<String, Integer>(); [BUGGY] [BUGGY] String[] header = null; if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	add	
13	[BUG] [BUGGY] if (formatHeader.length == 0) { [FE] AssertionError [CONTEXT] private Map<String, Integer> initializeHeader() throws IOException { Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { hdrMap = new LinkedHashMap<String, Integer>(); String[] header = null; [BUGGY] if (formatHeader.length == 0) { [BUGGY]  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	355	355	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private Map<String, Integer> initializeHeader() throws IOException { Map<String, Integer> hdrMap = null; final String[] formatHeader = this.format.getHeader(); if (formatHeader != null) { hdrMap = new LinkedHashMap<String, Integer>(); String[] header = null; [BUGGY] [BUGGY] if (formatHeader.length == 0) {  final CSVRecord nextRecord = this.nextRecord(); if (nextRecord != null) { header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	355	355	1	add	
15	[BUG] [BUGGY] if (header != null) { [FE] AssertionError [CONTEXT] header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }  [BUGGY] if (header != null) { [BUGGY] for (int i = 0; i < header.length; i++) { hdrMap.put(header[i], Integer.valueOf(i)); } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] header = nextRecord.values(); } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }  [BUGGY] [BUGGY] if (header != null) { for (int i = 0; i < header.length; i++) { hdrMap.put(header[i], Integer.valueOf(i)); } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	369	369	1	add	
17	[BUG] [BUGGY] for (int i = 0; i < header.length; i++) { [FE] AssertionError [CONTEXT] } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }  if (header != null) { [BUGGY] for (int i = 0; i < header.length; i++) { [BUGGY] hdrMap.put(header[i], Integer.valueOf(i)); } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }  if (header != null) { [BUGGY] [BUGGY] for (int i = 0; i < header.length; i++) { hdrMap.put(header[i], Integer.valueOf(i)); } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	370	370	1	add	
19	[BUG] [BUGGY] hdrMap.put(header[i], Integer.valueOf(i)); [FE] AssertionError [CONTEXT] } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }  if (header != null) { for (int i = 0; i < header.length; i++) { [BUGGY] hdrMap.put(header[i], Integer.valueOf(i)); [BUGGY] } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	371	371	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } else { if (this.format.getSkipHeaderRecord()) { this.nextRecord(); } header = formatHeader; }  if (header != null) { for (int i = 0; i < header.length; i++) { [BUGGY] [BUGGY] hdrMap.put(header[i], Integer.valueOf(i)); } } } return hdrMap; } [CLASS] CSVParser 1 [METHOD] initializeHeader [RETURN_TYPE] Map  [VARIABLES] Lexer lexer boolean CSVFormat format List record Token reusableToken CSVRecord current nextRecord rec String[] formatHeader header Map hdrMap headerMap long recordNumber int i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	371	371	1	add	
