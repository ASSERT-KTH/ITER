bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String[]  header  =  hdrMap.toArray(new  String[hdrMap.size()  ]);  [CE]  :  expected  [FE]    AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  hdrMap.toArray(new  String[hdrMap.size()  ]);  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  hdrMap.toArray(new  String[hdrMap.size()  ]);	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
2	[BUG]  [BUGGY]  String[]  header  =  hdrMap.values();  [CE]  :  expected  [FE]      AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  hdrMap.values();  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  hdrMap.values();	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
3	[BUG]  [BUGGY]  String[]  header  =  hdrMap.keySet();  [CE]  :  expected  [FE]        AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  hdrMap.keySet();  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  hdrMap.keySet();	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
4	[BUG]  [BUGGY]  String[]  header  =  new  String[hdrMap.size()  ];  [CE]  :  expected  [FE]          AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  new  String[hdrMap.size()  ];  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  new  String[hdrMap.size()  ];	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
5	[BUG]  [BUGGY]  String[]  header  =  this.format.getHeader();  [CE]  :  expected  [FE]            AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  this.format.getHeader();  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  this.format.getHeader();	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
6	[BUG]  [BUGGY]  String[]  header  =  hdrMap;  [CE]  :  expected  [FE]              AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  hdrMap;  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  hdrMap;	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
7	[BUG]  [BUGGY]  String[]  header  =  hdrMap.get(formatHeader);  [CE]  :  expected  [FE]                AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  hdrMap.get(formatHeader);  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  hdrMap.get(formatHeader);	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
8	[BUG]  [BUGGY]    [CE]  :  expected  [FE]                  AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]    [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	  	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
9	[BUG]  [BUGGY]  String[]  header  =  new  String[initializeHeader().values().size()  ];  [CE]  :  expected  [FE]    AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  new  String[initializeHeader().values().size()  ];  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  new  String[initializeHeader().values().size()  ];	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
10	[BUG]  [BUGGY]  String[]  header  =  new  String[record.values().size()  ];  [CE]  :  expected  [FE]    AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  new  String[record.values().size()  ];  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  new  String[record.values().size()  ];	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
11	[BUG]  [BUGGY]  String[]  header  =  new  String[hdrMap.values().size()  ];  [CE]  :  expected  [FE]      AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  new  String[hdrMap.values().size()  ];  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  new  String[hdrMap.values().size()  ];	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
12	[BUG]  [BUGGY]  String[]  header  =  new  String[hdrMap.values()  ];  [CE]  :  expected  [FE]        AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  [BUGGY]  String[]  header  =  new  String[hdrMap.values()  ];  [BUGGY]  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	354	354	1	replace	String[]  header  =  new  String[hdrMap.values()  ];	String[]  header  =  null;  	non-compiled	[CE]  :  expected	11	None	replace
