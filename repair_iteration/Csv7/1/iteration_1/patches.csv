bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  rec.getHeaderRecord();  [CE]  cannot  find  symbol  rec  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  rec.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  rec.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol  rec	9	None	replace
2	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.getHeaderRecord();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  hdrMap.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
3	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  header.getHeaderRecord();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  header.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  header.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  ';'  expected	9	None	replace
4	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  rec.getHeaderRecord();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  rec.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  rec.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  ';'  expected	9	None	replace
5	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  formatHeader.getHeaderRecord();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  formatHeader.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  formatHeader.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
6	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  current.getHeaderRecord();  [CE]  cannot  find  symbol  current  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  current.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  current.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol  current	9	None	replace
7	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  rec.getNextHeaderRecord();  [CE]  cannot  find  symbol  rec  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  rec.getNextHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  rec.getNextHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol  rec	7	None	replace
8	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.getNextHeaderRecord();  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.getNextHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  hdrMap.getNextHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
9	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  rec.getNextHeaderRecord();  [CE]  ';'  expected  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  rec.getNextHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  rec.getNextHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextHeaderRecord();    	non-compiled	[CE]  ';'  expected	7	None	replace
10	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  current.getNextHeaderRecord();  [CE]  cannot  find  symbol  current  [FE]                          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  current.getNextHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  current.getNextHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol  current	7	None	replace
11	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  formatHeader.getNextHeaderRecord();  [CE]  cannot  find  symbol  [FE]                            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  formatHeader.getNextHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  formatHeader.getNextHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
12	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  header.getNextHeaderRecord();  [CE]  ';'  expected  [FE]                              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  header.getNextHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  header.getNextHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextHeaderRecord();    	non-compiled	[CE]  ';'  expected	7	None	replace
13	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  rec.getNextRecord();  [CE]  cannot  find  symbol  rec  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  rec.getNextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  rec.getNextRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextRecord();    	non-compiled	[CE]  cannot  find  symbol  rec	3	None	replace
14	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.getNextRecord();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.getNextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  hdrMap.getNextRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextRecord();    	non-compiled	[CE]  ';'  expected	3	None	replace
15	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  current.getNextRecord();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  current.getNextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  current.getNextRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextRecord();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
16	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  RectangleConstants.getNextRecord();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  RectangleConstants.getNextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  RectangleConstants.getNextRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextRecord();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
17	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  rec.getNextRecord();  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  rec.getNextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  rec.getNextRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextRecord();    	non-compiled	[CE]  ';'  expected	3	None	replace
18	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>();  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
19	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length);  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
20	[BUG]  [BUGGY]  hdrMap.put(record,  header);  [CE]  cannot  find  symbol  [FE]                          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  hdrMap.put(record,  header);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	hdrMap.put(record,  header);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
21	[BUG]  [BUGGY]  hdrMap.put(rect.toString(),  header);  [CE]  cannot  find  symbol  [FE]                            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  hdrMap.put(rect.toString(),  header);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	hdrMap.put(rect.toString(),  header);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
22	[BUG]  [BUGGY]  hdrMap.put(header,  header);  [CE]  cannot  find  symbol  [FE]                              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  hdrMap.put(header,  header);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	hdrMap.put(header,  header);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
23	[BUG]  [BUGGY]  hdrMap.put(header,  formatHeader);  [CE]  cannot  find  symbol  [FE]                                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  hdrMap.put(header,  formatHeader);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	hdrMap.put(header,  formatHeader);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
24	[BUG]  [BUGGY]  Integer  nextRecord  =  hdrMap.get(header);  [CE]  cannot  find  symbol  [FE]                                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  Integer  nextRecord  =  hdrMap.get(header);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	Integer  nextRecord  =  hdrMap.get(header);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
25	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  rec.currentRecord();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  rec.currentRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  rec.currentRecord();	  final    CSVRecord    nextRecord    =    this.currentRecord();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
26	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.currentRecord();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.currentRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.currentRecord();	  final    CSVRecord    nextRecord    =    this.currentRecord();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
27	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.rec.currentRecord();  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.rec.currentRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.rec.currentRecord();	  final    CSVRecord    nextRecord    =    this.currentRecord();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
28	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  RectangleConstants.currentRecord();  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  RectangleConstants.currentRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  RectangleConstants.currentRecord();	  final    CSVRecord    nextRecord    =    this.currentRecord();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
29	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.currentRecord();  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.currentRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  hdrMap.currentRecord();	  final    CSVRecord    nextRecord    =    this.currentRecord();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
30	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  RectangleEdge.currentRecord();  [CE]  cannot  find  symbol  [FE]                          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  RectangleEdge.currentRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  RectangleEdge.currentRecord();	  final    CSVRecord    nextRecord    =    this.currentRecord();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
31	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  rec.getNumberRecord();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  rec.getNumberRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  rec.getNumberRecord();	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
32	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.getNumberRecord();  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.getNumberRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  hdrMap.getNumberRecord();	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
33	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  RectangleConstants.getNumberRecord();  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  RectangleConstants.getNumberRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  RectangleConstants.getNumberRecord();	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
34	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  current.getNumberRecord();  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  current.getNumberRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  current.getNumberRecord();	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
35	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  formatHeader.getNumberRecord();  [CE]  cannot  find  symbol  [FE]                          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  formatHeader.getNumberRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  formatHeader.getNumberRecord();	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
36	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  rec.getSkipHeaderRecord();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  rec.getSkipHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  rec.getSkipHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
37	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getSkipHeaderRecord(),  header);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getSkipHeaderRecord(),  header);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.getSkipHeaderRecord(),  header);	  final    CSVRecord    nextRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  ';'  expected	10	None	replace
38	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getSkipHeaderRecord(),  header;  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getSkipHeaderRecord(),  header;  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.getSkipHeaderRecord(),  header;	  final    CSVRecord    nextRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
39	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getRawHeaderRecord();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getRawHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.getRawHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
40	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.nextRecord();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  hdrMap.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  hdrMap.nextRecord();	  final    CSVRecord    nextRecord    =    this.format.nextRecord();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
41	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  current.format.nextRecord();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  current.format.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  current.format.nextRecord();	  final    CSVRecord    nextRecord    =    this.format.nextRecord();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
42	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.record.nextRecord();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.record.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.record.nextRecord();	  final    CSVRecord    nextRecord    =    rec.nextRecord();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
43	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  current.nextRecord();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  current.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  current.nextRecord();	  final    CSVRecord    nextRecord    =    rec.nextRecord();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
44	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  header.nextRecord();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  header.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  header.nextRecord();	  final    CSVRecord    nextRecord    =    rec.nextRecord();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
45	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  formatHeader.nextRecord();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  formatHeader.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  formatHeader.nextRecord();	  final    CSVRecord    nextRecord    =    rec.nextRecord();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
46	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.current.nextRecord();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.current.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.current.nextRecord();	  final    CSVRecord    nextRecord    =    rec.nextRecord();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
47	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.data.nextRecord();  [CE]  cannot  find  symbol  headerName  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.data.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.data.nextRecord();	  final    CSVRecord    nextRecord    =    this.rec.nextRecord();    	non-compiled	[CE]  cannot  find  symbol  headerName	4	None	replace
48	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.skippedHeader.nextRecord();  [CE]  cannot  find  symbol  bodyMap  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.skippedHeader.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.skippedHeader.nextRecord();	  final    CSVRecord    nextRecord    =    this.rec.nextRecord();    	non-compiled	[CE]  cannot  find  symbol  bodyMap	4	None	replace
49	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  current.record();  [CE]  cannot  find  symbol  bodyMap  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  current.record();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  current.record();	  final    CSVRecord    nextRecord    =    this.rec.nextRecord();    	non-compiled	[CE]  cannot  find  symbol  bodyMap	4	None	replace
50	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getCSVHeaderRecord();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getCSVHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.getCSVHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	10	None	replace
51	[BUG]  [BUGGY]  CSVRecord  rec  =  hdrMap.get(header);  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  CSVRecord  rec  =  hdrMap.get(header);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	CSVRecord  rec  =  hdrMap.get(header);	      	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	8	None	replace
52	[BUG]  [BUGGY]  hdrMap.put(header,  this.format);  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  hdrMap.put(header,  this.format);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	hdrMap.put(header,  this.format);	      	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	8	None	replace
53	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.nextRecord(header);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.nextRecord(header);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.nextRecord(header);	  final    CSVRecord    nextRecord    =    this.format.nextRecord();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
54	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  recordHeader.getNextHeaderRecord();  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  recordHeader.getNextHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  recordHeader.getNextHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextHeaderRecord();    	non-compiled	[CE]  ';'  expected	7	None	replace
55	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  hdrMap.getHeaderRecord();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  hdrMap.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  hdrMap.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  ';'  expected	9	None	replace
56	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  recordHeader.getHeaderRecord();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  recordHeader.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  recordHeader.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  ';'  expected	9	None	replace
57	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.record.currentRecord();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.record.currentRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.record.currentRecord();	  final    CSVRecord    nextRecord    =    this.currentRecord();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
58	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.currentRecord.values();  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.currentRecord.values();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.currentRecord.values();	  final    CSVRecord    nextRecord    =    this.currentRecord();    	non-compiled	[CE]  ';'  expected	5	None	replace
59	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.content.nextRecord();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.content.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.content.nextRecord();	  final    CSVRecord    nextRecord    =    this.rec.nextRecord();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
60	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.header.nextRecord();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.header.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.header.nextRecord();	  final    CSVRecord    nextRecord    =    this.rec.nextRecord();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
61	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getPreviousRecord();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getPreviousRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.getPreviousRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextRecord();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
62	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  recordHeader.getNumberRecord();  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  recordHeader.getNumberRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  recordHeader.getNumberRecord();	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  ';'  expected	6	None	replace
63	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  rec.getNumberRecord();  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  rec.getNumberRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  rec.getNumberRecord();	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  ';'  expected	6	None	replace
64	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNumberRecord(header);  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNumberRecord(header);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.getNumberRecord(header);	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	6	None	replace
65	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.nextRecord.nextRecord();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.nextRecord.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.nextRecord.nextRecord();	  final    CSVRecord    nextRecord    =    rec.nextRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	2	None	replace
66	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  currentRecord.nextRecord();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  currentRecord.nextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  currentRecord.nextRecord();	  final    CSVRecord    nextRecord    =    rec.nextRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	2	None	replace
67	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  _format.getNextHeaderRecord();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  _format.getNextHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  _format.getNextHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextHeaderRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	7	None	replace
68	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.removeFirstRecord();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.removeFirstRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.removeFirstRecord();	  final    CSVRecord    nextRecord    =    this.format.nextRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	1	None	replace
69	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.record(rec);  [CE]  wrong  number  of  type  arguments;  required  1  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.record(rec);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.record(rec);	  final    CSVRecord    nextRecord    =    this.format.nextRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	1	None	replace
70	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNumberRecords();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNumberRecords();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.getNumberRecords();	  final    CSVRecord    nextRecord    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	10	None	replace
71	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.currentRecord.record();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.currentRecord.record();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.currentRecord.record();	  final    CSVRecord    nextRecord    =    this.currentRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	5	None	replace
72	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.currentRecord.data();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.currentRecord.data();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.currentRecord.data();	  final    CSVRecord    nextRecord    =    this.currentRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	5	None	replace
73	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  formatHeader.getHeaderRecord();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format,  formatHeader.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format,  formatHeader.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  ';'  expected	9	None	replace
74	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.recordHeader();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.recordHeader();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.recordHeader();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	9	None	replace
75	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  _format.getHeaderRecord();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  _format.getHeaderRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  _format.getHeaderRecord();	  final    CSVRecord    nextRecord    =    this.format.getHeaderRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	9	None	replace
76	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.recordNumber();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.recordNumber();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.recordNumber();	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	6	None	replace
77	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  _format.getNumberRecord();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  _format.getNumberRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  _format.getNumberRecord();	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	6	None	replace
78	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNumberRecord(rec);  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.getNumberRecord(rec);  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.getNumberRecord(rec);	  final    CSVRecord    nextRecord    =    this.format.getNumberRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	6	None	replace
79	[BUG]  [BUGGY]  final  CSVRecord  nextRecord  =  this.format.recordNextRecord();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {      [BUGGY]  final  CSVRecord  nextRecord  =  this.format.recordNextRecord();  [BUGGY]    if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	357	357	1	replace	final  CSVRecord  nextRecord  =  this.format.recordNextRecord();	  final    CSVRecord    nextRecord    =    this.format.getNextRecord();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	3	None	replace
