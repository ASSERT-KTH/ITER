bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(nextRecord  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  [BUGGY]  if(nextRecord  ==  null)  {  [BUGGY]  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null)  {	if  (nextRecord  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  if(nextRecord.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  [BUGGY]  if(nextRecord.values()!=  null)  {  [BUGGY]  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null)  {	if  (nextRecord  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  if  (nextRecord!=  null  ||  nextRecord.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  [BUGGY]  if  (nextRecord!=  null  ||  nextRecord.values()  ==  null)  {  [BUGGY]  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (nextRecord!=  null  ||  nextRecord.values()  ==  null)  {	if  (nextRecord  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  [BUGGY]    [BUGGY]  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	  	if  (nextRecord  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  [BUGGY]  if(nextRecord.values()  ==  null)  {  [BUGGY]  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null)  {	if  (nextRecord  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  [BUGGY]  if(nextRecord!=  null  &&  this.format.getSkipHeaderRecord())  {  [BUGGY]  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  this.format.getSkipHeaderRecord())  {	if  (nextRecord  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values()  >  0)  {  [BUGGY]  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.values()  >  0)  {	if  (nextRecord  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  header.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  [BUGGY]  if(nextRecord!=  null  ||  header.length  ==  0)  {  [BUGGY]  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  header.length  ==  0)  {	if  (nextRecord  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  >  0)  {  [BUGGY]  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.size()  >  0)  {	if  (nextRecord  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
