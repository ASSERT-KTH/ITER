bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  hdrMap.put(header,  nextRecord);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap.put(header,  nextRecord);  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  nextRecord);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>();  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length);  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(this.format.getSkipHeaderRecord()));	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(nextRecord.values()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap.put(header,  new  CSVRecord(nextRecord.values()));  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(nextRecord.values()));	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  hdrMap.put(formatHeader,  nextRecord);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap.put(formatHeader,  nextRecord);  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(formatHeader,  nextRecord);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  hdrMap.put(rect.toString(),  nextRecord);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap.put(rect.toString(),  nextRecord);  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rect.toString(),  nextRecord);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(this.format.getSkipHeaderRecord()  ==  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format.getSkipHeaderRecord()  ==  null)  {	  if(nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  ||  nextRecord.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.values()  ==  null  ||  nextRecord.values().length  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  ||  nextRecord.values().length  ==  0)  {	  if(nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  if(nextRecord.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.size()  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()  ==  0)  {	  if(nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  ||  nextRecord.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.values()!=  null  ||  nextRecord.values().length  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  ||  nextRecord.values().length  ==  0)  {	  if(nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  this.format.getSkipHeaderRecord())  {	  if(nextRecord!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  if(header!=  null  &&  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header!=  null  &&  this.format.getSkipHeaderRecord())  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  this.format.getSkipHeaderRecord())  {	  if(nextRecord!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  this.format.getHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  this.format.getHeaderRecord())  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  this.format.getHeaderRecord())  {	  if(nextRecord!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord  ==  null  &&  this.format.getSkipHeaderRecord())  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  this.format.getSkipHeaderRecord())  {	  if(nextRecord!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  if(header  ==  null  &&  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header  ==  null  &&  this.format.getSkipHeaderRecord())  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  this.format.getSkipHeaderRecord())  {	  if(nextRecord!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values().length  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values().length  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.values().length  >  0)  {	  if(nextRecord!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values().length  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.values().length  ==  0)  {	  if(nextRecord    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  ||  nextRecord.size()  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.size()  ==  0)  {	  if(nextRecord    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header  ==  null  ||  nextRecord.length  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.length  ==  0)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.values()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header  ==  null  ||  nextRecord.values()  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.values()  ==  0)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
22	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord.length  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header!=  null  ||  nextRecord.length  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord.length  ==  0)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
23	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header  ==  null  ||  header.length  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.length  ==  0)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
24	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.size()  ==  0)  {  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header  ==  null  ||  nextRecord.size()  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.size()  ==  0)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
25	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values()  ==  0)  {  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values()  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.values()  ==  0)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
26	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.size()  >  0)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  ||  nextRecord.size()  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.size()  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
27	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.size()  >  0)  {  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.size()  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord.size()  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
28	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.size()  >  0)  {  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header!=  null  &&  nextRecord.size()  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.size()  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
29	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header  ==  null  &&  nextRecord.size()  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.size()  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  >  1)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.size()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  <  =  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.size()  <  =  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values()  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.values()  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.values()  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord.values()  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header!=  null  &&  nextRecord.values()  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.values()  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header  ==  null  &&  nextRecord.values()  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.values()  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values()  >  1)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.values()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(this.format.getSkipHeaderRecord()!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format.getSkipHeaderRecord()!=  null)  {	  if(nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  if(rec.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(rec.values()!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(rec.values()!=  null)  {	  if(nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  if  (nextRecord!=  null  &&  nextRecord.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if  (nextRecord!=  null  &&  nextRecord.values()  ==  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (nextRecord!=  null  &&  nextRecord.values()  ==  null)  {	  if    (nextRecord!=    null    ||    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  if  (nextRecord  ==  null  ||  nextRecord.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if  (nextRecord  ==  null  ||  nextRecord.values()  ==  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (nextRecord  ==  null  ||  nextRecord.values()  ==  null)  {	  if    (nextRecord!=    null    ||    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  if  (nextRecord  ==  null  ||  nextRecord.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if  (nextRecord  ==  null  ||  nextRecord.values()!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (nextRecord  ==  null  ||  nextRecord.values()!=  null)  {	  if    (nextRecord!=    null    ||    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  if  (nextRecord  ==  null  &&  nextRecord.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if  (nextRecord  ==  null  &&  nextRecord.values()  ==  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (nextRecord  ==  null  &&  nextRecord.values()  ==  null)  {	  if    (nextRecord!=    null    ||    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  ||  header  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.values()!=  null  ||  header  ==  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  ||  header  ==  null)  {	  if(nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  if(nextRecord.getHeader()!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.getHeader()!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.getHeader()!=  null)  {	  if(nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  if  (header  ==  null  ||  nextRecord.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if  (header  ==  null  ||  nextRecord.values()  ==  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (header  ==  null  ||  nextRecord.values()  ==  null)  {	  if    (nextRecord!=    null    ||    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  if  (nextRecord!=  null  ||  header.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if  (nextRecord!=  null  ||  header.values()  ==  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (nextRecord!=  null  ||  header.values()  ==  null)  {	  if    (nextRecord!=    null    ||    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
47	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header  ==  null  ||  nextRecord!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord!=  null)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  header.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord  ==  null  ||  header.length  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  header.length  ==  0)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  header.length  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.length  ==  0)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  ||  header  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.values()  ==  null  ||  header  ==  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  ||  header  ==  null)  {	  if(nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  ||  header!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.values()  ==  null  ||  header!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  ||  header!=  null)  {	  if(nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header  ==  null  &&  nextRecord!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord!=  null)  {	  if(nextRecord!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  header.values()  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.values()  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  header.size()  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.size()  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {	  if(nextRecord    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  header  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  ||  header  ==  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  header  ==  null)  {	  if(nextRecord    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  this.format.getSkipHeaderRecord()!=  null)  {	  if(nextRecord    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord  ==  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  this.format.getSkipHeaderRecord()!=  null)  {	  if(nextRecord    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>();  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  hdrMap.put(header,  formatHeader);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap.put(header,  formatHeader);  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  formatHeader);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  hdrMap.put(header,  header);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap.put(header,  header);  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  header);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()));  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()));	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(nextRecord));  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap.put(header,  new  CSVRecord(nextRecord));  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(nextRecord));	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord.values()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header!=  null  ||  nextRecord.values()  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord.values()  ==  0)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(header  ==  null  ||  nextRecord.values()!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.values()!=  null)  {	  if(nextRecord!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  ||  header.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.values()!=  null  ||  header.length  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  ||  header.length  ==  0)  {	  if(nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
67	[BUG]  [BUGGY]  if(nextRecord.size()!=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.size()!=  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()!=  0)  {	  if(nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
68	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(rec));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  hdrMap.put(header,  new  CSVRecord(rec));  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(rec));	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord  ==  null  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  this.format.getSkipHeaderRecord())  {	  if(nextRecord    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
70	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  header!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord  ==  null  ||  header!=  null)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  header!=  null)  {	  if(nextRecord    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
71	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  nextRecord.length  >  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.equals(header))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  nextRecord.equals(header))  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.equals(header))  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  this.format.getHeaderRecords())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  this.format.getHeaderRecords())  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  this.format.getHeaderRecords())  {	  if(nextRecord!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  this.format.getName())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord!=  null  &&  this.format.getName())  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  this.format.getName())  {	  if(nextRecord!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
75	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  ||  header.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.values()  ==  null  ||  header.length  ==  0)  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  ||  header.length  ==  0)  {	  if(nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();    [BUGGY]  if(nextRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]    header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {	  if(nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
