bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  header!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  header!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  header!=  null)  {	  if(header    ==    null    &&    nextRecord!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  header!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header!=  null)  {	  if(header    ==    null    &&    nextRecord!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
3	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  nextRecord!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord!=  null)  {	  if(header    ==    null    &&    nextRecord!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
4	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  nextRecord!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord!=  null)  {	  if(header    ==    null    &&    nextRecord!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
5	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord!=  null)  {	  if(header    ==    null    &&    nextRecord!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
6	[BUG]  [BUGGY]  if  (header  ==  null  &&  nextRecord.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if  (header  ==  null  &&  nextRecord.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (header  ==  null  &&  nextRecord.values()  ==  null)  {	  if    (header    ==    null    ||    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
7	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  nextRecord.values()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord.values()!=  null)  {	  if(nextRecord.values()!=    null    ||    header    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
8	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  &&  header  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()!=  null  &&  header  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  &&  header  ==  null)  {	  if(nextRecord.values()!=    null    ||    header    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
9	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  header  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  header  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  header  ==  null)  {	  if(nextRecord.values()!=    null    ||    header    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
10	[BUG]  [BUGGY]  if  (header!=  null  &&  nextRecord.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if  (header!=  null  &&  nextRecord.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (header!=  null  &&  nextRecord.values()  ==  null)  {	  if    (nextRecord!=    null    &&    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
11	[BUG]  [BUGGY]  if  (nextRecord!=  null  &&  nextRecord.values()!=  null)  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if  (nextRecord!=  null  &&  nextRecord.values()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (nextRecord!=  null  &&  nextRecord.values()!=  null)  {	  if    (nextRecord!=    null    &&    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  not  a  statement	39	None	replace
12	[BUG]  [BUGGY]  if  (nextRecord  ==  null  &&  nextRecord.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if  (nextRecord  ==  null  &&  nextRecord.values()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (nextRecord  ==  null  &&  nextRecord.values()!=  null)  {	  if    (nextRecord!=    null    &&    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
13	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  this.format.getHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  this.format.getHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  this.format.getHeaderRecord())  {	  if(nextRecord    ==    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.size()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  nextRecord.size()  ==  0)  {	  if(header    ==    null    ||    nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
15	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.size()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.size()!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.size()!=  0)  {	  if(header    ==    null    ||    nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
16	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.size()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.size()  >=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.size()  >=  0)  {	  if(header    ==    null    ||    nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
17	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  nextRecord.size()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord.size()  ==  0)  {	  if(header    ==    null    ||    nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
18	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.size()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.size()  <  =  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.size()  <  =  0)  {	  if(header    ==    null    ||    nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
19	[BUG]  [BUGGY]  if(this.format!=  null  &&  nextRecord.getName())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format!=  null  &&  nextRecord.getName())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format!=  null  &&  nextRecord.getName())  {	  if(nextRecord!=    null    &&    this.format.getName())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
20	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  this.format.getName())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  this.format.getName())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  this.format.getName())  {	  if(nextRecord!=    null    &&    this.format.getName())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
21	[BUG]  [BUGGY]  if(header!=  null  &&  this.format.getName())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  this.format.getName())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  this.format.getName())  {	  if(nextRecord!=    null    &&    this.format.getName())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
22	[BUG]  [BUGGY]  if(header  ==  null  &&  this.format.getName())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  this.format.getName())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  this.format.getName())  {	  if(nextRecord!=    null    &&    this.format.getName())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
23	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(header.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(header.length);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(header.length);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(header);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(header);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(1);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(1);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  hdrMap  =  new  ConcurrentHashMap  <  String,  Integer>();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  ConcurrentHashMap  <  String,  Integer>();  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  ConcurrentHashMap  <  String,  Integer>();	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(2);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(2);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(2);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.size()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  nextRecord.size()  >  0)  {	  if(nextRecord    ==    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
29	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord.values()  ==  null)  {  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  nextRecord.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord.values()  ==  null)  {	  if(nextRecord.values()    ==    null    ||    header    ==    null)    {    	non-compiled	[CE]  not  a  statement	50	None	replace
30	[BUG]  [BUGGY]  if(nextRecord.getSkipHeaderRecord()!=  null)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.getSkipHeaderRecord()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.getSkipHeaderRecord()!=  null)  {	  if(nextRecord.getHeader()!=    null)    {    	non-compiled	[CE]  not  a  statement	44	None	replace
31	[BUG]  [BUGGY]  if(nextRecord.getValues()!=  null)  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.getValues()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.getValues()!=  null)  {	  if(nextRecord.getHeader()!=    null)    {    	non-compiled	[CE]  not  a  statement	44	None	replace
32	[BUG]  [BUGGY]  if(nextRecord.getHeader()  ==  null)  {  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.getHeader()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.getHeader()  ==  null)  {	  if(nextRecord.getHeader()!=    null)    {    	non-compiled	[CE]  not  a  statement	44	None	replace
33	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.length  >  0)  {  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  nextRecord.length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.length    >    0)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
34	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.length  >  0)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord.length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.length    >    0)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
35	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.length  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  nextRecord.length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.length    >    0)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
36	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.length  >  0)  {  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.length    >    0)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
37	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.values()!=  0)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.values()!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.values()!=  0)  {	  if(header!=    null    ||    nextRecord.values()    ==    0)    {    	non-compiled	[CE]  not  a  statement	64	None	replace
38	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.values()  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.values()  >  0)  {	  if(header!=    null    ||    nextRecord.values()    ==    0)    {    	non-compiled	[CE]  not  a  statement	64	None	replace
39	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.length()  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.length()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.length()  ==  0)  {	  if(header!=    null    ||    nextRecord.values()    ==    0)    {    	non-compiled	[CE]  not  a  statement	64	None	replace
40	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  +  1);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  +  1);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  +  1);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  not  a  statement	3	None	replace
41	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(record.length);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(record.length);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(record.length);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  not  a  statement	3	None	replace
42	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(nextRecord.length);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(nextRecord.length);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(nextRecord.length);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  not  a  statement	3	None	replace
43	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(currentRecord.length);  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(currentRecord.length);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(currentRecord.length);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  not  a  statement	3	None	replace
44	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord.values()!=  null  ||  header.length  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  nextRecord.values()!=  null  ||  header.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord.values()!=  null  ||  header.length  ==  0)  {	  if(nextRecord.values()!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
45	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.values()!=  null  ||  header.length  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.values()!=  null  ||  header.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.values()!=  null  ||  header.length  ==  0)  {	  if(nextRecord.values()!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
46	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord.values()  ==  null  ||  header.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  nextRecord.values()  ==  null  ||  header.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord.values()  ==  null  ||  header.length  ==  0)  {	  if(nextRecord.values()!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
47	[BUG]  [BUGGY]  if(header.values()!=  null  ||  nextRecord.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header.values()!=  null  ||  nextRecord.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header.values()!=  null  ||  nextRecord.length  ==  0)  {	  if(nextRecord.values()!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
48	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.size()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  nextRecord.size()  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.size()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
49	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.size()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.size()  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.size()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
50	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.size()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  nextRecord.size()  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.size()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
51	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.size()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.size()  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord.size()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
52	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  nextRecord.values()  ==  0)  {	  if(nextRecord    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
53	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>();  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>();	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
54	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(header.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(header.length);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(header.length);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
55	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(header);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(header);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
56	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>();  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>();	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
57	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(1);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(1);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
58	[BUG]  [BUGGY]  if  (header  ==  null  ||  header.values()  ==  null)  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if  (header  ==  null  ||  header.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (header  ==  null  ||  header.values()  ==  null)  {	  if    (nextRecord!=    null    ||    header.values()    ==    null)    {    	non-compiled	[CE]  not  a  statement	46	None	replace
59	[BUG]  [BUGGY]  if  (header!=  null  ||  header.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if  (header!=  null  ||  header.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (header!=  null  ||  header.values()  ==  null)  {	  if    (nextRecord!=    null    ||    header.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
60	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.values()  ==  null  ||  header.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.values()  ==  null  ||  header.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.values()  ==  null  ||  header.length  ==  0)  {	  if(nextRecord.values()    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
61	[BUG]  [BUGGY]  if(header.values()  ==  null  ||  nextRecord.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header.values()  ==  null  ||  nextRecord.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header.values()  ==  null  ||  nextRecord.length  ==  0)  {	  if(nextRecord.values()    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
62	[BUG]  [BUGGY]  if(header.values()  ==  null  ||  nextRecord.values()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header.values()  ==  null  ||  nextRecord.values()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header.values()  ==  null  ||  nextRecord.values()  ==  0)  {	  if(nextRecord.values()    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
63	[BUG]  [BUGGY]  if(header.values()  ==  null  ||  header.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header.values()  ==  null  ||  header.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header.values()  ==  null  ||  header.length  ==  0)  {	  if(nextRecord.values()    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
64	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  ||  header.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()  ==  null  ||  header.length!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  ||  header.length!=  0)  {	  if(nextRecord.values()    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
65	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  header  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header  ==  null)  {	  if(nextRecord!=    null    ||    header    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
66	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord  ==  null)  {	  if(nextRecord!=    null    ||    header    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
67	[BUG]  [BUGGY]  if(rec.values()  ==  null  ||  nextRecord.values().length  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(rec.values()  ==  null  ||  nextRecord.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(rec.values()  ==  null  ||  nextRecord.values().length  ==  0)  {	  if(nextRecord.values()    ==    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
68	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values().length  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  nextRecord.values().length  ==  0)  {	  if(nextRecord.values()    ==    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
69	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.values().length  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.values().length  ==  0)  {	  if(nextRecord.values()    ==    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
70	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  ||  nextRecord.values().length!=  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()  ==  null  ||  nextRecord.values().length!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  ||  nextRecord.values().length!=  0)  {	  if(nextRecord.values()    ==    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
71	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.length  ==  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.length  ==  0)  {	  if(nextRecord!=    null    &&    header.length    ==    0)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
72	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.length  ==  0)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  nextRecord.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.length  ==  0)  {	  if(nextRecord!=    null    &&    header.length    ==    0)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
73	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.values()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.values()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.values()  ==  0)  {	  if(nextRecord!=    null    &&    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
74	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.values()  ==  0)  {	  if(nextRecord!=    null    &&    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
75	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.size()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.size()  ==  0)  {	  if(nextRecord!=    null    &&    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
76	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  header.length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.length  >  0)  {	  if(nextRecord!=    null    &&    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
77	[BUG]  [BUGGY]  hdrMap.put(rec,  header);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rec,  header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rec,  header);	  hdrMap.put(header,    header);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
78	[BUG]  [BUGGY]  hdrMap.put(record,  header);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(record,  header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(record,  header);	  hdrMap.put(header,    header);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
79	[BUG]  [BUGGY]  hdrMap.put(rect,  header);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rect,  header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rect,  header);	  hdrMap.put(header,    header);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
80	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  nextRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  nextRecord!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  nextRecord!=  null)  {	  if(header    ==    null    ||    nextRecord!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
81	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  header!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  header!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  header!=  null)  {	  if(header    ==    null    ||    nextRecord!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
82	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord  >=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord  >=  null)  {	  if(header    ==    null    ||    nextRecord!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
83	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.size()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.size()  >  0)  {	  if(header    ==    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
84	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  nextRecord.size()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord.size()  >  0)  {	  if(header    ==    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
85	[BUG]  [BUGGY]  hdrMap.put(rec,  new  CSVRecord(header));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rec,  new  CSVRecord(header));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rec,  new  CSVRecord(header));	  hdrMap.put(header,    new    CSVRecord(rec));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
86	[BUG]  [BUGGY]  hdrMap.put(record,  new  CSVRecord(header));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(record,  new  CSVRecord(header));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(record,  new  CSVRecord(header));	  hdrMap.put(header,    new    CSVRecord(rec));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
87	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(record));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(record));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(record));	  hdrMap.put(header,    new    CSVRecord(rec));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
88	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(current));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(current));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(current));	  hdrMap.put(header,    new    CSVRecord(rec));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
89	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(formatHeader));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(formatHeader));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(formatHeader));	  hdrMap.put(header,    new    CSVRecord(rec));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
90	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  nextRecord.values()  >  0)  {	  if(nextRecord!=    null    ||    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
91	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values()  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values()  <  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.values()  <  0)  {	  if(nextRecord!=    null    ||    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
92	[BUG]  [BUGGY]  if(header  ==  null  ||  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  this.format.getSkipHeaderRecord())  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
93	[BUG]  [BUGGY]  if(header!=  null  ||  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  this.format.getSkipHeaderRecord())  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
94	[BUG]  [BUGGY]  if(this.format!=  null  ||  nextRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format!=  null  ||  nextRecord!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format!=  null  ||  nextRecord!=  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
95	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  nextRecord.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord.values()  >  0)  {	  if(header!=    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
96	[BUG]  [BUGGY]  if(header!=  null  &&  header.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  header.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  header.values()  >  0)  {	  if(nextRecord!=    null    &&    header.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
97	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  header.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  header.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  header.values()  >  0)  {	  if(nextRecord!=    null    &&    header.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
98	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  header.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  header.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  header.values()  >  0)  {	  if(nextRecord!=    null    &&    header.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
99	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header.length!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.length!=  0)  {	  if(header    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
100	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header.length  >=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.length  >=  0)  {	  if(header    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
101	[BUG]  [BUGGY]  if(record.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(record.values()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(record.values()!=  null)  {	  if(rec.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
102	[BUG]  [BUGGY]  if(record.values()!=  null  ||  nextRecord.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(record.values()!=  null  ||  nextRecord.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(record.values()!=  null  ||  nextRecord.values().length  ==  0)  {	  if(rec.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
103	[BUG]  [BUGGY]  if(record.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(record.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(record.values()  ==  null)  {	  if(rec.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
104	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()!=  null  ||  nextRecord.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format.getSkipHeaderRecord()!=  null  ||  nextRecord.values()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format.getSkipHeaderRecord()!=  null  ||  nextRecord.values()!=  null)  {	  if(rec.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
105	[BUG]  [BUGGY]  if(header.values()  ==  null  ||  nextRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header.values()  ==  null  ||  nextRecord!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header.values()  ==  null  ||  nextRecord!=  null)  {	  if(nextRecord.values()    ==    null    ||    header!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
106	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.size()  ==  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
107	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  >=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.size()  >=  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
108	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  <  =  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.size()  <  =  1)  {	  if(nextRecord!=    null    &&    nextRecord.size()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
109	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.size()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  nextRecord.size()  <  =  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.size()  <  =  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
110	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.size()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.size()  <  =  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.size()  <  =  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
111	[BUG]  [BUGGY]  if(this.format.getHeaderRecord()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format.getHeaderRecord()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format.getHeaderRecord()  ==  null)  {	  if(this.format.getSkipHeaderRecord()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
112	[BUG]  [BUGGY]  if(this.format.getRecords()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format.getRecords()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format.getRecords()  ==  null)  {	  if(this.format.getSkipHeaderRecord()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
113	[BUG]  [BUGGY]  if(this.format.getRecordNumber()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format.getRecordNumber()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format.getRecordNumber()  ==  null)  {	  if(this.format.getSkipHeaderRecord()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
114	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  nextRecord.values()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.values()!=  null)  {	  if(header    ==    null    ||    nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
115	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  header.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  header.values()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  header.values()!=  null)  {	  if(header    ==    null    ||    nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
116	[BUG]  [BUGGY]  if(header  ==  null  ||  header.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header.values()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.values()!=  null)  {	  if(header    ==    null    ||    nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
117	[BUG]  [BUGGY]  hdrMap.put(rec,  new  CSVRecord(nextRecord.values()));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rec,  new  CSVRecord(nextRecord.values()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rec,  new  CSVRecord(nextRecord.values()));	  hdrMap.put(header,    new    CSVRecord(nextRecord.values()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
118	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(formatHeader.values()));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(formatHeader.values()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(formatHeader.values()));	  hdrMap.put(header,    new    CSVRecord(nextRecord.values()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
119	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(rec.values()));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(rec.values()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(rec.values()));	  hdrMap.put(header,    new    CSVRecord(nextRecord.values()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
120	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(currentRecord.values()));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(currentRecord.values()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(currentRecord.values()));	  hdrMap.put(header,    new    CSVRecord(nextRecord.values()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
121	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.values()));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.values()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(this.format.values()));	  hdrMap.put(header,    new    CSVRecord(nextRecord.values()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
122	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(nextRecord.values(),  formatHeader));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(nextRecord.values(),  formatHeader));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(nextRecord.values(),  formatHeader));	  hdrMap.put(header,    new    CSVRecord(nextRecord.values()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
123	[BUG]  [BUGGY]  hdrMap.put(rec,  new  CSVRecord(this.format.getHeaderRecord()));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rec,  new  CSVRecord(this.format.getHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rec,  new  CSVRecord(this.format.getHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
124	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord(),  nextRecord));  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord(),  nextRecord));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord(),  nextRecord));	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  ';'  expected	62	None	replace
125	[BUG]  [BUGGY]  hdrMap.put(this.format,  new  CSVRecord(header.getHeaderRecord()));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(this.format,  new  CSVRecord(header.getHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(this.format,  new  CSVRecord(header.getHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
126	[BUG]  [BUGGY]  hdrMap.put(formatHeader,  new  CSVRecord(this.format.getHeaderRecord()));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(formatHeader,  new  CSVRecord(this.format.getHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(formatHeader,  new  CSVRecord(this.format.getHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
127	[BUG]  [BUGGY]  hdrMap.put(i,  new  CSVRecord(this.format.getHeaderRecord()));  [CE]  ';'  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(i,  new  CSVRecord(this.format.getHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(i,  new  CSVRecord(this.format.getHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  ';'  expected	62	None	replace
128	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()  +  1));  [CE]  ';'  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()  +  1));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()  +  1));	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  ';'  expected	62	None	replace
129	[BUG]  [BUGGY]  if(header!=  null  &&  this.format.getHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  this.format.getHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  this.format.getHeaderRecord())  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
130	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  this.format.getHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  this.format.getHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  this.format.getHeaderRecord())  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
131	[BUG]  [BUGGY]  if(header  ==  null  &&  this.format.getHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  this.format.getHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  this.format.getHeaderRecord())  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
132	[BUG]  [BUGGY]  if(this.format!=  null  &&  nextRecord!=  null  &&  nextRecord.values().length  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format!=  null  &&  nextRecord!=  null  &&  nextRecord.values().length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format!=  null  &&  nextRecord!=  null  &&  nextRecord.values().length  >  0)  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
133	[BUG]  [BUGGY]  hdrMap.put(rec,  nextRecord);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rec,  nextRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rec,  nextRecord);	  hdrMap.put(header,    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
134	[BUG]  [BUGGY]  hdrMap.put(header,  nextRecord.values());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  nextRecord.values());  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  nextRecord.values());	  hdrMap.put(header,    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
135	[BUG]  [BUGGY]  hdrMap.put(header,  rec);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  rec);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  rec);	  hdrMap.put(header,    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
136	[BUG]  [BUGGY]  hdrMap.put(header,  currentRecord);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  currentRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  currentRecord);	  hdrMap.put(header,    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
137	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  this.format.getSkipHeaderRecord()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  this.format.getSkipHeaderRecord()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  this.format.getSkipHeaderRecord()!=  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
138	[BUG]  [BUGGY]  if(header  ==  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  this.format.getSkipHeaderRecord()!=  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
139	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  this.format.getSkipHeaderRecord()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  this.format.getSkipHeaderRecord()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  this.format.getSkipHeaderRecord()!=  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
140	[BUG]  [BUGGY]  if(header!=  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  this.format.getSkipHeaderRecord()!=  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
141	[BUG]  [BUGGY]  hdrMap.put(formatHeader,  header);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(formatHeader,  header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(formatHeader,  header);	  hdrMap.put(header,    formatHeader);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
142	[BUG]  [BUGGY]  hdrMap.put(header,  formatHeader[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  formatHeader[0]);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  formatHeader[0]);	  hdrMap.put(header,    formatHeader);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
143	[BUG]  [BUGGY]  hdrMap.put(record,  formatHeader);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(record,  formatHeader);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(record,  formatHeader);	  hdrMap.put(header,    formatHeader);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
144	[BUG]  [BUGGY]  hdrMap.put(header,  formatHeader[i]);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  formatHeader[i]);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  formatHeader[i]);	  hdrMap.put(header,    formatHeader);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
145	[BUG]  [BUGGY]  hdrMap.put(nextRecord,  formatHeader);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(nextRecord,  formatHeader);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(nextRecord,  formatHeader);	  hdrMap.put(formatHeader,    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
146	[BUG]  [BUGGY]  hdrMap.put(currentRecord,  nextRecord);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(currentRecord,  nextRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(currentRecord,  nextRecord);	  hdrMap.put(formatHeader,    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
147	[BUG]  [BUGGY]  hdrMap.put(i,  nextRecord);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(i,  nextRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(i,  nextRecord);	  hdrMap.put(formatHeader,    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
148	[BUG]  [BUGGY]  hdrMap.put(this.format,  nextRecord);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(this.format,  nextRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(this.format,  nextRecord);	  hdrMap.put(formatHeader,    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
149	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  this.format.getHeaderRecord()!=  null)  {  [CE]  '('  or  '['  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  this.format.getHeaderRecord()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  this.format.getHeaderRecord()!=  null)  {	  if(nextRecord    ==    null    ||    this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  '('  or  '['  expected	58	None	replace
150	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.size()  >=  0)  {  [CE]  '('  or  '['  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  nextRecord.size()  >=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.size()  >=  0)  {	  if(nextRecord!=    null    ||    nextRecord.size()    >    0)    {    	non-compiled	[CE]  '('  or  '['  expected	26	None	replace
151	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.equals(header))  {  [CE]  '('  or  '['  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.equals(header))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.equals(header))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
152	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.equals(nextRecord))  {  [CE]  '('  or  '['  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.equals(nextRecord))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.equals(nextRecord))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
153	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.equals(this.format.getSkipHeaderRecord()))  {  [CE]  '('  or  '['  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.equals(this.format.getSkipHeaderRecord()))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.equals(this.format.getSkipHeaderRecord()))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
154	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.equals(this.format.getSkipHeaderRecord()))  {  [CE]  '('  or  '['  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.equals(this.format.getSkipHeaderRecord()))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.equals(this.format.getSkipHeaderRecord()))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
155	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.equals(formatHeader))  {  [CE]  '('  or  '['  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.equals(formatHeader))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.equals(formatHeader))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
156	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.equals(header))  {  [CE]  '('  or  '['  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  nextRecord.equals(header))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.equals(header))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
157	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values().length  >  0)  {  [CE]  '('  or  '['  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values().length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.values().length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values().length    >    0)    {    	non-compiled	[CE]  '('  or  '['  expected	17	None	replace
158	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.values().length  >  0)  {  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.values().length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord.values().length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values().length    >    0)    {    	non-compiled	[CE]  >  expected	17	None	replace
159	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.values().length  >  0)  {  [CE]  >  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.values().length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.values().length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values().length    >    0)    {    	non-compiled	[CE]  >  expected	17	None	replace
160	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.values().length  >  0)  {  [CE]  >  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  nextRecord.values().length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.values().length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values().length    >    0)    {    	non-compiled	[CE]  >  expected	17	None	replace
161	[BUG]  [BUGGY]  if(currentRecord!=  null  &&  nextRecord.values().length  >  0)  {  [CE]  '('  or  '['  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(currentRecord!=  null  &&  nextRecord.values().length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(currentRecord!=  null  &&  nextRecord.values().length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values().length    >    0)    {    	non-compiled	[CE]  '('  or  '['  expected	17	None	replace
162	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values().length  >  1)  {  [CE]  ';'  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values().length  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.values().length  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.values().length    >    0)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
163	[BUG]  [BUGGY]  if(header!=  null  &&  this.format.getHeaderRecords())  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  this.format.getHeaderRecords())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  this.format.getHeaderRecords())  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecords())    {    	non-compiled	[CE]  ';'  expected	73	None	replace
164	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  this.format.getHeaderRecords())  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  this.format.getHeaderRecords())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  this.format.getHeaderRecords())  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecords())    {    	non-compiled	[CE]  ';'  expected	73	None	replace
165	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  this.format.getHeaderRecords())  {  [CE]  '('  or  '['  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  this.format.getHeaderRecords())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  this.format.getHeaderRecords())  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecords())    {    	non-compiled	[CE]  '('  or  '['  expected	73	None	replace
166	[BUG]  [BUGGY]  if(header  ==  null  &&  this.format.getHeaderRecords())  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  this.format.getHeaderRecords())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  this.format.getHeaderRecords())  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecords())    {    	non-compiled	[CE]  ';'  expected	73	None	replace
167	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  this.format.getSkipHeaderRecords())  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  this.format.getSkipHeaderRecords())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  this.format.getSkipHeaderRecords())  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecords())    {    	non-compiled	[CE]  ';'  expected	73	None	replace
168	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.values())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.values())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.values())  {	  if(header!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
169	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.values())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  nextRecord.values())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.values())  {	  if(header!=    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
170	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.values()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.values()  >=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.values()  >=  0)  {	  if(header    ==    null    ||    nextRecord.values()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
171	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.size()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord.size()  ==  0)  {	  if(nextRecord!=    null    ||    nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
172	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.values().length  ==  0)  {	  if(nextRecord!=    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
173	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values().length!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values().length!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  nextRecord.values().length!=  0)  {	  if(nextRecord!=    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
174	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord.values().length  ==  0)  {	  if(nextRecord!=    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
175	[BUG]  [BUGGY]  if(header!=  null  ||  nextRecord.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  nextRecord.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  nextRecord.values().length  ==  0)  {	  if(nextRecord!=    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
176	[BUG]  [BUGGY]  if  (nextRecord!=  null  ||  nextRecord.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if  (nextRecord!=  null  ||  nextRecord.values()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (nextRecord!=  null  ||  nextRecord.values()!=  null)  {	  if    (nextRecord    ==    null    ||    nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
177	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.length!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.length!=  0)  {	  if(header    ==    null    ||    nextRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
178	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  nextRecord.length  ==  0)  {	  if(header    ==    null    ||    nextRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
179	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.length  >=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.length  >=  0)  {	  if(header    ==    null    ||    nextRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
180	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  nextRecord.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.length  ==  0)  {	  if(header!=    null    ||    nextRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
181	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  this.format.getHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  this.format.getHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  this.format.getHeaderRecord())  {	  if(nextRecord    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
182	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  nextRecord.values())  {	  if(nextRecord    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
183	[BUG]  [BUGGY]  if(nextRecord.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.size()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()  >  0)  {	  if(nextRecord.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
184	[BUG]  [BUGGY]  if(nextRecord.size()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.size()  >=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()  >=  0)  {	  if(nextRecord.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
185	[BUG]  [BUGGY]  if(rec.size()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(rec.size()!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(rec.size()!=  0)  {	  if(nextRecord.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
186	[BUG]  [BUGGY]  if(header.size()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header.size()!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header.size()!=  0)  {	  if(nextRecord.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
187	[BUG]  [BUGGY]  if(nextRecord.size()!=  1)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.size()!=  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()!=  1)  {	  if(nextRecord.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
188	[BUG]  [BUGGY]  if(rec.values()!=  null  ||  nextRecord.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(rec.values()!=  null  ||  nextRecord.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(rec.values()!=  null  ||  nextRecord.values().length  ==  0)  {	  if(nextRecord.values()!=    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
189	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  &&  nextRecord.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()!=  null  &&  nextRecord.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  &&  nextRecord.values().length  ==  0)  {	  if(nextRecord.values()!=    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
190	[BUG]  [BUGGY]  if(this.format.getHeaderRecord()!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format.getHeaderRecord()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format.getHeaderRecord()!=  null)  {	  if(this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
191	[BUG]  [BUGGY]  if(this.format.getRecords()!=  null)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format.getRecords()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format.getRecords()!=  null)  {	  if(this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
192	[BUG]  [BUGGY]  hdrMap.put(rec,  new  CSVRecord(nextRecord));  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rec,  new  CSVRecord(nextRecord));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rec,  new  CSVRecord(nextRecord));	  hdrMap.put(header,    new    CSVRecord(nextRecord));    	non-compiled	[CE]  ';'  expected	63	None	replace
193	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(currentRecord));  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(currentRecord));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(currentRecord));	  hdrMap.put(header,    new    CSVRecord(nextRecord));    	non-compiled	[CE]  ';'  expected	63	None	replace
194	[BUG]  [BUGGY]  hdrMap.put(nextRecord,  new  CSVRecord(header));  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(nextRecord,  new  CSVRecord(header));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(nextRecord,  new  CSVRecord(header));	  hdrMap.put(header,    new    CSVRecord(nextRecord));    	non-compiled	[CE]  ';'  expected	63	None	replace
195	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(nextRecord,  formatHeader));  [CE]  ';'  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(nextRecord,  formatHeader));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(nextRecord,  formatHeader));	  hdrMap.put(header,    new    CSVRecord(nextRecord));    	non-compiled	[CE]  ';'  expected	63	None	replace
196	[BUG]  [BUGGY]  hdrMap.put(currentRecord,  new  CSVRecord(header));  [CE]  ';'  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(currentRecord,  new  CSVRecord(header));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(currentRecord,  new  CSVRecord(header));	  hdrMap.put(header,    new    CSVRecord(nextRecord));    	non-compiled	[CE]  ';'  expected	63	None	replace
197	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values()!=  0)  {  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  nextRecord.values()!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  nextRecord.values()!=  0)  {	  if(nextRecord!=    null    ||    nextRecord.values()    ==    0)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
198	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  this.format.getSkipHeaderRecord()  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  this.format.getSkipHeaderRecord()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  this.format.getSkipHeaderRecord()  ==  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()    ==    null)    {    	non-compiled	[CE]  ';'  expected	55	None	replace
199	[BUG]  [BUGGY]  if(header  ==  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
200	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  this.format.getSkipHeaderRecord()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  this.format.getSkipHeaderRecord()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  this.format.getSkipHeaderRecord()  ==  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
201	[BUG]  [BUGGY]  if(header!=  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
202	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  this.format.getHeaderRecord()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  this.format.getHeaderRecord()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  this.format.getHeaderRecord()  ==  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
203	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.values()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  nextRecord.values()  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.values()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
204	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.values()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.values()  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.values()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
205	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values()  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.values()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
206	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values()  <  1)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values()  <  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.values()  <  1)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
207	[BUG]  [BUGGY]  if(nextRecord.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.size()  ==  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()  ==  1)  {	  if(nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
208	[BUG]  [BUGGY]  if(nextRecord.size()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.size()  <  =  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()  <  =  0)  {	  if(nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
209	[BUG]  [BUGGY]  if(rec.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(rec.size()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(rec.size()  ==  0)  {	  if(nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
210	[BUG]  [BUGGY]  if(nextRecord.size()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.size()  ==  2)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()  ==  2)  {	  if(nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
211	[BUG]  [BUGGY]  if(header!=  null  &&  header.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  header.size()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  header.size()  >  0)  {	  if(nextRecord!=    null    &&    header.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
212	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  header.size()  >  0)  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  header.size()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  header.size()  >  0)  {	  if(nextRecord!=    null    &&    header.size()    >    0)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
213	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  header.size()  >  0)  {  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  header.size()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  header.size()  >  0)  {	  if(nextRecord!=    null    &&    header.size()    >    0)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
214	[BUG]  [BUGGY]  hdrMap.put(rec.toString(),  nextRecord);  [CE]  ')'  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rec.toString(),  nextRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rec.toString(),  nextRecord);	  hdrMap.put(rect.toString(),    nextRecord);    	non-compiled	[CE]  ')'  expected	7	None	replace
215	[BUG]  [BUGGY]  hdrMap.put(formatHeader.toString(),  nextRecord);  [CE]  ')'  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(formatHeader.toString(),  nextRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(formatHeader.toString(),  nextRecord);	  hdrMap.put(rect.toString(),    nextRecord);    	non-compiled	[CE]  ')'  expected	7	None	replace
216	[BUG]  [BUGGY]  hdrMap.put(header.toString(),  nextRecord);  [CE]  ')'  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header.toString(),  nextRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header.toString(),  nextRecord);	  hdrMap.put(rect.toString(),    nextRecord);    	non-compiled	[CE]  ')'  expected	7	None	replace
217	[BUG]  [BUGGY]  hdrMap.put(nextRecord.toString(),  header);  [CE]  ')'  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(nextRecord.toString(),  header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(nextRecord.toString(),  header);	  hdrMap.put(rect.toString(),    nextRecord);    	non-compiled	[CE]  ')'  expected	7	None	replace
218	[BUG]  [BUGGY]  hdrMap.put(rec.toString(),  header);  [CE]  ')'  expected  [FE]                                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rec.toString(),  header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rec.toString(),  header);	  hdrMap.put(rect.toString(),    nextRecord);    	non-compiled	[CE]  ')'  expected	7	None	replace
219	[BUG]  [BUGGY]  hdrMap.put(rec,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rec,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rec,  new  CSVRecord(this.format.getSkipHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getSkipHeaderRecord()));    	non-compiled	[CE]  ')'  expected	4	None	replace
220	[BUG]  [BUGGY]  hdrMap.put(this.format,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(this.format,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(this.format,  new  CSVRecord(this.format.getSkipHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getSkipHeaderRecord()));    	non-compiled	[CE]  ')'  expected	4	None	replace
221	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(formatHeader.getSkipHeaderRecord()));  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(formatHeader.getSkipHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(formatHeader.getSkipHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getSkipHeaderRecord()));    	non-compiled	[CE]  ')'  expected	4	None	replace
222	[BUG]  [BUGGY]  hdrMap.put(i,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [CE]  ')'  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(i,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(i,  new  CSVRecord(this.format.getSkipHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getSkipHeaderRecord()));    	non-compiled	[CE]  ')'  expected	4	None	replace
223	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeader()));  [CE]  ')'  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeader()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(this.format.getHeader()));	  hdrMap.put(header,    new    CSVRecord(this.format.getSkipHeaderRecord()));    	non-compiled	[CE]  ')'  expected	4	None	replace
224	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  ')'  expected	76	None	replace
225	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  &&  this.format.getSkipHeaderRecord())  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()  ==  null  &&  this.format.getSkipHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  &&  this.format.getSkipHeaderRecord())  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  ')'  expected	76	None	replace
226	[BUG]  [BUGGY]  if(rec.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(rec.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(rec.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  ')'  expected	76	None	replace
227	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  ||  this.format.getHeaderRecord())  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()  ==  null  ||  this.format.getHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  ||  this.format.getHeaderRecord())  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  ')'  expected	76	None	replace
228	[BUG]  [BUGGY]  if(currentRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(currentRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(currentRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord())  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  ')'  expected	76	None	replace
229	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord()  <  header.length)  {  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord()  <  header.length)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  ||  this.format.getSkipHeaderRecord()  <  header.length)  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  ')'  expected	76	None	replace
230	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  this.format.getSkipHeaderRecord()  ==  null)  {	  if(nextRecord    ==    null    ||    this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
231	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  this.format.getHeaderRecord()!=  null)  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  this.format.getHeaderRecord()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  this.format.getHeaderRecord()!=  null)  {	  if(nextRecord    ==    null    ||    this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
232	[BUG]  [BUGGY]  if(this.format!=  null  &&  nextRecord  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format!=  null  &&  nextRecord  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format!=  null  &&  nextRecord  ==  null)  {	  if(nextRecord    ==    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
233	[BUG]  [BUGGY]  if(header  ==  null  &&  header.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  header.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  header.values()  >  0)  {	  if(nextRecord!=    null    &&    header.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
234	[BUG]  [BUGGY]  if(this.format!=  null  &&  nextRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format!=  null  &&  nextRecord!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format!=  null  &&  nextRecord!=  null)  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecords())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
235	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.keySet()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.keySet()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.keySet()!=  null)  {	  if(header    ==    null    ||    nextRecord.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
236	[BUG]  [BUGGY]  if(header  ==  null  ||  header.values()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header.values()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.values()  ==  0)  {	  if(header!=    null    ||    nextRecord.values()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
237	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.values()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  nextRecord.values()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.values()  ==  0)  {	  if(header!=    null    ||    nextRecord.values()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
238	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.length  ==  0)  {	  if(nextRecord!=    null    &&    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
239	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>();  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>();	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
240	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.length  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.length  <  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.length  <  0)  {	  if(header    ==    null    ||    nextRecord.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
241	[BUG]  [BUGGY]  if(header  ==  null  ||  header.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.values()  >  0)  {	  if(header    ==    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
242	[BUG]  [BUGGY]  hdrMap.put(rect,  new  CSVRecord(nextRecord));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rect,  new  CSVRecord(nextRecord));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rect,  new  CSVRecord(nextRecord));	  hdrMap.put(header,    new    CSVRecord(nextRecord));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
243	[BUG]  [BUGGY]  if(nextRecord.values()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()!=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  0)  {	  if(nextRecord.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
244	[BUG]  [BUGGY]  if  (nextRecord  ==  null  ||  header.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if  (nextRecord  ==  null  ||  header.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if  (nextRecord  ==  null  ||  header.values()  ==  null)  {	  if    (nextRecord    ==    null    ||    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
245	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.equals(nextRecord))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  header.equals(nextRecord))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.equals(nextRecord))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
246	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.equals(header))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.equals(header))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord.equals(header))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
247	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.equals( " "))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.equals( " "))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
248	[BUG]  [BUGGY]  if(header  ==  null  &&  nextRecord.size()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  nextRecord.size()  >=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  nextRecord.size()  >=  0)  {	  if(header!=    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
249	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.size()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  header.size()  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.size()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
250	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  <  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  <  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.size()  <  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
251	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.size()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.size()  <  =  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord.size()  <  =  0)  {	  if(nextRecord!=    null    &&    nextRecord.size()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
252	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  this.format.getName())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  this.format.getName())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  this.format.getName())  {	  if(nextRecord!=    null    &&    this.format.getName())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
253	[BUG]  [BUGGY]  if(header  ==  null  &&  header.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  &&  header.size()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  &&  header.size()  >  0)  {	  if(nextRecord!=    null    &&    header.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
254	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>();  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>();	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
255	[BUG]  [BUGGY]  if(header  ==  null  ||  header  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header  ==  null)  {	  if(nextRecord!=    null    ||    header    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
256	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  ||  header.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()!=  null  ||  header.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  ||  header.values().length  ==  0)  {	  if(nextRecord.values()!=    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
257	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  header.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  header.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  header.values().length  ==  0)  {	  if(nextRecord!=    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
258	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  header.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  header.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  header.values().length  ==  0)  {	  if(nextRecord!=    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
259	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values().length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values().length  >=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.values().length  >=  0)  {	  if(nextRecord!=    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
260	[BUG]  [BUGGY]  if(nextRecord.values()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  0)  {	  if(nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
261	[BUG]  [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.values()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  &&  nextRecord.values()  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  &&  nextRecord.values()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
262	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  &&  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()!=  null  &&  this.format.getSkipHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  &&  this.format.getSkipHeaderRecord())  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
263	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  ||  this.format.getHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()!=  null  ||  this.format.getHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  ||  this.format.getHeaderRecord())  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
264	[BUG]  [BUGGY]  if(this.format.values()  ==  null  ||  nextRecord.values())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format.values()  ==  null  ||  nextRecord.values())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format.values()  ==  null  ||  nextRecord.values())  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
265	[BUG]  [BUGGY]  hdrMap.put(record,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(record,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(record,  new  CSVRecord(this.format.getSkipHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getSkipHeaderRecord()));    	non-compiled	[CE]  ';'  expected	4	None	replace
266	[BUG]  [BUGGY]  hdrMap.put(formatHeader,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(formatHeader,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(formatHeader,  new  CSVRecord(this.format.getSkipHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getSkipHeaderRecord()));    	non-compiled	[CE]  ';'  expected	4	None	replace
267	[BUG]  [BUGGY]  hdrMap.put(rect,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rect,  new  CSVRecord(this.format.getSkipHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rect,  new  CSVRecord(this.format.getSkipHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getSkipHeaderRecord()));    	non-compiled	[CE]  ';'  expected	4	None	replace
268	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  &&  header.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()!=  null  &&  header.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  &&  header.length  ==  0)  {	  if(nextRecord.values()!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
269	[BUG]  [BUGGY]  if(header  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null)  {	  if(rec.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
270	[BUG]  [BUGGY]  if(NextRecord.values()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(NextRecord.values()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(NextRecord.values()!=  null)  {	  if(rec.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
271	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.values().length  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  header.values().length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.values().length  >  0)  {	  if(nextRecord!=    null    &&    nextRecord.values().length    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
272	[BUG]  [BUGGY]  if(header  ==  null  ||  header!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header!=  null)  {	  if(header    ==    null    &&    nextRecord!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
273	[BUG]  [BUGGY]  hdrMap.put(record,  new  CSVRecord(this.format.getHeaderRecord()));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(record,  new  CSVRecord(this.format.getHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(record,  new  CSVRecord(this.format.getHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
274	[BUG]  [BUGGY]  hdrMap.put(rect,  new  CSVRecord(this.format.getHeaderRecord()));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rect,  new  CSVRecord(this.format.getHeaderRecord()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rect,  new  CSVRecord(this.format.getHeaderRecord()));	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
275	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()  +  formatHeader.length));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()  +  formatHeader.length));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()  +  formatHeader.length));	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
276	[BUG]  [BUGGY]  if(header  ==  null  ||  header.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header.size()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.size()  ==  0)  {	  if(header    ==    null    ||    nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
277	[BUG]  [BUGGY]  hdrMap.put(record.toString(),  nextRecord);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(record.toString(),  nextRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(record.toString(),  nextRecord);	  hdrMap.put(rect.toString(),    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
278	[BUG]  [BUGGY]  hdrMap.put(rect.toString(),  header);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(rect.toString(),  header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(rect.toString(),  header);	  hdrMap.put(rect.toString(),    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
279	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  -  1);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  -  1);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
280	[BUG]  [BUGGY]  hdrMap.put(formatHeader,  new  CSVRecord(rec));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(formatHeader,  new  CSVRecord(rec));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(formatHeader,  new  CSVRecord(rec));	  hdrMap.put(header,    new    CSVRecord(rec));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
281	[BUG]  [BUGGY]  hdrMap.put(record,  nextRecord);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(record,  nextRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(record,  nextRecord);	  hdrMap.put(formatHeader,    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
282	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  header.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  header.size()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  header.size()  ==  0)  {	  if(nextRecord!=    null    ||    nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
283	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  header.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  header.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  header.values()  >  0)  {	  if(nextRecord!=    null    ||    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
284	[BUG]  [BUGGY]  if(nextRecord.values()  ==  null  ||  header.values().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()  ==  null  ||  header.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  ==  null  ||  header.values().length  ==  0)  {	  if(nextRecord.values()    ==    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
285	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(record.values()));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(record.values()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(record.values()));	  hdrMap.put(header,    new    CSVRecord(nextRecord.values()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
286	[BUG]  [BUGGY]  hdrMap.put(record,  new  CSVRecord(nextRecord.values()));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(record,  new  CSVRecord(nextRecord.values()));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(record,  new  CSVRecord(nextRecord.values()));	  hdrMap.put(header,    new    CSVRecord(nextRecord.values()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
287	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(nextRecord.values()  +  formatHeader.length));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(nextRecord.values()  +  formatHeader.length));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(nextRecord.values()  +  formatHeader.length));	  hdrMap.put(header,    new    CSVRecord(nextRecord.values()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
288	[BUG]  [BUGGY]  if(record.values()!=  null  ||  header.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(record.values()!=  null  ||  header.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(record.values()!=  null  ||  header.length  ==  0)  {	  if(rec.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
289	[BUG]  [BUGGY]  if(rec.values()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(rec.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(rec.values()  ==  null)  {	  if(rec.values()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
290	[BUG]  [BUGGY]  if(this.format!=  null  ||  nextRecord.values())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format!=  null  ||  nextRecord.values())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format!=  null  ||  nextRecord.values())  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
291	[BUG]  [BUGGY]  if(rec  ==  null  ||  this.format.getSkipHeaderRecord())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(rec  ==  null  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(rec  ==  null  ||  this.format.getSkipHeaderRecord())  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
292	[BUG]  [BUGGY]  if(this.nextRecord  ==  null  &&  nextRecord.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.nextRecord  ==  null  &&  nextRecord.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.nextRecord  ==  null  &&  nextRecord.values()  >  0)  {	  if(nextRecord    ==    null    &&    nextRecord.values()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
293	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  <  =  header.length)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  <  =  header.length)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.size()  <  =  header.length)  {	  if(nextRecord!=    null    &&    nextRecord.size()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
294	[BUG]  [BUGGY]  if(this.format!=  null  &&  nextRecord.values())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format!=  null  &&  nextRecord.values())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format!=  null  &&  nextRecord.values())  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecord())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
295	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  <  1)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.size()  <  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.size()  <  1)  {	  if(nextRecord!=    null    &&    nextRecord.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
296	[BUG]  [BUGGY]  if(nextRecord.values()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  >  0)  {	  if(this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
297	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord(),  header));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord(),  header));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord(),  header));	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
298	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()),  header);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()),  header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(this.format.getHeaderRecord()),  header);	  hdrMap.put(header,    new    CSVRecord(this.format.getHeaderRecord()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
299	[BUG]  [BUGGY]  if(header  >=  null  &&  nextRecord!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  >=  null  &&  nextRecord!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  >=  null  &&  nextRecord!=  null)  {	  if(header    ==    null    &&    nextRecord!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
300	[BUG]  [BUGGY]  if(nextRecord.size()  ==  0  ||  header  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.size()  ==  0  ||  header  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()  ==  0  ||  header  ==  null)  {	  if(nextRecord.values()    ==    null    ||    header    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
301	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.values().size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.values().size()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.values().size()  ==  0)  {	  if(header    ==    null    ||    nextRecord.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
302	[BUG]  [BUGGY]  if(nextRecord.values()  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()  >=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()  >=  null)  {	  if(nextRecord.getHeader()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
303	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  [CE]  '('  or  '['  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header.length  <  2)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.length  <  2)  {	  if(header    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  '('  or  '['  expected	23	None	replace
304	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  =  0)  {  [CE]  '('  or  '['  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header.length  <  =  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.length  <  =  0)  {	  if(header    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  '('  or  '['  expected	23	None	replace
305	[BUG]  [BUGGY]  if(header  ==  null  ||  header.length  <  2  ||  header.length  >  0)  {  [CE]  '('  or  '['  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header.length  <  2  ||  header.length  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.length  <  2  ||  header.length  >  0)  {	  if(header    ==    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  '('  or  '['  expected	23	None	replace
306	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.equals(this.format))  {  [CE]  '('  or  '['  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.equals(this.format))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.equals(this.format))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
307	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.equals(this.format))  {  [CE]  '('  or  '['  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  header.equals(this.format))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.equals(this.format))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
308	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.equals( " "))  {  [CE]  '('  or  '['  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.equals( " "))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.equals( " "))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
309	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.equals(currentRecord))  {  [CE]  '('  or  '['  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  header.equals(currentRecord))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.equals(currentRecord))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
310	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.equals(currentRecord))  {  [CE]  '('  or  '['  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.equals(currentRecord))  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.equals(currentRecord))  {	  if(nextRecord!=    null    &&    nextRecord.equals(header))    {    	non-compiled	[CE]  '('  or  '['  expected	72	None	replace
311	[BUG]  [BUGGY]  if(this.format  ==  null  ||  nextRecord  ==  null)  {  [CE]  '('  or  '['  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format  ==  null  ||  nextRecord  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format  ==  null  ||  nextRecord  ==  null)  {	  if(nextRecord    ==    null    &&    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  '('  or  '['  expected	15	None	replace
312	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  ||  this.format.getSkipHeaderRecord())  {  [CE]  '('  or  '['  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()!=  null  ||  this.format.getSkipHeaderRecord())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  ||  this.format.getSkipHeaderRecord())  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  '('  or  '['  expected	76	None	replace
313	[BUG]  [BUGGY]  if(this.format.getSkipHeaderRecord()  ==  null  ||  nextRecord.values()  ==  null)  {  [CE]  '('  or  '['  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format.getSkipHeaderRecord()  ==  null  ||  nextRecord.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format.getSkipHeaderRecord()  ==  null  ||  nextRecord.values()  ==  null)  {	  if(nextRecord.values()    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  '('  or  '['  expected	76	None	replace
314	[BUG]  [BUGGY]  if(nextRecord.values()!=  null  &&  header!=  null)  {  [CE]  '('  or  '['  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.values()!=  null  &&  header!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.values()!=  null  &&  header!=  null)  {	  if(nextRecord.values()    ==    null    ||    header!=    null)    {    	non-compiled	[CE]  '('  or  '['  expected	51	None	replace
315	[BUG]  [BUGGY]  if(nextRecord.size()  ==  0  ||  header!=  null)  {  [CE]  '('  or  '['  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.size()  ==  0  ||  header!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()  ==  0  ||  header!=  null)  {	  if(nextRecord.values()    ==    null    ||    header!=    null)    {    	non-compiled	[CE]  '('  or  '['  expected	51	None	replace
316	[BUG]  [BUGGY]  if(header!=  null  &&  nextRecord.values()!=  null  ||  header.length  ==  0)  {  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header!=  null  &&  nextRecord.values()!=  null  ||  header.length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header!=  null  &&  nextRecord.values()!=  null  ||  header.length  ==  0)  {	  if(nextRecord.values()!=    null    ||    header.length    ==    0)    {    	non-compiled	[CE]  :  expected	66	None	replace
317	[BUG]  [BUGGY]  if(nextRecord.size()  ==  0  ||  nextRecord.values().length  ==  0)  {  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord.size()  ==  0  ||  nextRecord.values().length  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord.size()  ==  0  ||  nextRecord.values().length  ==  0)  {	  if(nextRecord.values()    ==    null    ||    nextRecord.values().length    ==    0)    {    	non-compiled	[CE]  :  expected	9	None	replace
318	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values().length  >=  0)  {  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values().length  >=  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.values().length  >=  0)  {	  if(nextRecord!=    null    &&    nextRecord.values().length    >    0)    {    	non-compiled	[CE]  :  expected	17	None	replace
319	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values().length  <  2)  {  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.values().length  <  2)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.values().length  <  2)  {	  if(nextRecord!=    null    &&    nextRecord.values().length    >    0)    {    	non-compiled	[CE]  :  expected	17	None	replace
320	[BUG]  [BUGGY]  if(rec  ==  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(rec  ==  null  ||  this.format.getSkipHeaderRecord()!=  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(rec  ==  null  ||  this.format.getSkipHeaderRecord()!=  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()!=    null)    {    	non-compiled	[CE]  :  expected	57	None	replace
321	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.values()  ==  null)  {  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  header.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.values()  ==  null)  {	  if    (nextRecord!=    null    &&    nextRecord.values()    ==    null)    {    	non-compiled	[CE]  :  expected	39	None	replace
322	[BUG]  [BUGGY]  hdrMap.put(nextRecord,  header);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(nextRecord,  header);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(nextRecord,  header);	  hdrMap.put(formatHeader,    nextRecord);    	non-compiled	[CE]  :  expected	6	None	replace
323	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  header.values()  >  1)  {  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  header.values()  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  header.values()  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.values()    >    1)    {    	non-compiled	[CE]  :  expected	36	None	replace
324	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  this.format.getHeaderRecords())  {  [CE]  :  expected  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  this.format.getHeaderRecords())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  this.format.getHeaderRecords())  {	  if(nextRecord    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  :  expected	69	None	replace
325	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values())  {  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  nextRecord.values())  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  nextRecord.values())  {	  if(nextRecord    ==    null    ||    this.format.getSkipHeaderRecord())    {    	non-compiled	[CE]  :  expected	69	None	replace
326	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  this.format.getHeaderRecords()  ||  header  ==  null)  {  [CE]  :  expected  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  this.format.getHeaderRecords()  ||  header  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  this.format.getHeaderRecords()  ||  header  ==  null)  {	  if(nextRecord!=    null    &&    this.format.getHeaderRecords())    {    	non-compiled	[CE]  :  expected	73	None	replace
327	[BUG]  [BUGGY]  hdrMap.put(header,  new  CSVRecord(rec,  formatHeader));  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(header,  new  CSVRecord(rec,  formatHeader));  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(header,  new  CSVRecord(rec,  formatHeader));	  hdrMap.put(header,    new    CSVRecord(rec));    	non-compiled	[CE]  :  expected	68	None	replace
328	[BUG]  [BUGGY]  if(nextRecord!=  null  ||  header.values()  ==  0)  {  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  ||  header.values()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  ||  header.values()  ==  0)  {	  if(header!=    null    ||    nextRecord.values()    ==    0)    {    	non-compiled	[CE]  :  expected	64	None	replace
329	[BUG]  [BUGGY]  if(header  ==  null  ||  firstRecord.values()  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  firstRecord.values()  ==  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  firstRecord.values()  ==  0)  {	  if(header!=    null    ||    nextRecord.values()    ==    0)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
330	[BUG]  [BUGGY]  if(this.format!=  null  ||  nextRecord.values()  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(this.format!=  null  ||  nextRecord.values()  ==  null)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(this.format!=  null  ||  nextRecord.values()  ==  null)  {	  if(nextRecord!=    null    ||    this.format.getSkipHeaderRecord()    ==    null)    {    	non-compiled	[CE]  ';'  expected	55	None	replace
331	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(headers.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(headers.length);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(headers.length);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
332	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format.length);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(this.format.length);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
333	[BUG]  [BUGGY]  hdrMap.put(this.format.toString(),  nextRecord);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  hdrMap.put(this.format.toString(),  nextRecord);  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	hdrMap.put(this.format.toString(),  nextRecord);	  hdrMap.put(rect.toString(),    nextRecord);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
334	[BUG]  [BUGGY]  if(header  ==  null  ||  header.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  header.size()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  header.size()  >  0)  {	  if(header    ==    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
335	[BUG]  [BUGGY]  if(header  ==  null  ||  nextRecord.size()  <  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(header  ==  null  ||  nextRecord.size()  <  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(header  ==  null  ||  nextRecord.size()  <  0)  {	  if(header    ==    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
336	[BUG]  [BUGGY]  if(nextRecord  ==  null  ||  header.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord  ==  null  ||  header.size()  >  0)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord  ==  null  ||  header.size()  >  0)  {	  if(header    ==    null    &&    nextRecord.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
337	[BUG]  [BUGGY]  if(nextRecord!=  null  &&  nextRecord.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {  hdrMap  =  new  LinkedHashMap<String,  Integer>();  String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();      [BUGGY]  if(nextRecord!=  null  &&  nextRecord.length  >  1)  {  [BUGGY]      header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  this.nextRecord();  }  header  =  formatHeader;  }    [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.4082482904638631	358	358	1	replace	if(nextRecord!=  null  &&  nextRecord.length  >  1)  {	  if(nextRecord!=    null    &&    nextRecord.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
