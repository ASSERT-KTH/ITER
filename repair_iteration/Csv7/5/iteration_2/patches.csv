bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.hdrMap.get(new  HashMap  <  String,  Integer>());  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.hdrMap.get(new  HashMap  <  String,  Integer>());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.hdrMap.get(new  HashMap  <  String,  Integer>());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(new    HashMap    <    String,    Integer>());    	non-compiled	[CE]  :  expected	44	None	replace
2	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.headerMap.get(new  HashMap  <  String,  Integer>());  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.headerMap.get(new  HashMap  <  String,  Integer>());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.headerMap.get(new  HashMap  <  String,  Integer>());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(new    HashMap    <    String,    Integer>());    	non-compiled	[CE]  :  expected	44	None	replace
3	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.get(new  HashMap  <  String,  Integer>());  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.get(new  HashMap  <  String,  Integer>());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.get(new  HashMap  <  String,  Integer>());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(new    HashMap    <    String,    Integer>());    	non-compiled	[CE]  :  expected	44	None	replace
4	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.format.get(new  HashMap  <  String,  Integer>());  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.format.get(new  HashMap  <  String,  Integer>());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.format.get(new  HashMap  <  String,  Integer>());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(new    HashMap    <    String,    Integer>());    	non-compiled	[CE]  :  expected	44	None	replace
5	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(1));  [CE]  :  expected  [FE]                                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(1));  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(1));	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(new    HashMap    <    String,    Integer>());    	non-compiled	[CE]  :  expected	44	None	replace
6	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(0));  [CE]  :  expected  [FE]                                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(0));  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(0));	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(new    HashMap    <    String,    Integer>());    	non-compiled	[CE]  :  expected	44	None	replace
7	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.toString());  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.toString());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.toString());	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	55	None	replace
8	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length());  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length());	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	55	None	replace
9	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.values()  +  1);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.values()  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.values()  +  1);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	55	None	replace
10	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.keySet());  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.keySet());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.keySet());	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	55	None	replace
11	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.toArray());  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.toArray());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.toArray());	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	55	None	replace
12	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(7);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(7);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(7);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(8);    	non-compiled	[CE]  :  expected	47	None	replace
13	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(6);  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(6);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(6);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(8);    	non-compiled	[CE]  :  expected	47	None	replace
14	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(5);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(5);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(5);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(8);    	non-compiled	[CE]  :  expected	47	None	replace
15	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.format.get(initializeHeader());  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.format.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.format.get(initializeHeader());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	42	None	replace
16	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.get(initializeHeader());  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.get(initializeHeader());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	42	None	replace
17	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.initializeHeader();  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.initializeHeader();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.initializeHeader();	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	42	None	replace
18	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.headerMap.get(initializeHeader());  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.headerMap.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.headerMap.get(initializeHeader());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	42	None	replace
19	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.data.get(initializeHeader());  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.data.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.data.get(initializeHeader());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	42	None	replace
20	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader());  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	42	None	replace
21	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  2  +  1);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  2  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  2  +  1);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    *    2);    	non-compiled	[CE]  :  expected	20	None	replace
22	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  4);  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  4);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  4);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    *    2);    	non-compiled	[CE]  :  expected	20	None	replace
23	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  /  2);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  /  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  /  2);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    *    2);    	non-compiled	[CE]  :  expected	20	None	replace
24	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  3);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  3);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  3);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    *    2);    	non-compiled	[CE]  :  expected	20	None	replace
25	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  -  2);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  -  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  -  2);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    *    2);    	non-compiled	[CE]  :  expected	20	None	replace
26	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(3);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(3);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(3);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(2);    	non-compiled	[CE]  :  expected	6	None	replace
27	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length());  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	9	None	replace
28	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.toString());  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.toString());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.toString());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	9	None	replace
29	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.values()  +  1);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.values()  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.values()  +  1);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	9	None	replace
30	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.toArray());  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.toArray());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.toArray());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	9	None	replace
31	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.values());  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.values());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.values());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	9	None	replace
32	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(7);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(7);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(7);	  hdrMap    =    new    HashMap    <    String,    Integer>(8);    	non-compiled	[CE]  :  expected	50	None	replace
33	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(6);  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(6);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(6);	  hdrMap    =    new    HashMap    <    String,    Integer>(8);    	non-compiled	[CE]  :  expected	50	None	replace
34	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(5);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(5);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(5);	  hdrMap    =    new    HashMap    <    String,    Integer>(8);    	non-compiled	[CE]  :  expected	50	None	replace
35	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(8);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(8);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(8);	  hdrMap    =    new    TreeMap    <    String,    Integer>(2);    	non-compiled	[CE]  :  expected	52	None	replace
36	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(3);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(3);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(3);	  hdrMap    =    new    TreeMap    <    String,    Integer>(2);    	non-compiled	[CE]  :  expected	52	None	replace
37	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formHeader.size());  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formHeader.size());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formHeader.size());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size()    -    2);    	non-compiled	[CE]  :  expected	12	None	replace
38	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatheader.size());  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatheader.size());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatheader.size());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size()    -    2);    	non-compiled	[CE]  :  expected	12	None	replace
39	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  +  1);  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  +  1);	  hdrMap    =    new    ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	10	None	replace
40	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  -  1);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  -  1);	  hdrMap    =    new    ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	10	None	replace
41	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  +  2);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  +  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  +  2);	  hdrMap    =    new    ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	10	None	replace
42	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  1);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  1);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    +    1);    	non-compiled	[CE]  :  expected	17	None	replace
43	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  1000);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  1000);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  1000);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    +    1);    	non-compiled	[CE]  :  expected	17	None	replace
44	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  +  3);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  +  3);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  +  3);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    +    1);    	non-compiled	[CE]  :  expected	17	None	replace
45	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.format.get(initializeHeader());  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.format.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.format.get(initializeHeader());	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	35	None	replace
46	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.initializeHeader();  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.initializeHeader();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.initializeHeader();	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	35	None	replace
47	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.get(initializeHeader());  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.get(initializeHeader());	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	35	None	replace
48	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)headerMap.get(initializeHeader());  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)headerMap.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)headerMap.get(initializeHeader());	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	35	None	replace
49	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.record.get(initializeHeader());  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.record.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.record.get(initializeHeader());	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	35	None	replace
50	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.nextRecord.get(initializeHeader());  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.nextRecord.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.nextRecord.get(initializeHeader());	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	35	None	replace
51	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  +  1);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  +  1);	  hdrMap    =    new    ArrayList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	19	None	replace
52	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  +  1);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  +  1);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	25	None	replace
53	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  -  1);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  -  1);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	25	None	replace
54	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  *  2);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  *  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  *  2);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	25	None	replace
55	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  +  2);  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  +  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  +  2);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	25	None	replace
56	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  -  2);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  -  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size()  -  2);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	25	None	replace
57	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  +  1);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  +  1);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
58	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  -  1);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  -  1);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
59	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.values());  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.values());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.values());	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
60	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  *  2);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  *  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  *  2);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
61	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  -  2);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  -  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  -  2);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
62	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  +  2);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  +  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size()  +  2);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
63	[BUG]  [BUGGY]  hdrMap  =  hdrMap.get(formatHeader.length);  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  hdrMap.get(formatHeader.length);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  hdrMap.get(formatHeader.length);	  hdrMap    =    hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	57	None	replace
64	[BUG]  [BUGGY]  hdrMap  =  hdrMap.get(formatHeader[0]);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  hdrMap.get(formatHeader[0]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  hdrMap.get(formatHeader[0]);	  hdrMap    =    hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	57	None	replace
65	[BUG]  [BUGGY]  hdrMap  =  hdrMap.get(formatHeader  +  1);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  hdrMap.get(formatHeader  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  hdrMap.get(formatHeader  +  1);	  hdrMap    =    hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	57	None	replace
66	[BUG]  [BUGGY]  hdrMap  =  formatHeader.get(hdrMap);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  formatHeader.get(hdrMap);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  formatHeader.get(hdrMap);	  hdrMap    =    hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	57	None	replace
67	[BUG]  [BUGGY]  hdrMap  =  hdrMap.get(formatHeader[i]);  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  hdrMap.get(formatHeader[i]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  hdrMap.get(formatHeader[i]);	  hdrMap    =    hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	57	None	replace
68	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.size()  +  1);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.size()  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.size()  +  1);	  hdrMap    =    new    ArrayHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	46	None	replace
69	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.size()  -  1);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.size()  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.size()  -  1);	  hdrMap    =    new    ArrayHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	46	None	replace
70	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayHashMap  <  String,  Integer>(formatHeader.size());  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayHashMap  <  String,  Integer>(formatHeader.size());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayHashMap  <  String,  Integer>(formatHeader.size());	  hdrMap    =    new    ArrayHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	46	None	replace
71	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.values());  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.values());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.values());	  hdrMap    =    new    ArrayHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	46	None	replace
72	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader[0]);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader[0]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader[0]);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	1	None	replace
73	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader[i]);  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader[i]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader[i]);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	1	None	replace
74	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader)+  1;  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader)+  1;  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader)+  1;	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	1	None	replace
75	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)formatHeader.clone();  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)formatHeader.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)formatHeader.clone();	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	56	None	replace
76	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.format.clone();  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.format.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.format.clone();	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	56	None	replace
77	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)headerMap.clone();  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)headerMap.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)headerMap.clone();	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	56	None	replace
78	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.clone();  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.clone();	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	56	None	replace
79	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.record.clone();  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.record.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.record.clone();	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	56	None	replace
80	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)rec.clone();  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)rec.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)rec.clone();	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	56	None	replace
81	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader[0]);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader[0]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader[0]);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	22	None	replace
82	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.initialize());  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.initialize());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.initialize());	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	22	None	replace
83	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayHashMap  <  String,  Integer>(formatHeader);  [CE]  :  expected  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayHashMap  <  String,  Integer>(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayHashMap  <  String,  Integer>(formatHeader);	  hdrMap    =    new    ArrayHashMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	53	None	replace
84	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader[0]);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader[0]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader[0]);	  hdrMap    =    new    ArrayHashMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	53	None	replace
85	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  +  1);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  +  1);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
86	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  +  1));  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  +  1));  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  +  1));	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
87	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  -  1);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  -  1);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
88	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  *  2);  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  *  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  *  2);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
89	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  +  2);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  +  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length  +  2);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
90	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(1);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(1);	  hdrMap    =    new    LinkedList    <    String,    Integer>(1);    	non-compiled	[CE]  :  expected	16	None	replace
91	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(2);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(2);	  hdrMap    =    new    LinkedList    <    String,    Integer>(1);    	non-compiled	[CE]  :  expected	16	None	replace
92	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(0);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(0);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(0);	  hdrMap    =    new    LinkedList    <    String,    Integer>(1);    	non-compiled	[CE]  :  expected	16	None	replace
93	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(4);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(4);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(4);	  hdrMap    =    new    LinkedList    <    String,    Integer>(1);    	non-compiled	[CE]  :  expected	16	None	replace
94	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  +  1);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  +  1);	  hdrMap    =    new    ArrayHashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	49	None	replace
95	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayHashMap  <  String,  Integer>(formatHeader.length);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayHashMap  <  String,  Integer>(formatHeader.length);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayHashMap  <  String,  Integer>(formatHeader.length);	  hdrMap    =    new    ArrayHashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	49	None	replace
96	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  -  1);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  -  1);	  hdrMap    =    new    ArrayHashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	49	None	replace
97	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size()  +  1);  [CE]  :  expected  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size()  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size()  +  1);	  hdrMap    =    new    LinkedList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	13	None	replace
98	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size()  -  1);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size()  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size()  -  1);	  hdrMap    =    new    LinkedList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	13	None	replace
99	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.values());  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.values());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.values());	  hdrMap    =    new    LinkedList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	13	None	replace
100	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size()  -  2);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size()  -  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size()  -  2);	  hdrMap    =    new    LinkedList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	13	None	replace
101	[BUG]  [BUGGY]  String[]  formatHeader  =  this.format.getHeader();  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  String[]  formatHeader  =  this.format.getHeader();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	String[]  formatHeader  =  this.format.getHeader();	  String[]    formatHeader    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	37	None	replace
102	[BUG]  [BUGGY]  String[]  formatHeader  =  this.format.getHeaderRecord();  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  String[]  formatHeader  =  this.format.getHeaderRecord();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	String[]  formatHeader  =  this.format.getHeaderRecord();	  String[]    formatHeader    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	37	None	replace
103	[BUG]  [BUGGY]  final  String[]  formatHeader  =  this.format.getSkipHeaderRecord();  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  final  String[]  formatHeader  =  this.format.getSkipHeaderRecord();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	final  String[]  formatHeader  =  this.format.getSkipHeaderRecord();	  String[]    formatHeader    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	37	None	replace
104	[BUG]  [BUGGY]  String[]  formatHeader  =  this.format.getFormat();  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  String[]  formatHeader  =  this.format.getFormat();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	String[]  formatHeader  =  this.format.getFormat();	  String[]    formatHeader    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	37	None	replace
105	[BUG]  [BUGGY]  String[]  formatHeader  =  this.format.getSkipHeader();  [CE]  :  expected  [FE]                                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  String[]  formatHeader  =  this.format.getSkipHeader();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	String[]  formatHeader  =  this.format.getSkipHeader();	  String[]    formatHeader    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	37	None	replace
106	[BUG]  [BUGGY]  String[]  formatHeader  =  this.format.getBaseHeader();  [CE]  :  expected  [FE]                                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  String[]  formatHeader  =  this.format.getBaseHeader();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	String[]  formatHeader  =  this.format.getBaseHeader();	  String[]    formatHeader    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	37	None	replace
107	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader[0]);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader[0]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader[0]);	  hdrMap    =    new    ArrayList    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	40	None	replace
108	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)this.format.clone();  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(Map  <  String,  Integer>)this.format.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)this.format.clone();	  hdrMap    =(Map    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	59	None	replace
109	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)formatHeader.clone();  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(Map  <  String,  Integer>)formatHeader.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)formatHeader.clone();	  hdrMap    =(Map    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	59	None	replace
110	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)headerMap.clone();  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(Map  <  String,  Integer>)headerMap.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)headerMap.clone();	  hdrMap    =(Map    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	59	None	replace
111	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)this.headerMap.clone();  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(Map  <  String,  Integer>)this.headerMap.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)this.headerMap.clone();	  hdrMap    =(Map    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	59	None	replace
112	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)this.record.clone();  [CE]  :  expected  [FE]                                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(Map  <  String,  Integer>)this.record.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)this.record.clone();	  hdrMap    =(Map    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	59	None	replace
113	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)super.initializeHeader();  [CE]  :  expected  [FE]                                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(Map  <  String,  Integer>)super.initializeHeader();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)super.initializeHeader();	  hdrMap    =(Map    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	59	None	replace
114	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.getSkipHeaderRecord());  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.getSkipHeaderRecord());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.getSkipHeaderRecord());	  hdrMap    =    new    HashMap    <    String,    Integer>(this.format.getSkipHeaderRecord());    	non-compiled	[CE]  :  expected	34	None	replace
115	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getHeaderRecord());  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getHeaderRecord());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getHeaderRecord());	  hdrMap    =    new    HashMap    <    String,    Integer>(this.format.getSkipHeaderRecord());    	non-compiled	[CE]  :  expected	34	None	replace
116	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.keySet());  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.keySet());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.keySet());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.keySet());    	non-compiled	[CE]  :  expected	45	None	replace
117	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.keySet());  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.keySet());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.keySet());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.keySet());    	non-compiled	[CE]  :  expected	45	None	replace
118	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.keySet());  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.keySet());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.keySet());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.keySet());    	non-compiled	[CE]  :  expected	45	None	replace
119	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.record.get(record);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.record.get(record);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.record.get(record);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(record);    	non-compiled	[CE]  :  expected	38	None	replace
120	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)record.get(formatHeader);  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)record.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)record.get(formatHeader);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(record);    	non-compiled	[CE]  :  expected	38	None	replace
121	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.get(record);  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.get(record);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.get(record);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(record);    	non-compiled	[CE]  :  expected	38	None	replace
122	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)rec.get(formatHeader);  [CE]  :  expected  [FE]                                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)rec.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)rec.get(formatHeader);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(record);    	non-compiled	[CE]  :  expected	38	None	replace
123	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headers.get(record);  [CE]  :  expected  [FE]                                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headers.get(record);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.headers.get(record);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(record);    	non-compiled	[CE]  :  expected	38	None	replace
124	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)headerMap.get(record);  [CE]  :  expected  [FE]                                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)headerMap.get(record);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)headerMap.get(record);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(record);    	non-compiled	[CE]  :  expected	38	None	replace
125	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)record.get(i);  [CE]  :  expected  [FE]                                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)record.get(i);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)record.get(i);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(record);    	non-compiled	[CE]  :  expected	38	None	replace
126	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.toString());  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.toString());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.toString());	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	33	None	replace
127	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length());  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length());	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	33	None	replace
128	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.values()  +  1);  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.values()  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.values()  +  1);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	33	None	replace
129	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.toArray());  [CE]  :  expected  [FE]                                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.toArray());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.toArray());	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	33	None	replace
130	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(5);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(5);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(5);	  hdrMap    =    new    TreeMap    <    String,    Integer>(4);    	non-compiled	[CE]  :  expected	54	None	replace
131	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(6);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(6);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(6);	  hdrMap    =    new    TreeMap    <    String,    Integer>(4);    	non-compiled	[CE]  :  expected	54	None	replace
132	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader[0]);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader[0]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader[0]);	  hdrMap    =    new    LinkedList    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	14	None	replace
133	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.format.get(formatHeader);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.format.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.format.get(formatHeader);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	43	None	replace
134	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.headerMap.get(formatHeader);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.headerMap.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.headerMap.get(formatHeader);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	43	None	replace
135	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.headers.get(formatHeader);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.headers.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.headers.get(formatHeader);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	43	None	replace
136	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.get(formatHeader);  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.get(formatHeader);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	43	None	replace
137	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)super.initializeHeader(formatHeader);  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)super.initializeHeader(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)super.initializeHeader(formatHeader);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	43	None	replace
138	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.record.get(formatHeader);  [CE]  :  expected  [FE]                                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.record.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.record.get(formatHeader);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	43	None	replace
139	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.format.get(formatHeader);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.format.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.format.get(formatHeader);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	58	None	replace
140	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.get(formatHeader);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.headerMap.get(formatHeader);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	58	None	replace
141	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headers.get(formatHeader);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headers.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.headers.get(formatHeader);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	58	None	replace
142	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.record.get(formatHeader);  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.record.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.record.get(formatHeader);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	58	None	replace
143	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)headerMap.get(formatHeader);  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)headerMap.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)headerMap.get(formatHeader);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	58	None	replace
144	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)super.initializeHeader(formatHeader);  [CE]  :  expected  [FE]                                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)super.initializeHeader(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)super.initializeHeader(formatHeader);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	58	None	replace
145	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  +  2);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  +  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  +  2);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size()    *    2);    	non-compiled	[CE]  :  expected	11	None	replace
146	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size();  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size();	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size()    *    2);    	non-compiled	[CE]  :  expected	11	None	replace
147	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  *  2  +  1);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  *  2  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  *  2  +  1);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size()    *    2);    	non-compiled	[CE]  :  expected	11	None	replace
148	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0],  formatHeader[1]);  [CE]  :  expected  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0],  formatHeader[1]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0],  formatHeader[1]);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader[0]);    	non-compiled	[CE]  :  expected	39	None	replace
149	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[1]);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[1]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[1]);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader[0]);    	non-compiled	[CE]  :  expected	39	None	replace
150	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0]  +  1);  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0]  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0]  +  1);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader[0]);    	non-compiled	[CE]  :  expected	39	None	replace
151	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0],  this.format);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0],  this.format);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0],  this.format);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader[0]);    	non-compiled	[CE]  :  expected	39	None	replace
152	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0],  false);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0],  false);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0],  false);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader[0]);    	non-compiled	[CE]  :  expected	39	None	replace
153	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  +  1);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  +  1);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	29	None	replace
154	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  -  1);  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  -  1);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	29	None	replace
155	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  *  2);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  *  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  *  2);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	29	None	replace
156	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  +  2);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  +  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length  +  2);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	29	None	replace
157	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(3);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(3);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(3);	  hdrMap    =    new    HashMap    <    String,    Integer>(2);    	non-compiled	[CE]  :  expected	27	None	replace
158	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(Format.size());  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(Format.size());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(Format.size());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size()    +    1);    	non-compiled	[CE]  :  expected	7	None	replace
159	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.getValue());  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.getValue());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.getValue());	  hdrMap    =    new    HashMap    <    String,    Integer>(this.format.getHeader());    	non-compiled	[CE]  :  expected	36	None	replace
160	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  -  3);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  -  3);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  -  3);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    -    1);    	non-compiled	[CE]  :  expected	18	None	replace
161	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  +  1);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  +  1);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	31	None	replace
162	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  -  1);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  -  1);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	31	None	replace
163	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  *  2);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  *  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  *  2);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	31	None	replace
164	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  +  2);  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  +  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  +  2);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	31	None	replace
165	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  -  2);  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  -  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size()  -  2);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	31	None	replace
166	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader[0]);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader[0]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader[0]);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	28	None	replace
167	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  +  1);  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  +  1);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	23	None	replace
168	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  -  1);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  -  1);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	23	None	replace
169	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  *  2);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  *  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  *  2);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	23	None	replace
170	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  +  2);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  +  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length  +  2);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	23	None	replace
171	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)formatHeader.clone();  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)formatHeader.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)formatHeader.clone();	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	41	None	replace
172	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.format.clone();  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)this.format.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)this.format.clone();	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	41	None	replace
173	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.clone();  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.clone();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)headerMap.clone();	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	41	None	replace
174	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(i);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(i);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(i);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	41	None	replace
175	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.length  +  1);  [CE]  :  expected  [FE]                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.length  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.length  +  1);	  hdrMap    =    new    LinkedList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	15	None	replace
176	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.length  -  1);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.length  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.length  -  1);	  hdrMap    =    new    LinkedList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	15	None	replace
177	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  +  2);  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  +  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  +  2);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    +    2);    	non-compiled	[CE]  :  expected	21	None	replace
178	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  +  2);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  +  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  +  2);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length    +    2);    	non-compiled	[CE]  :  expected	21	None	replace
179	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader).values();  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader).values();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader).values();	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	22	None	replace
180	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader.length);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader.length);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader.length);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	43	None	replace
181	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader[0]);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader[0]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader[0]);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	43	None	replace
182	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader  +  1);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader  +  1);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	43	None	replace
183	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length)+  1;  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length)+  1;  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length)+  1;	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
184	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(2));  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(2));  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(2));	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(new    HashMap    <    String,    Integer>());    	non-compiled	[CE]  :  expected	44	None	replace
185	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(i);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(i);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(i);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	56	None	replace
186	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(index);  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(index);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(index);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	56	None	replace
187	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(0);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(0);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(0);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	56	None	replace
188	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.keySet());  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.keySet());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.keySet());	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
189	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(8);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(8);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(8);	  hdrMap    =    new    LinkedList    <    String,    Integer>(1);    	non-compiled	[CE]  :  expected	16	None	replace
190	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(3);  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(3);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(3);	  hdrMap    =    new    LinkedList    <    String,    Integer>(1);    	non-compiled	[CE]  :  expected	16	None	replace
191	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(5);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(5);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(5);	  hdrMap    =    new    LinkedList    <    String,    Integer>(1);    	non-compiled	[CE]  :  expected	16	None	replace
192	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  -  2);  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  -  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size()  -  2);	  hdrMap    =    new    ArrayList    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	10	None	replace
193	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  -  1);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  -  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  -  1);	  hdrMap    =    new    ArrayList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	19	None	replace
194	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  *  2);  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  *  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length  *  2);	  hdrMap    =    new    ArrayList    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	19	None	replace
195	[BUG]  [BUGGY]  String[]  formatHeader  =  this.format.getFormatRecord();  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  String[]  formatHeader  =  this.format.getFormatRecord();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	String[]  formatHeader  =  this.format.getFormatRecord();	  String[]    formatHeader    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	37	None	replace
196	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)hdrMap.toArray(new  Integer[hdrMap.size()  ]);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(Map  <  String,  Integer>)hdrMap.toArray(new  Integer[hdrMap.size()  ]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)hdrMap.toArray(new  Integer[hdrMap.size()  ]);	  hdrMap    =(Map    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	59	None	replace
197	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)hdrMap.get(formatHeader);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(Map  <  String,  Integer>)hdrMap.get(formatHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)hdrMap.get(formatHeader);	  hdrMap    =(Map    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	59	None	replace
198	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)hdrMap.get(initializeHeader());  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(Map  <  String,  Integer>)hdrMap.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)hdrMap.get(initializeHeader());	  hdrMap    =(Map    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	59	None	replace
199	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)hdrMap.get(i);  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(Map  <  String,  Integer>)hdrMap.get(i);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)hdrMap.get(i);	  hdrMap    =(Map    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	59	None	replace
200	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headers.get(initializeHeader());  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.headers.get(initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.headers.get(initializeHeader());	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	35	None	replace
201	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader).values();  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader).values();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader).values();	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	28	None	replace
202	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.toArray(new  HtmlMap());  [CE]  :  expected  [FE]                        AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.toArray(new  HtmlMap());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.toArray(new  HtmlMap());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.clone();    	non-compiled	[CE]  :  expected	41	None	replace
203	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  /  2);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  /  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  /  2);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size()    *    2);    	non-compiled	[CE]  :  expected	11	None	replace
204	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(formatHeader.length);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(formatHeader.length);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(formatHeader.length);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	58	None	replace
205	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0]).values();  [CE]  :  expected  [FE]            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0]).values();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0]).values();	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader[0]);    	non-compiled	[CE]  :  expected	39	None	replace
206	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.format.get(record);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)this.format.get(record);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)this.format.get(record);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(record);    	non-compiled	[CE]  :  expected	38	None	replace
207	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  *  2);  [CE]  :  expected  [FE]                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  *  2);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length  *  2);	  hdrMap    =    new    ArrayHashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	49	None	replace
208	[BUG]  [BUGGY]  hdrMap  =  this.format.getHeaderMap();  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  this.format.getHeaderMap();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  this.format.getHeaderMap();	  hdrMap    =    hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	57	None	replace
209	[BUG]  [BUGGY]  hdrMap  =  hdrMap.get(formatHeader.toString());  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  hdrMap.get(formatHeader.toString());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  hdrMap.get(formatHeader.toString());	  hdrMap    =    hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	57	None	replace
210	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.getHeader());  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.getHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.getHeader());	  hdrMap    =    new    HashMap    <    String,    Integer>(this.format.getHeader());    	non-compiled	[CE]  :  expected	36	None	replace
211	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getHeader()  +  1);  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getHeader()  +  1);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getHeader()  +  1);	  hdrMap    =    new    HashMap    <    String,    Integer>(this.format.getHeader());    	non-compiled	[CE]  :  expected	36	None	replace
212	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(this.format);  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(this.format);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(this.format);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	28	None	replace
213	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(this.format.size());  [CE]  :  expected  [FE]                      AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(this.format.size());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(this.format.size());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size()    -    1);    	non-compiled	[CE]  :  expected	8	None	replace
214	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(4));  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(4));  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>(4));	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(new    HashMap    <    String,    Integer>());    	non-compiled	[CE]  :  expected	44	None	replace
215	[BUG]  [BUGGY]  String[]  formatHeader  =  this.format.getFormatHeader();  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  String[]  formatHeader  =  this.format.getFormatHeader();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	String[]  formatHeader  =  this.format.getFormatHeader();	  String[]    formatHeader    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	37	None	replace
216	[BUG]  [BUGGY]  String[]  formatHeader  =  this.format.getFormatHeaderRecord();  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  String[]  formatHeader  =  this.format.getFormatHeaderRecord();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	String[]  formatHeader  =  this.format.getFormatHeaderRecord();	  String[]    formatHeader    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	37	None	replace
217	[BUG]  [BUGGY]  String[]  formatHeader  =  this.format.getFormatHeaders();  [CE]  :  expected  [FE]                                  AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  String[]  formatHeader  =  this.format.getFormatHeaders();  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	String[]  formatHeader  =  this.format.getFormatHeaders();	  String[]    formatHeader    =    this.format.getSkipHeaderRecord();    	non-compiled	[CE]  :  expected	37	None	replace
218	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(this.format);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(this.format);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(this.format);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	1	None	replace
219	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.values(),  formatHeader.length);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.values(),  formatHeader.length);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.values(),  formatHeader.length);	  hdrMap    =    new    TreeMap    <    String,    Integer>(formatHeader.values());    	non-compiled	[CE]  :  expected	33	None	replace
220	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(this.format.keySet());  [CE]  :  expected  [FE]                    AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(this.format.keySet());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(this.format.keySet());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.keySet());    	non-compiled	[CE]  :  expected	45	None	replace
221	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(recordHeader);  [CE]  :  expected  [FE]                                AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(recordHeader);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(recordHeader);	  hdrMap    =(HashMap    <    String,    Integer>)hdrMap.get(record);    	non-compiled	[CE]  :  expected	38	None	replace
222	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format);  [CE]  :  expected  [FE]              AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(this.format);	  hdrMap    =    new    HashMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	22	None	replace
223	[BUG]  [BUGGY]  hdrMap  =  hdrMap.get(formatHeader.intValue());  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =  hdrMap.get(formatHeader.intValue());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  hdrMap.get(formatHeader.intValue());	  hdrMap    =    hdrMap.get(formatHeader);    	non-compiled	[CE]  :  expected	57	None	replace
224	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(this.initializeHeader());  [CE]  :  expected  [FE]                          AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(this.initializeHeader());  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(this.initializeHeader());	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	42	None	replace
225	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader[i]);  [CE]  :  expected  [FE]                            AssertionError      [CONTEXT]      private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {      [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader[i]);  [BUGGY]        String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader[i]);	  hdrMap    =(HtmlMap    <    String,    Integer>)hdrMap.get(initializeHeader());    	non-compiled	[CE]  :  expected	42	None	replace
