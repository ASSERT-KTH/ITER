bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader);  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	9	None	replace
2	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(0);  [CE]  :  expected  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(0);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(0);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	9	None	replace
3	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(1);  [CE]  :  expected  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(1);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(1);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	9	None	replace
4	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length);  [CE]  :  expected  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.length);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	9	None	replace
5	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size());  [CE]  :  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(formatHeader.size());	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	9	None	replace
6	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(2);  [CE]  :  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(2);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(2);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	9	None	replace
7	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  +  1);  [CE]  :  expected  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  +  1);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  +  1);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
8	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  -  1);  [CE]  :  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  -  1);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  -  1);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
9	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.values());  [CE]  :  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.values());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.values());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
10	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size());  [CE]  :  expected  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.size());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
11	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  *  2);  [CE]  :  expected  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  *  2);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  *  2);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
12	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  -  2);  [CE]  :  expected  [FE]                          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  -  2);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.size()  -  2);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
13	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size());  [CE]  :  expected  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.size());	  hdrMap    =    new    LinkedList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	8	None	replace
14	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader);  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader);	  hdrMap    =    new    LinkedList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	8	None	replace
15	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.length);  [CE]  :  expected  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.length);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(formatHeader.length);	  hdrMap    =    new    LinkedList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	8	None	replace
16	[BUG]  [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(1);  [CE]  :  expected  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedList  <  String,  Integer>(1);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedList  <  String,  Integer>(1);	  hdrMap    =    new    LinkedList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	8	None	replace
17	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  +  1);  [CE]  :  expected  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  +  1);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  +  1);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
18	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  -  1);  [CE]  :  expected  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  -  1);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  -  1);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
19	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length);  [CE]  :  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader.length);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
20	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  2);  [CE]  :  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  2);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  *  2);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
21	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  +  2);  [CE]  :  expected  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  +  2);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.length  +  2);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
22	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader);  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	2	None	replace
23	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length);  [CE]  :  expected  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.length);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	2	None	replace
24	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(1);  [CE]  :  expected  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(1);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(1);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	2	None	replace
25	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size());  [CE]  :  expected  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.size());	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	2	None	replace
26	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(0);  [CE]  :  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(0);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(0);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	2	None	replace
27	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(2);  [CE]  :  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(2);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(2);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	2	None	replace
28	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader);  [CE]  :  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader);	  hdrMap    =    new    TreeMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	6	None	replace
29	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length);  [CE]  :  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.length);	  hdrMap    =    new    TreeMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	6	None	replace
30	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(1);  [CE]  :  expected  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(1);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(1);	  hdrMap    =    new    TreeMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	6	None	replace
31	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size());  [CE]  :  expected  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.size());	  hdrMap    =    new    TreeMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	6	None	replace
32	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(0);  [CE]  :  expected  [FE]                          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(0);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(0);	  hdrMap    =    new    TreeMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	6	None	replace
33	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.values());  [CE]  :  expected  [FE]                            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.values());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(formatHeader.values());	  hdrMap    =    new    TreeMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	6	None	replace
34	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getSkipHeaderRecord());  [CE]  :  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getSkipHeaderRecord());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getSkipHeaderRecord());	      	non-compiled	[CE]  :  expected	7	None	replace
35	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(initializeHeader());  [CE]  :  expected  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(initializeHeader());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(initializeHeader());	      	non-compiled	[CE]  :  expected	7	None	replace
36	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getHeader());  [CE]  :  expected  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getHeader());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(this.format.getHeader());	      	non-compiled	[CE]  :  expected	7	None	replace
37	[BUG]  [BUGGY]  String[]  formatHeader  =  this.format.getSkipHeaderRecord();  [CE]  :  expected  [FE]                          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  String[]  formatHeader  =  this.format.getSkipHeaderRecord();  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	String[]  formatHeader  =  this.format.getSkipHeaderRecord();	      	non-compiled	[CE]  :  expected	7	None	replace
38	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(record);  [CE]  :  expected  [FE]                            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(record);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(record);	      	non-compiled	[CE]  :  expected	7	None	replace
39	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0]);  [CE]  :  expected  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0]);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader[0]);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	1	None	replace
40	[BUG]  [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader);  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayList  <  String,  Integer>(formatHeader);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	1	None	replace
41	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.clone();  [CE]  :  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.clone();  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.clone();	      	non-compiled	[CE]  :  expected	7	None	replace
42	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(initializeHeader());  [CE]  :  expected  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(initializeHeader());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(initializeHeader());	      	non-compiled	[CE]  :  expected	7	None	replace
43	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader);  [CE]  :  expected  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(formatHeader);	      	non-compiled	[CE]  :  expected	7	None	replace
44	[BUG]  [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>());  [CE]  :  expected  [FE]                          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HtmlMap  <  String,  Integer>)hdrMap.get(new  HashMap  <  String,  Integer>());	      	non-compiled	[CE]  :  expected	7	None	replace
45	[BUG]  [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.keySet());  [CE]  :  expected  [FE]                AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.keySet());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  LinkedHashMap  <  String,  Integer>(formatHeader.keySet());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
46	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.size());  [CE]  :  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.size());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.size());	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.size());    	non-compiled	[CE]  :  expected	5	None	replace
47	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(8);  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(8);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(8);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	9	None	replace
48	[BUG]  [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(4);  [CE]  :  expected  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(4);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  java.util.ArrayList  <  String,  Integer>(4);	  hdrMap    =    new    java.util.ArrayList    <    String,    Integer>();    	non-compiled	[CE]  :  expected	9	None	replace
49	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length);  [CE]  :  expected  [FE]              AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader.length);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader.length);    	non-compiled	[CE]  :  expected	4	None	replace
50	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(8);  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(8);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(8);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	2	None	replace
51	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(4);  [CE]  :  expected  [FE]            AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(4);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(4);	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	2	None	replace
52	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(2);  [CE]  :  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(2);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(2);	  hdrMap    =    new    TreeMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	6	None	replace
53	[BUG]  [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader);  [CE]  :  expected  [FE]        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  ArrayHashMap  <  String,  Integer>(formatHeader);	  hdrMap    =    new    LinkedHashMap    <    String,    Integer>(formatHeader);    	non-compiled	[CE]  :  expected	1	None	replace
54	[BUG]  [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(4);  [CE]  :  expected  [FE]                  AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  TreeMap  <  String,  Integer>(4);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  TreeMap  <  String,  Integer>(4);	  hdrMap    =    new    TreeMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	6	None	replace
55	[BUG]  [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.values());  [CE]  :  expected  [FE]          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.values());  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  new  HashMap  <  String,  Integer>(formatHeader.values());	  hdrMap    =    new    HashMap    <    String,    Integer>();    	non-compiled	[CE]  :  expected	2	None	replace
56	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.clone();  [CE]  :  expected  [FE]                    AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.clone();  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)hdrMap.clone();	      	non-compiled	[CE]  :  expected	7	None	replace
57	[BUG]  [BUGGY]  hdrMap  =  hdrMap.get(formatHeader);  [CE]  :  expected  [FE]                      AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =  hdrMap.get(formatHeader);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =  hdrMap.get(formatHeader);	      	non-compiled	[CE]  :  expected	7	None	replace
58	[BUG]  [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(formatHeader);  [CE]  :  expected  [FE]                        AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(formatHeader);  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(HashMap  <  String,  Integer>)hdrMap.get(formatHeader);	      	non-compiled	[CE]  :  expected	7	None	replace
59	[BUG]  [BUGGY]  hdrMap  =(Map  <  String,  Integer>)hdrMap.clone();  [CE]  :  expected  [FE]                          AssertionError    [CONTEXT]    private  Map<String,  Integer>  initializeHeader()  throws  IOException  {  Map<String,  Integer>  hdrMap  =  null;  final  String[]  formatHeader  =  this.format.getHeader();  if  (formatHeader  !=  null)  {    [BUGGY]  hdrMap  =(Map  <  String,  Integer>)hdrMap.clone();  [BUGGY]      String[]  header  =  null;  if  (formatHeader.length  ==  0)  {  final  CSVRecord  nextRecord  =  this.nextRecord();  if  (nextRecord  !=  null)  {  header  =  nextRecord.values();  }  }  else  {  if  (this.format.getSkipHeaderRecord())  {  [CLASS]  CSVParser  1  [METHOD]  initializeHeader  [RETURN_TYPE]  Map  [VARIABLES]  Lexer  lexer  boolean  CSVFormat  format  List  record  Token  reusableToken  CSVRecord  current  nextRecord  rec  String[]  formatHeader  header  Map  hdrMap  headerMap  long  recordNumber  int  i  	projects/Csv7/src/main/java/org/apache/commons/csv/CSVParser.java	0.31622776601683794	352	352	1	replace	hdrMap  =(Map  <  String,  Integer>)hdrMap.clone();	      	non-compiled	[CE]  :  expected	7	None	replace
