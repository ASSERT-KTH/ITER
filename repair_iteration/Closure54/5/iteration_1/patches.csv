bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ").trim();  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ").trim();  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ").trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,       "thisType   ").trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	9	None	replace
2	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),   "thisType ").trim();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),   "thisType ").trim();  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),   "thisType ").trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name).trim();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name).trim();  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name).trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,       "thisType   ").trim();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
4	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)  [FE]          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)	3	None	replace
5	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTypeOfThis());  [CE]  no  suitable  method  found  for  newString(int,String,ObjectType)  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTypeOfThis());  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,ObjectType)	3	None	replace
6	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,String)  [FE]              ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,String)	3	None	replace
7	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)	3	None	replace
8	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params,  getTypeOfThis());  [CE]  no  suitable  method  found  for  newString(int,Node,ObjectType)  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params,  getTypeOfThis());  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params,  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,ObjectType)	3	None	replace
9	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  1);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	replace
10	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName());  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
11	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	2	None	replace
12	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params);  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	2	None	replace
13	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    timeout    	compilable	timeout	2	1	replace
14	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  timeout  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    timeout    	compilable	timeout	2	1	replace
15	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  source);  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]              ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  source);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	2	None	replace
16	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getName());  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getName());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
17	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params);  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    timeout    	non-compiled	[CE]  ';'  expected	2	None	replace
18	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType   ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	6	None	add
19	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType   ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	6	None	add
20	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType   ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	6	None	add
21	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType   ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	6	None	add
22	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  null);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  null);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  null);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	6	None	add
23	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	1	None	add
24	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	1	None	add
25	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	1	None	add
26	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params)).build(),  source);  }  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params)).build(),  source);  }  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params)).build(),  source);  }	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
27	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  params.addChildToFront(thisTypeNode);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  params.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  params.addChildToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	1	None	add
28	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params)  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params)  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params)	  timeout    	non-compiled	[CE]  	1	None	add
29	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params).withReturnType(getReturnType())  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params).withReturnType(getReturnType())  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params).withReturnType(getReturnType())	  timeout    	non-compiled	[CE]  	1	None	add
30	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	1	None	add
31	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
32	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType ");  timeout  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
33	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
34	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ");  timeout  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
35	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  params);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	7	None	replace
36	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "- ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "- ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
37	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "- ");  timeout  [FE]                      ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "- ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "- ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
38	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
39	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type ");  timeout  [FE]                        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
40	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
41	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ");  timeout  [FE]                          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
42	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params, "thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,Node,String)  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params, "thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params, "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,   "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String)	4	None	replace
43	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  params);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]              ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  params);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,   "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	4	None	replace
44	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,   "thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,Node,String)  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,   "thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,   "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,   "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String)	4	None	replace
45	[BUG]  [BUGGY]  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);	      	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	8	None	replace
46	[BUG]  [BUGGY]  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  thisTypeNode  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	      	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	8	None	replace
47	[BUG]  [BUGGY]  params.addChildToFront(params);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  thisTypeNode  [FE]                      ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  params.addChildToFront(params);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(params);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	      	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	8	None	replace
48	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastParam();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  lastParam  =  params.getLastParam();  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.getLastParam();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
49	[BUG]  [BUGGY]  Node  lastParam  =  params.next();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  lastParam  =  params.next();  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.next();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
50	[BUG]  [BUGGY]  params.addChildToFront(params);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  params.addChildToFront(params);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(params);	      	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	8	None	replace
51	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name);  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    DEFAULT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
52	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.typeOfThis);  [CE]  cannot  find  symbol  typeOfThis  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.typeOfThis);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.typeOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    DEFAULT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typeOfThis	5	None	replace
53	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.length);  [CE]  cannot  find  symbol  length  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.length);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.length);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    DEFAULT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  length	5	None	replace
54	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  paramNode  =  Node.newString(Token.NAME,  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  paramNode  =  Node.newString(Token.NAME,  name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  paramNode  =  Node.newString(Token.NAME,  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	1	None	add
55	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  itTypeNode  =  Node.newString(Token.NAME,  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  itTypeNode  =  Node.newString(Token.NAME,  name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  itTypeNode  =  Node.newString(Token.NAME,  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	1	None	add
56	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	1	None	add
57	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name));  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name));  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name));	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
58	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  null,   "thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,<null>,String)  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  null,   "thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  null,   "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,   "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,<null>,String)	4	None	replace
59	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis());  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
60	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis());  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
61	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	compilable	timeout	3	1	replace
62	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  timeout  [FE]              ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	compilable	timeout	3	1	replace
63	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  thisType.trim();  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  thisType.trim();  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  thisType.trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,       "thisType   ").trim();    	non-compiled	[CE]  ';'  expected	9	None	replace
64	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ",  name).trim();  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ",  name).trim();  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ",  name).trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,       "thisType   ").trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	9	None	replace
65	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  false);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  false);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  false);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	6	None	add
66	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
67	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ");  timeout  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
68	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
69	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ");  timeout  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
70	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  source);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  source);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	7	None	replace
71	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
72	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ");  timeout  [FE]                      ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
73	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
74	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType ");  timeout  [FE]                        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
75	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	2	None	replace
76	[BUG]  [BUGGY]  params.addChildToFront(source);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  thisTypeNode  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  params.addChildToFront(source);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(source);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	      	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	8	None	replace
77	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  lastParam  =  params.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
78	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ", ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ", ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    timeout    	compilable	timeout	2	1	replace
79	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ", ");  timeout  [FE]        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ", ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ", ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    timeout    	compilable	timeout	2	1	replace
80	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType());  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    DEFAULT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
81	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  title);  [CE]  cannot  find  symbol  title  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  title);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  title);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    DEFAULT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  title	5	None	replace
82	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastChild();  [CE]  cannot  find  symbol  thisTypeNode  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  lastParam  =  params.getLastChild();  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.getLastChild();	      	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	8	None	replace
83	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  params.getFirstChild();	      	compilable	timeout	8	1	replace
84	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  timeout  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  params.getFirstChild();	      	compilable	timeout	8	1	replace
85	[BUG]  [BUGGY]  n.addChildToFront(params);  [CE]  cannot  find  symbol  n  [FE]                      ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  n.addChildToFront(params);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	n.addChildToFront(params);	      	non-compiled	[CE]  cannot  find  symbol  n	8	None	replace
86	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params, "thisType ",  thisType);  [CE]  cannot  find  symbol  thisType  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params, "thisType ",  thisType);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params, "thisType ",  thisType);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,   "thisType   ");    	non-compiled	[CE]  cannot  find  symbol  thisType	4	None	replace
87	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
88	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ");  timeout  [FE]                ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
89	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
90	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ");  timeout  [FE]                  ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
91	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype. ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype. ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
92	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype. ");  timeout  [FE]                    ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype. ");  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype. ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ");    timeout    	compilable	timeout	7	1	replace
93	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.LAME,  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]        ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.LAME,  name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.LAME,  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	1	None	add
94	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIG,  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]          ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIG,  name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  thisTypeNode  =  Node.newString(Token.SIG,  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	1	None	add
95	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  params  =  Node.newString(Token.NAME,  name);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]            ComparisonFailure    [CONTEXT]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  params  =  Node.newString(Token.NAME,  name);  [BUGGY]    thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node  params  =  Node.newString(Token.NAME,  name);	  timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	1	None	add
