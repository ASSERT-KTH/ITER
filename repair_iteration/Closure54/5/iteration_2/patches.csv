bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  params  =  params.cloneTree();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  params  =  params.cloneTree();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  params  =  params.cloneTree();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params).withReturnType(getReturnType())    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	29	None	replace
2	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.BLOCK,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.BLOCK,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params).withReturnType(getReturnType())    	compilable	timeout	29	1	replace
3	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.BLOCK,  name);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.BLOCK,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.BLOCK,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params).withReturnType(getReturnType())    	compilable	timeout	29	1	replace
4	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name, "thisType ",  name).trim();  [CE]  no  suitable  method  found  for  newString(int,String,String,String)  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name, "thisType ",  name).trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name, "thisType ",  name).trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,       "thisType   ",    name).trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,String)	64	None	replace
5	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name, "thisType ",  params).trim();  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name, "thisType ",  params).trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name, "thisType ",  params).trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,       "thisType   ",    name).trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	64	None	replace
6	[BUG]  [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  params  =  Node.newString(Token.NAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    params    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	95	None	replace
7	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  params  =  Node.newString(Token.NAME,  params);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  params  =  Node.newString(Token.NAME,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  params  =  Node.newString(Token.NAME,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    params    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	95	None	replace
8	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  params  =  Node.newString(Token.NAME,  source);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  params  =  Node.newString(Token.NAME,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  params  =  Node.newString(Token.NAME,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    params    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	95	None	replace
9	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  params  =  Node.newString(Token.NAME,  name);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  params  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  params  =  Node.newString(Token.NAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    params    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	95	None	replace
10	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_ ");  Node  params  =  Node.newString(Token.NAME,  name);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_ ");  Node  params  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_ ");  Node  params  =  Node.newString(Token.NAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    params    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	95	None	replace
11	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name));    	non-compiled	[CE]  ';'  expected	57	None	replace
12	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params));  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name));    	non-compiled	[CE]  ';'  expected	57	None	replace
13	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name));    	non-compiled	[CE]  ';'  expected	57	None	replace
14	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  source));  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  source));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  source));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name));    	non-compiled	[CE]  ';'  expected	57	None	replace
15	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name).toString();  [CE]  incompatible  types  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name).toString();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name).toString();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name));    	non-compiled	[CE]  incompatible  types	57	None	replace
16	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params, "thisType ").trim();  [CE]  no  suitable  method  found  for  newString(int,String,Node,String)  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params, "thisType ").trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params, "thisType ").trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ").trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String)	1	None	replace
17	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,   "thisType ").trim();  [CE]  no  suitable  method  found  for  newString(int,String,Node,String)  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,   "thisType ").trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,   "thisType ").trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ").trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String)	1	None	replace
18	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ").trim(),  params);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ").trim(),  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ").trim(),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ").trim();    	non-compiled	[CE]  	1	None	replace
19	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "-thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "-thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    timeout    	compilable	timeout	72	1	replace
20	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "-thisType ");  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "-thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "-thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    timeout    	compilable	timeout	72	1	replace
21	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	72	None	replace
22	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "-thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "-thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    timeout    	compilable	timeout	72	1	replace
23	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "-thisType ");  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "-thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "-thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    timeout    	compilable	timeout	72	1	replace
24	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ")thisType       ");    	compilable	timeout	21	1	replace
25	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ");  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ")thisType       ");    	compilable	timeout	21	1	replace
26	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ",  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ",  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ",  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ")thisType       ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	21	None	replace
27	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ".getJSType());  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ".getJSType());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType ".getJSType());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ")thisType       ");    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
28	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   ")thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   ")thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ")thisType       ");    	compilable	timeout	21	1	replace
29	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   ")thisType ");  timeout  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   ")thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   ")thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ")thisType       ");    	compilable	timeout	21	1	replace
30	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType. ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType. ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ")thisType       ");    	compilable	timeout	21	1	replace
31	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType. ");  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType. ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")thisType. ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ")thisType       ");    	compilable	timeout	21	1	replace
32	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	87	None	add
33	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",.prototype   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",.prototype   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",.prototype   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	87	None	add
34	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ").prototype   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ").prototype   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ").prototype   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	87	None	add
35	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",  false);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",  false);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",  false);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	87	None	add
36	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	33	None	add
37	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ".);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ".);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ".);	  timeout    	non-compiled	[CE]  <identifier>  expected	33	None	add
38	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".: ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".: ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".: ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	33	None	add
39	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":. ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":. ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":. ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	33	None	add
40	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",:   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",:   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",:   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	33	None	add
41	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":  ' ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":  ' ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":  ' ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	33	None	add
42	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,   "thisType ",  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node,String,Node)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,   "thisType ",  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,   "thisType ",  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ",    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String,Node)	43	None	replace
43	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  params,  typeOfThis);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node,ObjectType)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  params,  typeOfThis);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  params,  typeOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ",    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node,ObjectType)	43	None	replace
44	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType "  +  name,  params);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType "  +  name,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType "  +  name,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ",    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	43	None	replace
45	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  typeOfThis);  [CE]  no  suitable  method  found  for  newString(int,String,Node,ObjectType)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  typeOfThis);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  typeOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ",    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,ObjectType)	43	None	replace
46	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  params,  source);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node,Node)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  params,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  params,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ",    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node,Node)	43	None	replace
47	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ",  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ",  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ",  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	35	None	replace
48	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  params,  typeOfThis);  [CE]  no  suitable  method  found  for  newString(int,String,Node,ObjectType)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  params,  typeOfThis);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  params,  typeOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,ObjectType)	35	None	replace
49	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  params,  source);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  params,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  params,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node)	35	None	replace
50	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  n,  params);  [CE]  cannot  find  symbol  n  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  n,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  n,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    params);    	non-compiled	[CE]  cannot  find  symbol  n	35	None	replace
51	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  source,  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node)  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  source,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  source,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node)	35	None	replace
52	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "_thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "_thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    timeout    	compilable	timeout	41	1	replace
53	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "_thisType ");  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "_thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "_thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    timeout    	compilable	timeout	41	1	replace
54	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "_thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "_thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    timeout    	compilable	timeout	41	1	replace
55	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "_thisType ");  timeout  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "_thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "_thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    timeout    	compilable	timeout	41	1	replace
56	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ",  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ",  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ",  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	41	None	replace
57	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/_thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/_thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    timeout    	compilable	timeout	41	1	replace
58	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/_thisType ");  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/_thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/_thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    timeout    	compilable	timeout	41	1	replace
59	[BUG]  [BUGGY]  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "._thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "._thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    timeout    	compilable	timeout	41	1	replace
60	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "._thisType ");  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "._thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "._thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    timeout    	compilable	timeout	41	1	replace
61	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ",  source);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ",  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ",  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	41	None	replace
62	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getName(),  params);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getName(),  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getName(),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
63	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getName(),  name);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getName(),  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getName(),  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
64	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getName(),  source);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getName(),  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getName(),  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
65	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getName());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getName());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getName());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
66	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  lastParam,  source);  [CE]  cannot  find  symbol  lastParam  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  lastParam,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  lastParam,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    source);    	non-compiled	[CE]  cannot  find  symbol  lastParam	15	None	replace
67	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  n,  source);  [CE]  cannot  find  symbol  n  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  n,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  n,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    source);    	non-compiled	[CE]  cannot  find  symbol  n	15	None	replace
68	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  source,  params);  [CE]  no  suitable  method  found  for  newString(int,Node,Node)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  source,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  source,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    source);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,Node)	15	None	replace
69	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params,  source);  [CE]  no  suitable  method  found  for  newString(int,Node,Node)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    source);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,Node)	15	None	replace
70	[BUG]  [BUGGY]  ThisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  ThisTypeNode  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  ThisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	ThisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  ThisTypeNode	25	None	replace
71	[BUG]  [BUGGY]  Node  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  ';'  expected	25	None	replace
72	[BUG]  [BUGGY]  thisTypeNode.setJSType(Registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  Registry  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(Registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(Registry.createOptionalNullableType(getTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  Registry	25	None	replace
73	[BUG]  [BUGGY]  params.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  thisTypeNode  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	25	None	replace
74	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type   ",  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type   ",  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type   ",  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    source);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	70	None	replace
75	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  params: ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  params: ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    timeout    	compilable	timeout	34	1	replace
76	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  params: ");  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  params: ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  params: ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    timeout    	compilable	timeout	34	1	replace
77	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  source: ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  source: ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    timeout    	compilable	timeout	34	1	replace
78	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  source: ");  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  source: ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  source: ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    timeout    	compilable	timeout	34	1	replace
79	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ": ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ": ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    timeout    	compilable	timeout	34	1	replace
80	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ": ");  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ": ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ": ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    timeout    	compilable	timeout	34	1	replace
81	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":n ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":n ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    timeout    	compilable	timeout	34	1	replace
82	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":n ");  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":n ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":n ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    timeout    	compilable	timeout	34	1	replace
83	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis(),  params);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis(),  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis(),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
84	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis(),  name);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis(),  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis(),  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
85	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getJSTypeOfThis());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getJSTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getJSTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
86	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis()));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSTypeOfThis());    	non-compiled	[CE]  ';'  expected	60	None	replace
87	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getJSTypeOfThis());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getJSTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getJSTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
88	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  source);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node)  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node)	75	None	replace
89	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node)  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node)	75	None	replace
90	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  n,  source);  [CE]  cannot  find  symbol  n  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  n,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  n,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source);    	non-compiled	[CE]  cannot  find  symbol  n	75	None	replace
91	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  lastParam,  source);  [CE]  cannot  find  symbol  lastParam  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  lastParam,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  lastParam,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source);    	non-compiled	[CE]  cannot  find  symbol  lastParam	75	None	replace
92	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params,  name);  [CE]  no  suitable  method  found  for  newString(int,Node,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,String)	75	None	replace
93	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  source,  name);  [CE]  no  suitable  method  found  for  newString(int,Node,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  source,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  source,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,String)	75	None	replace
94	[BUG]  [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  name);  [CE]  cannot  find  symbol  thisTypeNode  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  paramNode  =  Node.newString(Token.NAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    paramNode    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	54	None	replace
95	[BUG]  [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  name));  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  name));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  paramNode  =  Node.newString(Token.NAME,  name));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    paramNode    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  ';'  expected	54	None	replace
96	[BUG]  [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  source);  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  paramNode  =  Node.newString(Token.NAME,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    paramNode    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	54	None	replace
97	[BUG]  [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  name  +  1);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  name  +  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  paramNode  =  Node.newString(Token.NAME,  name  +  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    paramNode    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	54	None	replace
98	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  null);  [CE]  no  suitable  method  found  for  newString(int,String,<null>)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  null);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  null);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    null);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,<null>)	22	None	replace
99	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ", "null ");  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ", "null ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ", "null ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    null);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	22	None	replace
100	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  thisType ",  null);  [CE]  no  suitable  method  found  for  newString(int,String,<null>)  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  thisType ",  null);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  thisType ",  null);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    null);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,<null>)	22	None	replace
101	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  getTypeOfThis());  [CE]  no  suitable  method  found  for  newString(int,String,Node,ObjectType)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,ObjectType)	8	None	replace
102	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  params,  getTypeOfThis());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  params,  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  params,  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
103	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getSourceName(),  params,  getTypeOfThis());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getSourceName(),  params,  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getSourceName(),  params,  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
104	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis(),  params);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis(),  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis(),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
105	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)).build(),    source);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
106	[BUG]  [BUGGY]  if(params  ==  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params  ==  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params  ==  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)).build(),    source);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
107	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParam  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParam  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParam	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)).build(),    source);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
108	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParams  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParams  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParams	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)).build(),    source);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
109	[BUG]  [BUGGY]  if(params  ==  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParam  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params  ==  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParam  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params  ==  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParam	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)).build(),    source);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
110	[BUG]  [BUGGY]  if(params  ==  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParams  [CE]  ')'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params  ==  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParams  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params  ==  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParams	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)).build(),    source);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
111	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",thisType   ");    timeout    	compilable	timeout	69	1	replace
112	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",thisType ");  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",thisType   ");    timeout    	compilable	timeout	69	1	replace
113	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	61	None	add
114	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  params.addChildToFront(thisTypeNode);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  params.addChildToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	61	None	add
115	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  params  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  params  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    Node  params  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);	  timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	61	None	add
116	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  thisTypeNode  =  Node.newString(Token.BLOCK,  getTypeOfThis()  +  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  thisTypeNode  =  Node.newString(Token.BLOCK,  getTypeOfThis()  +  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    Node  thisTypeNode  =  Node.newString(Token.BLOCK,  getTypeOfThis()  +  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	61	None	add
117	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  paramsNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  paramsNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    Node  paramsNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	61	None	add
118	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "- ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "- ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-   ");    timeout    	compilable	timeout	37	1	replace
119	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "- ");  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "- ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "- ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-   ");    timeout    	compilable	timeout	37	1	replace
120	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  params);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
121	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getPropertyName());  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getPropertyName());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getPropertyName());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
122	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getSourceName());  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getSourceName());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getSourceName());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
123	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  name);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
124	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getReferenceName());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  getReferenceName());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getPropertyName());    	compilable	timeout	10	1	replace
125	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getReferenceName());  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getReferenceName());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getReferenceName());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getPropertyName());    	compilable	timeout	10	1	replace
126	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	73	None	add
127	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")/thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")/thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")/thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	73	None	add
128	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",/thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",/thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",/thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	73	None	add
129	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "./thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "./thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "./thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	73	None	add
130	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType   "));  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType   "));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType   "));	  timeout    	non-compiled	[CE]  	73	None	add
131	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params, "thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params, "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params, "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source,       "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node,String)	44	None	replace
132	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  source,   "thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  source,   "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  source,   "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source,       "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node,String)	44	None	replace
133	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params, ",thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node,String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params, ",thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params, ",thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source,       "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node,String)	44	None	replace
134	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params,  typeOfThis);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node,ObjectType)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params,  typeOfThis);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  params,  typeOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source,       "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node,ObjectType)	44	None	replace
135	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  paramsName);  [CE]  cannot  find  symbol  paramsName  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  paramsName);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  paramsName);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    title);    	non-compiled	[CE]  cannot  find  symbol  paramsName	81	None	replace
136	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  paramName);  [CE]  cannot  find  symbol  paramName  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  paramName);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  paramName);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    title);    	non-compiled	[CE]  cannot  find  symbol  paramName	81	None	replace
137	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  params.addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    params.addChildToFront(thisTypeNode);    	compilable	timeout	27	1	replace
138	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  params.addChildToFront(thisTypeNode);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  params.addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    params.addChildToFront(thisTypeNode);    	compilable	timeout	27	1	replace
139	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.addChildToFront(thisTypeNode);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  ';'  expected	27	None	replace
140	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  params.addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    params.addChildToFront(thisTypeNode);    	compilable	timeout	27	1	replace
141	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  params.addChildToFront(thisTypeNode);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  params.addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    params.addChildToFront(thisTypeNode);    	compilable	timeout	27	1	replace
142	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ");  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ");  params.addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    params.addChildToFront(thisTypeNode);    	compilable	timeout	27	1	replace
143	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ");  params.addChildToFront(thisTypeNode);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ");  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ": ");  params.addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    params.addChildToFront(thisTypeNode);    	compilable	timeout	27	1	replace
144	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "_thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "_thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	40	None	add
145	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "_thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",_thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "_thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",_thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",_thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	40	None	add
146	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "_thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "._thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "_thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "._thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "._thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	40	None	add
147	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "_thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")_thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "_thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")_thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")_thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	40	None	add
148	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "_thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ",  false);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "_thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ",  false);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "_thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "_thisType ",  false);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	40	None	add
149	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    params    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	31	None	add
150	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    params    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	31	None	add
151	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ".thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ".thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    params    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ".thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	31	None	add
152	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ")thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ")thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    params    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ")thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	31	None	add
153	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  params  =  Node.newString(Token.NAME,  params  + "thisType   ");  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  params  =  Node.newString(Token.NAME,  params  + "thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    params    +   "thisType   ");    Node  params  =  Node.newString(Token.NAME,  params  + "thisType   ");	  timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	31	None	add
154	[BUG]  [BUGGY]  Node  lastParam  =  n.getLastParam();  [CE]  cannot  find  symbol  n  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  n.getLastParam();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  n.getLastParam();	  Node    lastParam    =    params.getLastParam();    	non-compiled	[CE]  cannot  find  symbol  n	48	None	replace
155	[BUG]  [BUGGY]  Node  lastParam  =  params.next().getLastParam();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.next().getLastParam();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.next().getLastParam();	  Node    lastParam    =    params.getLastParam();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
156	[BUG]  [BUGGY]  Node  lastParam  =  params.getFirstParam();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.getFirstParam();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.getFirstParam();	  Node    lastParam    =    params.getLastParam();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
157	[BUG]  [BUGGY]  Node  lastParam  =  params.lastParam();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.lastParam();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.lastParam();	  Node    lastParam    =    params.getLastParam();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
158	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params.cloneTree());  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params.cloneTree());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params.cloneTree());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)	9	None	replace
159	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params.typeOfThis());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params.typeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params.typeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    1);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
160	[BUG]  [BUGGY]  Node  lastParam  =  n.next();  [CE]  cannot  find  symbol  n  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  n.next();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  n.next();	  Node    lastParam    =    params.next();    	non-compiled	[CE]  cannot  find  symbol  n	49	None	replace
161	[BUG]  [BUGGY]  Node  lastParam  =  params.nextTree();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.nextTree();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.nextTree();	  Node    lastParam    =    params.next();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
162	[BUG]  [BUGGY]  Node  lastParam  =  params.nextToken();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.nextToken();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.nextToken();	  Node    lastParam    =    params.next();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
163	[BUG]  [BUGGY]  Node  lastParam  =  params.next(),  source);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.next(),  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.next(),  source);	  Node    lastParam    =    params.next();    	non-compiled	[CE]  ';'  expected	49	None	replace
164	[BUG]  [BUGGY]  Node  lastParam  =  params.previous();  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.previous();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.previous();	  Node    lastParam    =    params.next();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
165	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  compiler);  [CE]  cannot  find  symbol  compiler  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  compiler);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  compiler);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params);    	non-compiled	[CE]  cannot  find  symbol  compiler	11	None	replace
166	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  n,  params);  [CE]  cannot  find  symbol  n  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  n,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  n,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params);    	non-compiled	[CE]  cannot  find  symbol  n	11	None	replace
167	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  declaration);  [CE]  cannot  find  symbol  declaration  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  declaration);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  declaration);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params);    	non-compiled	[CE]  cannot  find  symbol  declaration	11	None	replace
168	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  n);  [CE]  cannot  find  symbol  n  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  n);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  n);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params);    	non-compiled	[CE]  cannot  find  symbol  n	11	None	replace
169	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	71	None	add
170	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",-thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",-thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",-thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	71	None	add
171	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".-thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".-thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".-thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	71	None	add
172	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType   "));  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType   "));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType   "));	  timeout    	non-compiled	[CE]  	71	None	add
173	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  null);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  null);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  null);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	71	None	add
174	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    timeout    	compilable	timeout	79	1	replace
175	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",   ");  timeout  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    timeout    	compilable	timeout	79	1	replace
176	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  params ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  params ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    timeout    	compilable	timeout	79	1	replace
177	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  params ");  timeout  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  params ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  params ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    timeout    	compilable	timeout	79	1	replace
178	[BUG]  [BUGGY]  Node  params  =  registry.createOptionalNullableType(getTypeOfThis()));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  params  =  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  params  =  registry.createOptionalNullableType(getTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)    	non-compiled	[CE]  ';'  expected	28	None	replace
179	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getLastChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  params.getLastChild();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	compilable	timeout	84	1	replace
180	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getLastChild();  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getLastChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  params.getLastChild();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	compilable	timeout	84	1	replace
181	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.cloneTree();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  params.cloneTree();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	compilable	timeout	84	1	replace
182	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.cloneTree();  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.cloneTree();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  params.cloneTree();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	compilable	timeout	84	1	replace
183	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.next();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.next();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  params.next();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
184	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getNext();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  params.getNext();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	compilable	timeout	84	1	replace
185	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getNext();  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getNext();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  params.getNext();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	compilable	timeout	84	1	replace
186	[BUG]  [BUGGY]  Node  thisTypeNode  =  n.getFirstChild();  [CE]  cannot  find  symbol  n  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  n.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  n.getFirstChild();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol  n	84	None	replace
187	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  source,   "thisType ",  thisType);  [CE]  cannot  find  symbol  thisType  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  source,   "thisType ",  thisType);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  source,   "thisType ",  thisType);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params,   "thisType   ",    thisType);    	non-compiled	[CE]  cannot  find  symbol  thisType	86	None	replace
188	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,   "thisType ",  source);  [CE]  no  suitable  method  found  for  newString(int,String,Node,String,Node)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,   "thisType ",  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,   "thisType ",  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params,   "thisType   ",    thisType);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String,Node)	86	None	replace
189	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,   "type ",  thisType);  [CE]  cannot  find  symbol  thisType  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,   "type ",  thisType);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,   "type ",  thisType);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params,   "thisType   ",    thisType);    	non-compiled	[CE]  cannot  find  symbol  thisType	86	None	replace
190	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,   "thisType ",  typeOfThis);  [CE]  no  suitable  method  found  for  newString(int,String,Node,String,ObjectType)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,   "thisType ",  typeOfThis);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,   "thisType ",  typeOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params,   "thisType   ",    thisType);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String,ObjectType)	86	None	replace
191	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  name);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node,String)  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node,String)	4	None	replace
192	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source,  params);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node,Node)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node,Node)	4	None	replace
193	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name,  params);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,String,Node)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,String,Node)	4	None	replace
194	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  typeOfThis);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node,ObjectType)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  typeOfThis);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  typeOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node,ObjectType)	4	None	replace
195	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  source);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node,Node)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node,Node)	4	None	replace
196	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTypeOfThis(),  params);  [CE]  no  suitable  method  found  for  newString(int,String,ObjectType,Node)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTypeOfThis(),  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTypeOfThis(),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,ObjectType,Node)	4	None	replace
197	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	89	None	add
198	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",ThisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",ThisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",ThisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	89	None	add
199	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")ThisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")ThisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")ThisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	89	None	add
200	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".ThisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".ThisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".ThisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	89	None	add
201	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  false);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  false);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  false);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	89	None	add
202	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIG,  name);  [CE]  cannot  find  symbol  SIG  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIG,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIG,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIG,    name);    	non-compiled	[CE]  cannot  find  symbol  SIG	94	None	replace
203	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIG,  params);  [CE]  cannot  find  symbol  SIG  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIG,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIG,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIG,    name);    	non-compiled	[CE]  cannot  find  symbol  SIG	94	None	replace
204	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIG,  name));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIG,  name));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIG,  name));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIG,    name);    	non-compiled	[CE]  ';'  expected	94	None	replace
205	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType   ");    timeout    	compilable	timeout	67	1	replace
206	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.thisType ");  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType   ");    timeout    	compilable	timeout	67	1	replace
207	[BUG]  [BUGGY]  Node  lastParam  =  params.getFirstChild();  [CE]  cannot  find  symbol  thisTypeNode  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.getFirstChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	82	None	replace
208	[BUG]  [BUGGY]  Node  params  =  params.getLastChild();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  params  =  params.getLastChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  params  =  params.getLastChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	82	None	replace
209	[BUG]  [BUGGY]  Node  lastParam  =  n.getLastChild();  [CE]  cannot  find  symbol  n  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  n.getLastChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  n.getLastChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  n	82	None	replace
210	[BUG]  [BUGGY]  Node  lastParam  =  params.lastChild();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.lastChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.lastChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
211	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	36	None	add
212	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".- ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".- ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".- ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	36	None	add
213	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",-   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",-   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",-   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	36	None	add
214	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-  -   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-  -   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-  -   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	36	None	add
215	[BUG]  [BUGGY]  params.addChildToFront(source);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(source);	  params.addChildToFront(params);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	47	None	replace
216	[BUG]  [BUGGY]  params.addChildToBack(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  thisTypeNode  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.addChildToBack(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToBack(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(params);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	47	None	replace
217	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  thisTypeNode  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.addChildToFront(thisTypeNode);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(thisTypeNode);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(params);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	47	None	replace
218	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  source);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    params);    	non-compiled	[CE]  ';'  expected	17	None	replace
219	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  source);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    params);    	non-compiled	[CE]  ';'  expected	17	None	replace
220	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  typeOfThis);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  typeOfThis);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  typeOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    params);    	non-compiled	[CE]  ';'  expected	17	None	replace
221	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  compiler);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  compiler);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  compiler);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    params);    	non-compiled	[CE]  ';'  expected	17	None	replace
222	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params  -  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params  -  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params  -  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    params);    	non-compiled	[CE]  ';'  expected	17	None	replace
223	[BUG]  [BUGGY]  Node  lastParam  =  params.getFirstParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.getFirstParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.getFirstParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));	  Node    lastParam    =    params.getLastParam();    thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
224	[BUG]  [BUGGY]  Node  lastParam  =  params.next();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.next();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.next();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));	  Node    lastParam    =    params.getLastParam();    thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
225	[BUG]  [BUGGY]  Node  lastParam  =  n.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [CE]  cannot  find  symbol  n  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  n.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  n.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));	  Node    lastParam    =    params.getLastParam();    thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));    	non-compiled	[CE]  cannot  find  symbol  n	77	None	replace
226	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastChild();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [CE]  method  createOptionalNullableType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.getLastChild();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.getLastChild();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));	  Node    lastParam    =    params.getLastParam();    thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));    	non-compiled	[CE]  method  createOptionalNullableType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	77	None	replace
227	[BUG]  [BUGGY]  Node  lastParam  =  params.getFirstChild();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [CE]  method  createOptionalNullableType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.getFirstChild();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.getFirstChild();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));	  Node    lastParam    =    params.getLastParam();    thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));    	non-compiled	[CE]  method  createOptionalNullableType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	77	None	replace
228	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastParam(),  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.getLastParam(),  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.getLastParam(),  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));	  Node    lastParam    =    params.getLastParam();    thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));    	non-compiled	[CE]  ';'  expected	77	None	replace
229	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  sources,  params, "thisType ");  [CE]  cannot  find  symbol  sources  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  sources,  params, "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  sources,  params, "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params,   "thisType   ");    	non-compiled	[CE]  cannot  find  symbol  sources	42	None	replace
230	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [CE]  cannot  find  symbol  thisTypeNode  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	24	None	replace
231	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));Params.addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));Params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));Params.addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	24	None	replace
232	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.LAME,  name);  [CE]  cannot  find  symbol  LAME  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.LAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.LAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.LAME,    name);    	non-compiled	[CE]  cannot  find  symbol  LAME	93	None	replace
233	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.LAME,  params);  [CE]  cannot  find  symbol  LAME  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.LAME,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.LAME,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.LAME,    name);    	non-compiled	[CE]  cannot  find  symbol  LAME	93	None	replace
234	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.LAME,  name));  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.LAME,  name));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.LAME,  name));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.LAME,    name);    	non-compiled	[CE]  ';'  expected	93	None	replace
235	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getNameOfThis());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getNameOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getNameOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getNameOfThis());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
236	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis(),  name);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis(),  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis(),  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getNameOfThis());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
237	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis()));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getNameOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getNameOfThis());    	non-compiled	[CE]  ';'  expected	59	None	replace
238	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  false);  [CE]  no  suitable  method  found  for  newString(int,String,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  false);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  false);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean)	65	None	replace
239	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ", "false ");  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ", "false ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ", "false ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	65	None	replace
240	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  thisType   ",  false);  [CE]  no  suitable  method  found  for  newString(int,String,boolean)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  thisType   ",  false);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  thisType   ",  false);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean)	65	None	replace
241	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(thisTypeNode);	  n.addChildToFront(params);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	85	None	replace
242	[BUG]  [BUGGY]  thisTypeNode.addChildToFront(params);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.addChildToFront(params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.addChildToFront(params);	  n.addChildToFront(params);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	85	None	replace
243	[BUG]  [BUGGY]  Node.addChildToFront(params);  [CE]  non-static  method  addChildToFront(Node)  cannot  be  referenced  from  a  static  context  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node.addChildToFront(params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node.addChildToFront(params);	  n.addChildToFront(params);    	non-compiled	[CE]  non-static  method  addChildToFront(Node)  cannot  be  referenced  from  a  static  context	85	None	replace
244	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.prototype ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.prototype ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
245	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.prototype ");  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.prototype ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.prototype ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
246	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-prototype ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-prototype ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
247	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-prototype ");  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-prototype ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-prototype ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
248	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ". ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ". ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
249	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ". ");  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ". ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ". ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
250	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/prototype ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/prototype ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
251	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/prototype ");  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/prototype ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/prototype ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
252	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  prototype   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  prototype   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
253	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  prototype   ");  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  prototype   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  prototype   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
254	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  params);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  params);	  thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	46	None	replace
255	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis(),  params));  [CE]  method  createOptionalNullableType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis(),  params));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis(),  params));	  thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  method  createOptionalNullableType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	46	None	replace
256	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(params));  [CE]  method  createOptionalNullableType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(params));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(params));	  thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  method  createOptionalNullableType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	46	None	replace
257	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getReturnType()));  [CE]  cannot  find  symbol  thisTypeNode  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getReturnType()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getReturnType()));	  thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	46	None	replace
258	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType(),  params);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType(),  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType(),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSType());    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
259	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType(),  name);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType(),  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType(),  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSType());    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
260	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getJSType());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getJSType());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getJSType());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSType());    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
261	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getJSType());  [CE]  no  suitable  method  found  for  newString(int,JSType)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getJSType());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getJSType());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSType());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,JSType)	80	None	replace
262	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType(),  source);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType(),  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType(),  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSType());    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
263	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  name,  getTypeOfThis());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  name,  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  name,  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
264	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  getTypeOfThis());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
265	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getSourceName(),  name,  getTypeOfThis());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getSourceName(),  name,  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getSourceName(),  name,  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
266	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
267	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  params.addChildToFront(thisTypeNode);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  params.addChildToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
268	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
269	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1));	  timeout    	non-compiled	[CE]  ';'  expected	13	None	add
270	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
271	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params)  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params)  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params)	  timeout    	non-compiled	[CE]  	13	None	add
272	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  node.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  node.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  node.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
273	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
274	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source,  name);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node,String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node,String)	6	None	replace
275	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/types/thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/types/thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    timeout    	compilable	timeout	74	1	replace
276	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/types/thisType ");  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/types/thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/types/thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    timeout    	compilable	timeout	74	1	replace
277	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "/thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "/thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    timeout    	compilable	timeout	74	1	replace
278	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "/thisType ");  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "/thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "/thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    timeout    	compilable	timeout	74	1	replace
279	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/compiler/thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/compiler/thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    timeout    	compilable	timeout	74	1	replace
280	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/compiler/thisType ");  timeout  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/compiler/thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/compiler/thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    timeout    	compilable	timeout	74	1	replace
281	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  n,  params);  [CE]  cannot  find  symbol  n  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  n,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  n,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params);    	non-compiled	[CE]  cannot  find  symbol  n	12	None	replace
282	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  parameters);  [CE]  cannot  find  symbol  parameters  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  parameters);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  parameters);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params);    	non-compiled	[CE]  cannot  find  symbol  parameters	12	None	replace
283	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  params);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	62	None	replace
284	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name,  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	62	None	replace
285	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    timeout    	compilable	timeout	62	1	replace
286	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  getTypeOfThis());  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    timeout    	compilable	timeout	62	1	replace
287	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(params);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(params);	  thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	45	None	replace
288	[BUG]  [BUGGY]  n.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  n.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	n.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);	  thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  n	45	None	replace
289	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  params.addChildToFront(thisTypeNode);  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  params.addChildToFront(thisTypeNode);	  thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  ')'  expected	45	None	replace
290	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.trim();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    thisType.trim();    	non-compiled	[CE]  ';'  expected	63	None	replace
291	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name),  thisType.trim();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name),  thisType.trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name),  thisType.trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    thisType.trim();    	non-compiled	[CE]  ';'  expected	63	None	replace
292	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getLocalName()),  thisType.trim();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getLocalName()),  thisType.trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getLocalName()),  thisType.trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    thisType.trim();    	non-compiled	[CE]  ';'  expected	63	None	replace
293	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params),  thisType.trim();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params),  thisType.trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params),  thisType.trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    thisType.trim();    	non-compiled	[CE]  ';'  expected	63	None	replace
294	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1;  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1;	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    thisType.trim();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
295	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  getTypeOfThis().trim();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  getTypeOfThis().trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  getTypeOfThis().trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    thisType.trim();    	non-compiled	[CE]  ';'  expected	63	None	replace
296	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",  this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",  this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
297	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",  this  type ");  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",  this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ",  this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
298	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + ",  this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + ",  this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
299	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + ",  this  type ");  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + ",  this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + ",  this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
300	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type: ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type: ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
301	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type: ");  timeout  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type: ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type: ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
302	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").toString();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").toString();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").toString();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
303	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ",  params).trim();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ",  params).trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ",  params).trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
304	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name), "thisType ").trim();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name), "thisType ").trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name), "thisType ").trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
305	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").removeChild(params);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").removeChild(params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").removeChild(params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
306	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").removeFirstChild();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").removeFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").removeFirstChild();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
307	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype.   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype.   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	91	None	add
308	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",.prototype.   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",.prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",.prototype.   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	91	None	add
309	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ").prototype.   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ").prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ").prototype.   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	91	None	add
310	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +. ".prototype.   ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +. ".prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +. ".prototype.   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	91	None	add
311	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype.   "));  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype.   "));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype.   "));	  timeout    	non-compiled	[CE]  	91	None	add
312	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	90	None	replace
313	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "ThisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "ThisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    timeout    	compilable	timeout	90	1	replace
314	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "ThisType ");  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "ThisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  + "ThisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    timeout    	compilable	timeout	90	1	replace
315	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  source);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	90	None	replace
316	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  getTypeOfThis());  [CE]  no  suitable  method  found  for  newString(int,String,ObjectType)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,ObjectType)	90	None	replace
317	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	66	None	add
318	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",.thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",.thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",.thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	66	None	add
319	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ").thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ").thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ").thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	66	None	add
320	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ",  true);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ",  true);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ",  true);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	66	None	add
321	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  prototype.   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
322	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  prototype.   ");  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  prototype.   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
323	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/prototype.   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
324	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/prototype.   ");  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/prototype.   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
325	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-prototype.   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
326	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-prototype.   ");  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-prototype.   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
327	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ".js);  [CE]  cannot  find  symbol  js  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ".js);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ".js);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  js	92	None	replace
328	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ".prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ".prototype.   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
329	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ".prototype.   ");  timeout  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ".prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + ".prototype.   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
330	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTypeOfThis(),  source);  [CE]  no  suitable  method  found  for  newString(int,String,ObjectType,Node)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTypeOfThis(),  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTypeOfThis(),  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    source);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,ObjectType,Node)	7	None	replace
331	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name,  source);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,String,Node)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    source);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,String,Node)	7	None	replace
332	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  baseType);  [CE]  cannot  find  symbol  baseType  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  baseType);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  baseType);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    source);    	non-compiled	[CE]  cannot  find  symbol  baseType	7	None	replace
333	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  this  type   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  this  type   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  type   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	38	None	add
334	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  this  type   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "),  this  type   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  this  type   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "),  this  type   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "),  this  type   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	38	None	add
335	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  this  type   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".,  this  type   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  this  type   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".,  this  type   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".,  this  type   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	38	None	add
336	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  this  type   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +, ",  this  type   ");  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  this  type   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +, ",  this  type   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +, ",  this  type   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	38	None	add
337	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params),    source);    }    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	30	None	replace
338	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredPropert  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredPropert  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredPropert	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params),    source);    }    	non-compiled	[CE]  ';'  expected	30	None	replace
339	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }  [CE]  method  defineDeclaredProperty  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withParamsNode(params),  source);  }	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params),    source);    }    	non-compiled	[CE]  method  defineDeclaredProperty  in  class  ObjectType  cannot  be  applied  to  given  types;	30	None	replace
340	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProper  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProper  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProper	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params),    source);    }    	non-compiled	[CE]  ';'  expected	30	None	replace
341	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	68	None	add
342	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "),thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "),thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "),thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	68	None	add
343	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ",  true);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ",  true);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ",  true);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	68	None	add
344	[BUG]  [BUGGY]  params.addChildToFront(source,  params);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.addChildToFront(source,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(source,  params);	  params.addChildToFront(params);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	50	None	replace
345	[BUG]  [BUGGY]  params.removeChildToFront(source);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.removeChildToFront(source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.removeChildToFront(source);	  params.addChildToFront(params);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
346	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.cloneTree());  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.cloneTree());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.cloneTree());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.typeOfThis);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	52	None	replace
347	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getThisName());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getThisName());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getThisName());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.typeOfThis);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
348	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.sourceName);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.sourceName);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.typeOfThis);    	non-compiled	[CE]  cannot  find  symbol  sourceName	52	None	replace
349	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	14	None	replace
350	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  2);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  2);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    timeout    	compilable	timeout	14	1	replace
351	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  2);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  2);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  2);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    timeout    	compilable	timeout	14	1	replace
352	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  3);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  3);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    timeout    	compilable	timeout	14	1	replace
353	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  3);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  3);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  3);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    timeout    	compilable	timeout	14	1	replace
354	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1,  params.length);  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1,  params.length);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1,  params.length);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    timeout    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
355	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1).toString();  [CE]  incompatible  types  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1).toString();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1).toString();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    timeout    	non-compiled	[CE]  incompatible  types	14	None	replace
356	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1,  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	14	None	replace
357	[BUG]  [BUGGY]  params.addChildToFront(lastParam);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  lastParam  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.addChildToFront(lastParam);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(lastParam);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  lastParam	76	None	replace
358	[BUG]  [BUGGY]  params.addChildToFront(parent);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  parent  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.addChildToFront(parent);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(parent);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  parent	76	None	replace
359	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.toString());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.toString());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.name);    	compilable	timeout	51	1	replace
360	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.toString());  timeout  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.toString());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.toString());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.name);    	compilable	timeout	51	1	replace
361	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name),  source);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name),  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name),  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.name);    	non-compiled	[CE]  ';'  expected	51	None	replace
362	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  thisTypeNode  =  params.getFirstChild();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  thisTypeNode  =  params.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  thisTypeNode  =  params.getFirstChild();	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	83	None	add
363	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  params  =  params.getFirstChild();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  params  =  params.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  params  =  params.getFirstChild();	  timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	83	None	add
364	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  thisTypeNode  =  params.getLastChild();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  thisTypeNode  =  params.getLastChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  thisTypeNode  =  params.getLastChild();	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	83	None	add
365	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  params.getFirstChild();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  params.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  params.getFirstChild();	  timeout    	non-compiled	[CE]  ';'  expected	83	None	add
366	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  paramsFirstChild  =  params.getFirstChild();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  paramsFirstChild  =  params.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  paramsFirstChild  =  params.getFirstChild();	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	83	None	add
367	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  params.getLastChild();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  params.getLastChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  params.getLastChild();	  timeout    	non-compiled	[CE]  ';'  expected	83	None	add
368	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.length  -  1);  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.length  -  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.length  -  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.length);    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
369	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.length  +  1);  [CE]  cannot  find  symbol  length  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.length  +  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.length  +  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.length);    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
370	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name.length);  [CE]  cannot  find  symbol  length  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name.length);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name.length);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.length);    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
371	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getLength());  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getLength());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getLength());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.length);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	53	None	replace
372	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);  [CE]  cannot  find  symbol  SIGNATURE  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE	56	None	replace
373	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  params);  [CE]  cannot  find  symbol  SIGNATURE  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE	56	None	replace
374	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  source);  [CE]  cannot  find  symbol  SIGNATURE  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE	56	None	replace
375	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  ';'  expected	56	None	replace
376	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name  +  1);  [CE]  cannot  find  symbol  SIGNATURE  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name  +  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name  +  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE	56	None	replace
377	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name),  params);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name),  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  ';'  expected	56	None	replace
378	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	78	None	add
379	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".,   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".,   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".,   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	78	None	add
380	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "),   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "),   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "),   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	78	None	add
381	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  ' ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  ' ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  ' ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	78	None	add
382	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  n ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  n ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",  n ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	78	None	add
383	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(getTypeOfThis()));  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(getTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name).trim();    	non-compiled	[CE]  ';'  expected	3	None	replace
384	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(name));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(name));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(name));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name).trim();    	non-compiled	[CE]  ';'  expected	3	None	replace
385	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(name);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name).trim();    	non-compiled	[CE]  ';'  expected	3	None	replace
386	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(getTypeOfThis());  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.createOptionalNullableType(getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name).trim();    	non-compiled	[CE]  ';'  expected	3	None	replace
387	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  null,   "thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,Node,<null>,String)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  null,   "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  null,   "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    null,       "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,<null>,String)	58	None	replace
388	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  null,  params, "thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,<null>,Node,String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  null,  params, "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  null,  params, "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    null,       "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,<null>,Node,String)	58	None	replace
389	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  null, "thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,Node,<null>,String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  null, "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  null, "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    null,       "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,<null>,String)	58	None	replace
390	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  registry,  null, "thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,JSTypeRegistry,<null>,String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  registry,  null, "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  registry,  null, "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    null,       "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,JSTypeRegistry,<null>,String)	58	None	replace
391	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ",  params);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ",  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ",  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType       ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	20	None	replace
392	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ",  null);  [CE]  no  suitable  method  found  for  newString(int,String,<null>)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ",  null);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".thisType ",  null);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType       ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,<null>)	20	None	replace
393	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType   ");    timeout    	compilable	timeout	67	1	replace
394	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":thisType ");  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType   ");    timeout    	compilable	timeout	67	1	replace
395	[BUG]  [BUGGY]  node.addChildToFront(params);  [CE]  cannot  find  symbol  node  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  node.addChildToFront(params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	node.addChildToFront(params);	  n.addChildToFront(params);    	non-compiled	[CE]  cannot  find  symbol  node	85	None	replace
396	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  NAME_TYPE,  thisType);  [CE]  cannot  find  symbol  NAME_TYPE  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  NAME_TYPE,  thisType);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  NAME_TYPE,  thisType);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params,   "thisType   ",    thisType);    	non-compiled	[CE]  cannot  find  symbol  NAME_TYPE	86	None	replace
397	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType ",  true);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  +   "thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType ",  true);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    params    +   "thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  params  + "thisType ",  true);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	31	None	add
398	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType, ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType, ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    timeout    	compilable	timeout	90	1	replace
399	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType, ");  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType, ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType, ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    timeout    	compilable	timeout	90	1	replace
400	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  define  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  define  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  define	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params),    source);    }    	non-compiled	[CE]  ';'  expected	30	None	replace
401	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  parametersNode,   "thisType ");  [CE]  cannot  find  symbol  parametersNode  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  parametersNode,   "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  parametersNode,   "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source,       "thisType   ");    	non-compiled	[CE]  cannot  find  symbol  parametersNode	44	None	replace
402	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.removeFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  params.removeFirstChild();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	compilable	timeout	84	1	replace
403	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.removeFirstChild();  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.removeFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  params.removeFirstChild();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	compilable	timeout	84	1	replace
404	[BUG]  [BUGGY]  Node  thisTypeNode  =  lastParam.getFirstChild();  [CE]  cannot  find  symbol  lastParam  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  lastParam.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  lastParam.getFirstChild();	  Node    thisTypeNode    =    params.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol  lastParam	84	None	replace
405	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  getTypeOfThis(),  name);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  getTypeOfThis(),  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getPropertyName(),  getTypeOfThis(),  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    name);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
406	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  paramsLastChild  =  params.getLastChild();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  paramsLastChild  =  params.getLastChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  paramsLastChild  =  params.getLastChild();	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	83	None	add
407	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  paramsNode  =  params.getFirstChild();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  paramsNode  =  params.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  paramsNode  =  params.getFirstChild();	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	83	None	add
408	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  paramsTypeNode  =  params.getFirstChild();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  paramsTypeNode  =  params.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  paramsTypeNode  =  params.getFirstChild();	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	83	None	add
409	[BUG]  [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	56	None	replace
410	[BUG]  [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  source);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	56	None	replace
411	[BUG]  [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  parent);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  parent);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  parent);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	56	None	replace
412	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  params.addChildToFront(thisTypeNode);  [CE]  'void'  type  not  allowed  here  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  params.addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  'void'  type  not  allowed  here	27	None	replace
413	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1;  params.addChildToFront(thisTypeNode);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1;  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1;  params.addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	27	None	replace
414	[BUG]  [BUGGY]  Node  lastParam  =  params.nextParam();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.nextParam();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.nextParam();	  Node    lastParam    =    params.getLastParam();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
415	[BUG]  [BUGGY]  Node  lastParam  =  this.params.getLastParam();  [CE]  cannot  find  symbol  params  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  this.params.getLastParam();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  this.params.getLastParam();	  Node    lastParam    =    params.getLastParam();    	non-compiled	[CE]  cannot  find  symbol  params	48	None	replace
416	[BUG]  [BUGGY]  Node  lastParam  =  parent.getLastParam();  [CE]  cannot  find  symbol  parent  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  parent.getLastParam();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  parent.getLastParam();	  Node    lastParam    =    params.getLastParam();    	non-compiled	[CE]  cannot  find  symbol  parent	48	None	replace
417	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params  ==  null)  {  defineDeclaredProperty  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params  ==  null)  {  defineDeclaredProperty  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params  ==  null)  {  defineDeclaredProperty	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params).withReturnType(getReturnType())    	non-compiled	[CE]  ';'  expected	29	None	replace
418	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params).withReturnType(getReturnType())    	non-compiled	[CE]  ')'  expected	29	None	replace
419	[BUG]  [BUGGY]  .setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  .setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
420	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.STRING,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.STRING,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)    	compilable	timeout	28	1	replace
421	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.STRING,  name);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.STRING,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.STRING,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)    	compilable	timeout	28	1	replace
422	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  lastParam,  params);  [CE]  cannot  find  symbol  lastParam  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  lastParam,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  lastParam,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params);    	non-compiled	[CE]  cannot  find  symbol  lastParam	12	None	replace
423	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.cloneTree());  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.cloneTree());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.cloneTree());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    params);    	non-compiled	[CE]  ';'  expected	17	None	replace
424	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  registry);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  registry);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params,  registry);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    params);    	non-compiled	[CE]  ';'  expected	17	None	replace
425	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")-thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")-thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")-thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	71	None	add
426	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  false);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  false);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  false);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	71	None	add
427	[BUG]  [BUGGY]  n.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  n  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  n.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	n.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(params);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  n	47	None	replace
428	[BUG]  [BUGGY]  node.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  node  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  node.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	node.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(params);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  node	47	None	replace
429	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(params);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
430	[BUG]  [BUGGY]  Node  lastParam  =  params.next();  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.next();  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.next();  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(params);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
431	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  compiler,  source);  [CE]  cannot  find  symbol  compiler  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  compiler,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  compiler,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source);    	non-compiled	[CE]  cannot  find  symbol  compiler	75	None	replace
432	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  lastParam);  [CE]  cannot  find  symbol  lastParam  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  lastParam);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  lastParam);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source);    	non-compiled	[CE]  cannot  find  symbol  lastParam	75	None	replace
433	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/- ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/- ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-   ");    timeout    	compilable	timeout	37	1	replace
434	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/- ");  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/- ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/- ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-   ");    timeout    	compilable	timeout	37	1	replace
435	[BUG]  [BUGGY]  params.addChildToFront(lastParam);  [CE]  cannot  find  symbol  lastParam  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(lastParam);	  params.addChildToFront(source);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  lastParam	76	None	replace
436	[BUG]  [BUGGY]  Node  lastParam  =  params.next(),  source;  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.next(),  source;  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.next(),  source;	  Node    lastParam    =    params.next();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
437	[BUG]  [BUGGY]  Node  lastParam  =  params.trim();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.trim();	  Node    lastParam    =    params.next();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
438	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  registry);  [CE]  no  suitable  method  found  for  newString(int,String,Node,JSTypeRegistry)  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  registry);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  registry);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,JSTypeRegistry)	11	None	replace
439	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  lastParam);  [CE]  cannot  find  symbol  lastParam  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  lastParam);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  lastParam);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params);    	non-compiled	[CE]  cannot  find  symbol  lastParam	11	None	replace
440	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  parent);  [CE]  cannot  find  symbol  parent  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  parent);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  parent);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params);    	non-compiled	[CE]  cannot  find  symbol  parent	11	None	replace
441	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    timeout    	compilable	timeout	74	1	replace
442	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/this  type ");  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    timeout    	compilable	timeout	74	1	replace
443	[BUG]  [BUGGY]  Node  lastParam  =  params.nextChild();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.nextChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.nextChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
444	[BUG]  [BUGGY]  Node  param  =  params.getLastChild();  [CE]  cannot  find  symbol  thisTypeNode  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  param  =  params.getLastChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  param  =  params.getLastChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	82	None	replace
445	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.nameOfThis);  [CE]  cannot  find  symbol  nameOfThis  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.nameOfThis);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.nameOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.typeOfThis);    	non-compiled	[CE]  cannot  find  symbol  nameOfThis	52	None	replace
446	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getThis());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.getThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.typeOfThis);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
447	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.valueOfThis);  [CE]  cannot  find  symbol  valueOfThis  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.valueOfThis);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.valueOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.typeOfThis);    	non-compiled	[CE]  cannot  find  symbol  valueOfThis	52	None	replace
448	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
449	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".this  type ");  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
450	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  typeOfThis ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  typeOfThis ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
451	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  typeOfThis ");  timeout  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  typeOfThis ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",  this  typeOfThis ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
452	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ", "  +  thisType);  [CE]  cannot  find  symbol  thisType  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ", "  +  thisType);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ", "  +  thisType);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  thisType	39	None	replace
453	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  2);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  2);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  2);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
454	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  itTypeNode  =  Node.newString(Token.NAME,  name  +  1);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  itTypeNode  =  Node.newString(Token.NAME,  name  +  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  itTypeNode  =  Node.newString(Token.NAME,  name  +  1);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
455	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  paramNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  paramNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    Node  paramNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	61	None	add
456	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfthis()  +  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfthis()  +  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfthis()  +  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	61	None	add
457	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  name  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [CE]  variable  name  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  name  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    Node  name  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  getPropertyType(String)	61	None	add
458	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params.length);  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params.length);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params.length);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.length);    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
459	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.stringValue());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.stringValue());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.stringValue());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.length);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
460	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ",  source);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ",  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType ",  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    source);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	70	None	replace
461	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  n,  source);  [CE]  cannot  find  symbol  n  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  n,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  n,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    source);    	non-compiled	[CE]  cannot  find  symbol  n	70	None	replace
462	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [CE]  cannot  find  symbol  thisTypeNode  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	24	None	replace
463	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  	24	None	replace
464	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType, ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType, ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",thisType   ");    timeout    	compilable	timeout	69	1	replace
465	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType, ");  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType, ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType, ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",thisType   ");    timeout    	compilable	timeout	69	1	replace
466	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").restrictByNotNullOrUndefined();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").restrictByNotNullOrUndefined();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
467	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").clone();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").clone();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").clone();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
468	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+ "thisType ").trim();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+ "thisType ").trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+ "thisType ").trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  	2	None	replace
469	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").reset();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").reset();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").reset();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
470	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1;  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1;	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	23	None	replace
471	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  true);  [CE]  no  suitable  method  found  for  newString(int,String,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  true);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ",  true);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean)	65	None	replace
472	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ".equals(false));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ".equals(false));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    false);    	compilable	timeout	65	1	replace
473	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ".equals(false));  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ".equals(false));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ".equals(false));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    false);    	compilable	timeout	65	1	replace
474	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  source).trim();  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  source).trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  source).trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ").trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	1	None	replace
475	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  null).trim();  [CE]  no  suitable  method  found  for  newString(int,String,<null>)  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  null).trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  null).trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ").trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,<null>)	1	None	replace
476	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  null).trim();  [CE]  no  suitable  method  found  for  newString(int,String,String,<null>)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  null).trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  null).trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ").trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,<null>)	1	None	replace
477	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  name);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  name);	  thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	46	None	replace
478	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":prototype ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":prototype ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
479	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":prototype ");  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":prototype ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":prototype ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    timeout    	compilable	timeout	88	1	replace
480	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  sources,  null,   "thisType ");  [CE]  cannot  find  symbol  sources  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  sources,  null,   "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  sources,  null,   "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    null,       "thisType   ");    	non-compiled	[CE]  cannot  find  symbol  sources	58	None	replace
481	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  source);  Node  params  =  Node.newString(Token.NAME,  name);  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  source);  Node  params  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  source);  Node  params  =  Node.newString(Token.NAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    params    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	95	None	replace
482	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1;  Node  params  =  Node.newString(Token.NAME,  name);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1;  Node  params  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1;  Node  params  =  Node.newString(Token.NAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    params    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	95	None	replace
483	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  lastParam,  source);  [CE]  cannot  find  symbol  lastParam  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  lastParam,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  lastParam,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    source);    	non-compiled	[CE]  cannot  find  symbol  lastParam	7	None	replace
484	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name, "thisType ".trim());  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name, "thisType ".trim());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name, "thisType ".trim());	  Node    thisTypeNode    =    Node.newString(Token.NAME,       "thisType   ",    name).trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	64	None	replace
485	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name, ",thisType ").trim();  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name, ",thisType ").trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name, ",thisType ").trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,       "thisType   ",    name).trim();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	64	None	replace
486	[BUG]  [BUGGY]  Node  lastParam  =  params.nextParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.nextParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.nextParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));	  Node    lastParam    =    params.getLastParam();    thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
487	[BUG]  [BUGGY]  Node  lastParam  =  parent.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [CE]  cannot  find  symbol  parent  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  parent.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  parent.getLastParam();  thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));	  Node    lastParam    =    params.getLastParam();    thisTypeNode.setJSType(registry.createOptionalNullableType(lastParam));    	non-compiled	[CE]  cannot  find  symbol  parent	77	None	replace
488	[BUG]  [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name  + "thisType ");  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name  + "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  params  =  Node.newString(Token.NAME,  name  + "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ")thisType       ");    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	21	None	replace
489	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  /  name);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  /  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  /  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	62	None	replace
490	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name,  source);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	62	None	replace
491	[BUG]  [BUGGY]  Node  itTypeNode  =  Node.newString(Token.NAME,  name);  [CE]  cannot  find  symbol  thisTypeNode  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  itTypeNode  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  itTypeNode  =  Node.newString(Token.NAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    itTypeNode    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	55	None	replace
492	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +... ".prototype.   ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype.   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +... ".prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +... ".prototype.   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	91	None	add
493	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".  reteta ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".  reteta ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    timeout    	compilable	timeout	79	1	replace
494	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".  reteta ");  timeout  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".  reteta ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".  reteta ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    timeout    	compilable	timeout	79	1	replace
495	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  source);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "-thisType ",  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	72	None	replace
496	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name  +  1);  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name  +  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.name  +  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.name);    	non-compiled	[CE]  cannot  find  symbol  name	51	None	replace
497	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "):   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ":   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "):   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ":   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "):   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	33	None	add
498	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  getTypeOfThis());  [CE]  no  suitable  method  found  for  newString(int,String,Node,ObjectType)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  source,  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,ObjectType)	5	None	replace
499	[BUG]  [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIG,  name);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIG,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  params  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.SIG,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIG,    name);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	94	None	replace
500	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  Node.newString(Token.SIG,  name);  [CE]  cannot  find  symbol  SIG  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  Node.newString(Token.SIG,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  Node.newString(Token.SIG,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIG,    name);    	non-compiled	[CE]  cannot  find  symbol  SIG	94	None	replace
501	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.ASSIGN,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.ASSIGN,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIG,    name);    	compilable	timeout	94	1	replace
502	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.ASSIGN,  name);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.ASSIGN,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.ASSIGN,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIG,    name);    	compilable	timeout	94	1	replace
503	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  NodeUtil.isFunctionDeclaration(params);  [CE]  cannot  find  symbol  NodeUtil  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  NodeUtil.isFunctionDeclaration(params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  NodeUtil.isFunctionDeclaration(params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIG,    name);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	94	None	replace
504	[BUG]  [BUGGY]  thisTypeNode.setJSType(register.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  register  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(register.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(register.createOptionalNullableType(getTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  register	25	None	replace
505	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis())+  1;  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis())+  1;  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis())+  1;	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	9	None	replace
506	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")-   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")-   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ")-   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	36	None	add
507	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  source,  params);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node,Node)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  source,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ",  source,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,       "thisType   ",    params);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node,Node)	43	None	replace
508	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType ",  false);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType ",  false);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/thisType ",  false);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	73	None	add
509	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  Node  paramNode  =  Node.newString(Token.NAME,  lastParam);  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  Node  paramNode  =  Node.newString(Token.NAME,  lastParam);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);  Node  paramNode  =  Node.newString(Token.NAME,  lastParam);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    paramNode    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	54	None	replace
510	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  thisType.trim();  [CE]  cannot  find  symbol  thisType  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  thisType.trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  thisType.trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    thisType.trim();    	non-compiled	[CE]  cannot  find  symbol  thisType	63	None	replace
511	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.next();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.next();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params.next();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    thisType.trim();    	non-compiled	[CE]  ';'  expected	63	None	replace
512	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  parameters,  getTypeOfThis());  [CE]  cannot  find  symbol  parameters  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  parameters,  getTypeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  parameters,  getTypeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol  parameters	8	None	replace
513	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.prototype.   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
514	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.prototype.   ");  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.prototype.   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "/.prototype.   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
515	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ".jpg);  [CE]  cannot  find  symbol  jpg  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ".jpg);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ".jpg);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  jpg	92	None	replace
516	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.trim();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  registry.trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name).trim();    	non-compiled	[CE]  ';'  expected	3	None	replace
517	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  compiler.trim();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  compiler.trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  compiler.trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name).trim();    	non-compiled	[CE]  ';'  expected	3	None	replace
518	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params).trim();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params).trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name),  params).trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name).trim();    	non-compiled	[CE]  ';'  expected	3	None	replace
519	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.trim());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.trim());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.trim());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.name);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
520	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  Node.newString(Token.NAME,  name);  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)&&  Node.newString(Token.NAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    params    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	95	None	replace
521	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1;  Node  params  =  Node.newString(Token.NAME,  params);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1;  Node  params  =  Node.newString(Token.NAME,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1;  Node  params  =  Node.newString(Token.NAME,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    params    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	95	None	replace
522	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ".equals( "type "));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ".equals( "type "));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType       ");    	compilable	timeout	18	1	replace
523	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ".equals( "type "));  timeout  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ".equals( "type "));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "thisType ".equals( "type "));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType       ");    	compilable	timeout	18	1	replace
524	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +... ".prototype   ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".prototype   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +... ".prototype   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +... ".prototype   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	87	None	add
525	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(thisTypeNode!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [CE]  cannot  find  symbol  thisTypeNode  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(thisTypeNode!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(thisTypeNode!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	24	None	replace
526	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  params.addCh  [CE]  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  params.addCh  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  if(params!=  null)  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  params.addCh	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  	24	None	replace
527	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  compiler,  params);  [CE]  cannot  find  symbol  compiler  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  compiler,  params);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  compiler,  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    source);    	non-compiled	[CE]  cannot  find  symbol  compiler	75	None	replace
528	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    params);    	non-compiled	[CE]  ';'  expected	17	None	replace
529	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)    	non-compiled	[CE]  ')'  expected	28	None	replace
530	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.scope);  [CE]  cannot  find  symbol  scope  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  params.scope);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  params.scope);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params.typeOfThis);    	non-compiled	[CE]  cannot  find  symbol  scope	52	None	replace
531	[BUG]  [BUGGY]  params.addChildToFront(parent);  [CE]  cannot  find  symbol  parent  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params.addChildToFront(parent);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params.addChildToFront(parent);	  params.addChildToFront(params);    	non-compiled	[CE]  cannot  find  symbol  parent	50	None	replace
532	[BUG]  [BUGGY]  params  =  params.cloneTree();  [CE]  cannot  find  symbol  thisTypeNode  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  params  =  params.cloneTree();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	params  =  params.cloneTree();	  params.addChildToFront(params);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	50	None	replace
533	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +. "ThisType   ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "ThisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +. "ThisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +. "ThisType   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	89	None	add
534	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  params);  if(params!=  null)  {  defineDeclaredProperty  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  params);  if(params!=  null)  {  defineDeclaredProperty  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  params);  if(params!=  null)  {  defineDeclaredProperty	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params).withReturnType(getReturnType())    	non-compiled	[CE]  ';'  expected	29	None	replace
535	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTreeLabel());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTreeLabel());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTreeLabel());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    title);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
536	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ";  this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ";  this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
537	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ";  this  type ");  timeout  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ";  this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ";  this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	compilable	timeout	39	1	replace
538	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",  this  type ");  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",  this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",  this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",    this    type   ");    timeout    	non-compiled	[CE]  	39	None	replace
539	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.BLOCK,  name  +  1);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.BLOCK,  name  +  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.BLOCK,  name  +  1);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
540	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.LAME,  name  +  1);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.LAME,  name  +  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.LAME,  name  +  1);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
541	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.SIG,  name  +  1);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1);  Node  thisTypeNode  =  Node.newString(Token.SIG,  name  +  1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    Node  thisTypeNode  =  Node.newString(Token.SIG,  name  +  1);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	add
542	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",  thisType ");  [CE]  unclosed  string  literal  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",  thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",  thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",thisType   ");    timeout    	non-compiled	[CE]  unclosed  string  literal	69	None	replace
543	[BUG]  [BUGGY]  JSType  thisTypeNode  =  Node.newString(Token.SIG,  name);  [CE]  cannot  find  symbol  SIG  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  JSType  thisTypeNode  =  Node.newString(Token.SIG,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	JSType  thisTypeNode  =  Node.newString(Token.SIG,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIG,    name);    	non-compiled	[CE]  cannot  find  symbol  SIG	94	None	replace
544	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIG,  name)+  1;  [CE]  cannot  find  symbol  SIG  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIG,  name)+  1;  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIG,  name)+  1;	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIG,    name);    	non-compiled	[CE]  cannot  find  symbol  SIG	94	None	replace
545	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTreeOfThis());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTreeOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  getTreeOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    getTypeOfThis());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
546	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getBaseType());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getBaseType());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getBaseType());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
547	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name)+  1;  [CE]  cannot  find  symbol  SIGNATURE  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name)+  1;  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name)+  1;	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE	56	None	replace
548	[BUG]  [BUGGY]  JSType  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);  [CE]  cannot  find  symbol  SIGNATURE  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  JSType  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	JSType  thisTypeNode  =  Node.newString(Token.SIGNATURE,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.SIGNATURE,    name);    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE	56	None	replace
549	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +. ".thisType   ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ".thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +. ".thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +. ".thisType   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	66	None	add
550	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":prototype. ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":prototype. ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
551	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":prototype. ");  timeout  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":prototype. ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ":prototype. ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ".prototype.   ");    timeout    	compilable	timeout	92	1	replace
552	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1,  params.cloneTree());  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1,  params.cloneTree());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  1,  params.cloneTree());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +    1);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	14	None	replace
553	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").substring(1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").substring(1);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").substring(1);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
554	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").remove();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").remove();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name), "thisType ").remove();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),       "thisType   ").trim();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
555	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  /thisType   ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "/thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  /thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "/thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +  /thisType   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	73	None	add
556	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "  -this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "  -this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    timeout    	compilable	timeout	72	1	replace
557	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "  -this  type ");  timeout  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "  -this  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "  -this  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    timeout    	compilable	timeout	72	1	replace
558	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1,  thisType.trim();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1,  thisType.trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)+  1,  thisType.trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    thisType.trim();    	non-compiled	[CE]  ';'  expected	63	None	replace
559	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1,  thisType.trim();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1,  thisType.trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name)-  1,  thisType.trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name),    thisType.trim();    	non-compiled	[CE]  ';'  expected	63	None	replace
560	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  thatTypeNode  =  params.getFirstChild();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  thatTypeNode  =  params.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  thatTypeNode  =  params.getFirstChild();	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	83	None	add
561	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  itTypeNode  =  params.getFirstChild();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  itTypeNode  =  params.getFirstChild();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  itTypeNode  =  params.getFirstChild();	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	83	None	add
562	[BUG]  [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  thisTypeNode  =  params.getFirstChild());  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  params.getFirstChild();  Node  thisTypeNode  =  params.getFirstChild());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    params.getFirstChild();    Node  thisTypeNode  =  params.getFirstChild());	  timeout    	non-compiled	[CE]  ';'  expected	83	None	add
563	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  names);  [CE]  cannot  find  symbol  names  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  names);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  names);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    params);    	non-compiled	[CE]  cannot  find  symbol  names	12	None	replace
564	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  null);  [CE]  no  suitable  method  found  for  newString(int,String,<null>)  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  null);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  null);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    null);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,<null>)	22	None	replace
565	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".,thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".,thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".,thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	68	None	add
566	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.LAME,  name)+  1;  [CE]  cannot  find  symbol  LAME  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.LAME,  name)+  1;  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.LAME,  name)+  1;	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.LAME,    name);    	non-compiled	[CE]  cannot  find  symbol  LAME	93	None	replace
567	[BUG]  [BUGGY]  JSType  thisTypeNode  =  Node.newString(Token.LAME,  name);  [CE]  cannot  find  symbol  LAME  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  JSType  thisTypeNode  =  Node.newString(Token.LAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	JSType  thisTypeNode  =  Node.newString(Token.LAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.LAME,    name);    	non-compiled	[CE]  cannot  find  symbol  LAME	93	None	replace
568	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  title,  source);  [CE]  cannot  find  symbol  title  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  title,  source);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  title,  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    source);    	non-compiled	[CE]  cannot  find  symbol  title	15	None	replace
569	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name;  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name;  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name;	  Node    thisTypeNode    =    Node.newString(Token.NAME,    source);    	non-compiled	[CE]  ')'  expected	15	None	replace
570	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  baseType, "thisType ");  [CE]  cannot  find  symbol  baseType  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  baseType, "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  baseType, "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params,   "thisType   ");    	non-compiled	[CE]  cannot  find  symbol  baseType	42	None	replace
571	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  getTypeOfThis(), "thisType ");  [CE]  no  suitable  method  found  for  newString(int,String,Node,ObjectType,String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  getTypeOfThis(), "thisType ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  getTypeOfThis(), "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params,   "thisType   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,ObjectType,String)	42	None	replace
572	[BUG]  [BUGGY]  n.addChildToFront(params);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  n  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  n.addChildToFront(params);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	n.addChildToFront(params);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(params);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  n	47	None	replace
573	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",   ");  [CE]  unclosed  string  literal  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ".prototype ",   ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    timeout    	non-compiled	[CE]  unclosed  string  literal	79	None	replace
574	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  itTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  itTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    Node  itTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	61	None	add
575	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  thisTypeNode  =  Node.newString(Token.SIG,  getTypeOfThis()  +  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()  +  name);  Node  thisTypeNode  =  Node.newString(Token.SIG,  getTypeOfThis()  +  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    name);    Node  thisTypeNode  =  Node.newString(Token.SIG,  getTypeOfThis()  +  name);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	61	None	add
576	[BUG]  [BUGGY]  n.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  n  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  n.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	n.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis()));    	non-compiled	[CE]  cannot  find  symbol  n	76	None	replace
577	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   "));  [CE]  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   "));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   ",   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   ",   "));	  timeout    	non-compiled	[CE]  	78	None	add
578	[BUG]  [BUGGY]  Node  lastParam  =  params.peek().getLastParam();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.peek().getLastParam();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.peek().getLastParam();	  Node    lastParam    =    params.getLastParam();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
579	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType   ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  +   "-thisType   ");  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType   ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "-thisType   ");    Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + ",thisType   ");	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	71	None	add
580	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()));  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()));  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()));	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    1);    	non-compiled	[CE]  ';'  expected	9	None	replace
581	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  typeOfThis);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,ObjectType)  [FE]                          ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  typeOfThis);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  typeOfThis);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis()    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,ObjectType)	9	None	replace
582	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name).addChildToFront(thisTypeNode);  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name).addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name).addChildToFront(thisTypeNode);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    params.addChildToFront(thisTypeNode);    	non-compiled	[CE]  incompatible  types	27	None	replace
583	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "This  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "This  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    timeout    	compilable	timeout	90	1	replace
584	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "This  type ");  timeout  [FE]                      ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "This  type ");  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "This  type ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "ThisType   ");    timeout    	compilable	timeout	90	1	replace
585	[BUG]  [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).with  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).with  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	if(params!=  null)  {  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  if(params!=  null)  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).with	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    if(params!=    null)    {    defineDeclaredProperty(name,    new    FunctionBuilder(registry).withParamsNode(params)).build(),    source);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
586	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  compiler);  [CE]  cannot  find  symbol  compiler  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  compiler);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  compiler);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    params);    	non-compiled	[CE]  cannot  find  symbol  compiler	4	None	replace
587	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  parent);  [CE]  cannot  find  symbol  parent  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  parent);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params,  parent);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis(),    params);    	non-compiled	[CE]  cannot  find  symbol  parent	4	None	replace
588	[BUG]  [BUGGY]  Node  lastParam  =  params.next(),  params.cloneTree();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.next(),  params.cloneTree();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.next(),  params.cloneTree();	  Node    lastParam    =    params.next();    	non-compiled	[CE]  ';'  expected	49	None	replace
589	[BUG]  [BUGGY]  Node  lastParam  =  params.last();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.last();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.last();	  Node    lastParam    =    params.next();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
590	[BUG]  [BUGGY]  Node  lastParam  =  params.next(),  params.cloneTree());  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.next(),  params.cloneTree());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.next(),  params.cloneTree());	  Node    lastParam    =    params.next();    	non-compiled	[CE]  ';'  expected	49	None	replace
591	[BUG]  [BUGGY]  Node  lastParam  =  params.peek();  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  lastParam  =  params.peek();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  lastParam  =  params.peek();	  Node    lastParam    =    params.next();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
592	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  register);  [CE]  cannot  find  symbol  register  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  register);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,  params,  register);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name,    params);    	non-compiled	[CE]  cannot  find  symbol  register	11	None	replace
593	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType())+  1;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType())+  1;  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getJSType())+  1;	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getJSType());    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
594	[BUG]  [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  name)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  name)+  1;  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  paramNode  =  Node.newString(Token.NAME,  name)+  1;	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    paramNode    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	54	None	replace
595	[BUG]  [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  name).trim();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  paramNode  =  Node.newString(Token.NAME,  name).trim();  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  paramNode  =  Node.newString(Token.NAME,  name).trim();	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    paramNode    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
596	[BUG]  [BUGGY]  ParamNode  paramNode  =  Node.newString(Token.NAME,  name);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  ParamNode  paramNode  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	ParamNode  paramNode  =  Node.newString(Token.NAME,  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name);    Node    paramNode    =    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
597	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  false);  [CE]  no  suitable  method  found  for  newString(int,String,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  false);  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name  + "ThisType ",  false);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +       "thisType       ");    Node    thisTypeNode    =    Node.newString(Token.NAME,    name    +   "thisType   ",    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean)	65	None	replace
598	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getDefaultNameOfThis());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getDefaultNameOfThis());  [BUGGY]      thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getDefaultNameOfThis());	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getNameOfThis());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
