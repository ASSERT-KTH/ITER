bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    timeout    	compilable	timeout	17	1	replace
2	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    timeout    	compilable	timeout	17	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    timeout    	compilable	timeout	17	1	replace
4	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    timeout    	compilable	timeout	17	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.setOptionalArg(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(false);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    timeout    	compilable	timeout	17	1	replace
6	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(false);  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.setOptionalArg(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(false);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    timeout    	compilable	timeout	17	1	replace
7	[BUG]  [BUGGY]  thisTypeNode.setParameters(params);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.setParameters(params);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    timeout    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
8	[BUG]  [BUGGY]  thisTypeNode.setParameters(params).addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.setParameters(params).addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params).addChildToFront(thisTypeNode);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    timeout    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
9	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	16	1	add
10	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	16	1	add
11	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	16	1	add
12	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	16	1	add
13	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	16	None	add
14	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  >=  null)  {  params.addChildToFront(thisTypeNode);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  >=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  >=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	16	None	add
15	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildIntoFront(thisTypeNode);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildIntoFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildIntoFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	16	None	add
16	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  If(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  If(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    If(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
17	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  Params.addChildToFront(thisTypeNode);  }  [CE]  cannot  find  symbol  Params  [FE]                        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  Params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  Params.addChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Params	16	None	add
18	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);	  timeout    	compilable	timeout	3	1	add
19	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);	  timeout    	compilable	timeout	3	1	add
20	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(lastParam);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(lastParam);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	3	None	add
21	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildToBack(lastParam);	  timeout    	compilable	timeout	3	1	add
22	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildToBack(lastParam);  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildToBack(lastParam);	  timeout    	compilable	timeout	3	1	add
23	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);	  timeout    	compilable	timeout	3	1	add
24	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);	  timeout    	compilable	timeout	3	1	add
25	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  Node  params.addChildToBack(thisTypeNode);  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  params.addChildToBack(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    Node  params.addChildToBack(thisTypeNode);	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
26	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
27	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  source);  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
28	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	3	1	add
29	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	3	1	add
30	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(source);	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
31	[BUG]  [BUGGY]  params.addChildToBack(source);  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
32	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode,  thisTypeNode);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode,  thisTypeNode);	  params.addChildToBack(thisTypeNode);    timeout    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	4	None	replace
33	[BUG]  [BUGGY]  n.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  n.addChildToBack(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.addChildToBack(thisTypeNode);	  params.addChildToBack(thisTypeNode);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	4	None	replace
34	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	replace
35	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis());  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis());  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis());	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	13	None	replace
36	[BUG]  [BUGGY]  Parser  <?>  params  =  params.cloneTree();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Parser  <?>  params  =  params.cloneTree();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Parser  <?>  params  =  params.cloneTree();	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
37	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
38	[BUG]  [BUGGY]  params.addChildToFront(source);  params.addChildToFront(source);  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
39	[BUG]  [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToFront(lastParam);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToFront(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToFront(lastParam);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	1	None	add
40	[BUG]  [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToFront(source);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToFront(source);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	1	None	add
41	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);	  timeout    	compilable	timeout	1	1	add
42	[BUG]  [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);	  timeout    	compilable	timeout	1	1	add
43	[BUG]  [BUGGY]  params.addChildToFront(source);  Node  params.addChildToFront(source);  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    Node  params.addChildToFront(source);	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
44	[BUG]  [BUGGY]  params.addChildToFront(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
45	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	1	1	add
46	[BUG]  [BUGGY]  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	1	1	add
47	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
48	[BUG]  [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  timeout  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
49	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.addChildToFront(thisTypeNode);	  n.addChildToFront(thisTypeNode);    	compilable	timeout	6	1	replace
50	[BUG]  [BUGGY]  thisTypeNode.addChildToFront(thisTypeNode);  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.addChildToFront(thisTypeNode);	  n.addChildToFront(thisTypeNode);    	compilable	timeout	6	1	replace
51	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.addChildToFront(thisTypeNode);  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  lastParam  =  thisTypeNode.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  thisTypeNode.addChildToFront(thisTypeNode);	  n.addChildToFront(thisTypeNode);    	non-compiled	[CE]  incompatible  types	6	None	replace
52	[BUG]  [BUGGY]  Node.addChildToFront(thisTypeNode);  [CE]  non-static  method  addChildToFront(Node)  cannot  be  referenced  from  a  static  context  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node.addChildToFront(thisTypeNode);	  n.addChildToFront(thisTypeNode);    	non-compiled	[CE]  non-static  method  addChildToFront(Node)  cannot  be  referenced  from  a  static  context	6	None	replace
53	[BUG]  [BUGGY]  node.addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  node  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  node.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	node.addChildToFront(thisTypeNode);	  n.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  node	6	None	replace
54	[BUG]  [BUGGY]  lastParam.addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  lastParam  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  lastParam.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	lastParam.addChildToFront(thisTypeNode);	  n.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  lastParam	6	None	replace
55	[BUG]  [BUGGY]  params.addChildToFront(source,  thisTypeNode,  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source,  thisTypeNode,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source,  thisTypeNode,  thisTypeNode);	  params.addChildToFront(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	5	None	replace
56	[BUG]  [BUGGY]  params.addChildToFront(source,  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source,  thisTypeNode);	  params.addChildToFront(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	5	None	replace
57	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  name);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(thisTypeNode,  name);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  name);	  params.addChildToFront(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	5	None	replace
58	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  source);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(thisTypeNode,  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  source);	  params.addChildToFront(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	5	None	replace
59	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  n);  [CE]  cannot  find  symbol  n  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(thisTypeNode,  n);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  n);	  params.addChildToFront(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  n	5	None	replace
60	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  params);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(thisTypeNode,  params);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  params);	  params.addChildToFront(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	5	None	replace
61	[BUG]  [BUGGY]      thisTypeNode.setParameters(params  <  null?  null  :  params.cloneTree());  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      thisTypeNode.setParameters(params  <  null?  null  :  params.cloneTree());  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	        thisTypeNode.setParameters(params  <  null?  null  :  params.cloneTree());	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	9	None	add
62	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	        params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	9	1	add
63	[BUG]  [BUGGY]      params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	        params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	9	1	add
64	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	        params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	9	1	add
65	[BUG]  [BUGGY]      params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	        params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	9	1	add
66	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(source,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(source,  thisTypeNode);	  params.addChildAfter(thisTypeNode);    	compilable	timeout	11	1	replace
67	[BUG]  [BUGGY]  params.addChildAfter(source,  thisTypeNode);  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(source,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(source,  thisTypeNode);	  params.addChildAfter(thisTypeNode);    	compilable	timeout	11	1	replace
68	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,  thisTypeNode);	  params.addChildAfter(thisTypeNode);    	compilable	timeout	11	1	replace
69	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  thisTypeNode);	  params.addChildAfter(thisTypeNode);    	compilable	timeout	11	1	replace
70	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  name);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(thisTypeNode,  name);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  name);	  params.addChildAfter(thisTypeNode);    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	11	None	replace
71	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(thisTypeNode,  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,  source);	  params.addChildAfter(thisTypeNode);    	compilable	timeout	11	1	replace
72	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  source);  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(thisTypeNode,  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  source);	  params.addChildAfter(thisTypeNode);    	compilable	timeout	11	1	replace
73	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(params,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(params,  thisTypeNode);	  params.addChildAfter(thisTypeNode);    	compilable	timeout	11	1	replace
74	[BUG]  [BUGGY]  params.addChildAfter(params,  thisTypeNode);  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(params,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(params,  thisTypeNode);	  params.addChildAfter(thisTypeNode);    	compilable	timeout	11	1	replace
75	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  n);  [CE]  cannot  find  symbol  n  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(thisTypeNode,  n);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  n);	  params.addChildAfter(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  n	11	None	replace
76	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));	  params.addChildAfter(thisTypeNode);    	compilable	timeout	11	1	replace
77	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));	  params.addChildAfter(thisTypeNode);    	compilable	timeout	11	1	replace
78	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	14	1	add
79	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	14	1	add
80	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	14	1	add
81	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	14	1	add
82	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	14	1	add
83	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	14	1	add
84	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	14	1	add
85	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	14	1	add
86	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	14	1	add
87	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	14	1	add
88	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	14	1	add
89	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	14	1	add
90	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	add
91	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(source);	  params.removeChild(thisTypeNode);    timeout    	compilable	timeout	8	1	replace
92	[BUG]  [BUGGY]  params.removeChild(source);  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);	  params.removeChild(thisTypeNode);    timeout    	compilable	timeout	8	1	replace
93	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(params);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(params);	  params.removeChild(thisTypeNode);    timeout    	compilable	timeout	8	1	replace
94	[BUG]  [BUGGY]  params.removeChild(params);  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(params);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(params);	  params.removeChild(thisTypeNode);    timeout    	compilable	timeout	8	1	replace
95	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	12	1	add
96	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	12	1	add
97	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	12	1	add
98	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	12	1	add
99	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	12	1	add
100	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	12	1	add
101	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }	  timeout    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	12	None	add
102	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildIntoFront(thisTypeNode);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildIntoFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildIntoFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	add
103	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	12	1	add
104	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	12	1	add
105	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	12	1	add
106	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	12	1	add
107	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);	  timeout    	compilable	timeout	7	1	add
108	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);	  timeout    	compilable	timeout	7	1	add
109	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));	  timeout    	non-compiled	[CE]  cannot  find  symbol	7	None	add
110	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  Node  params.removeChild(thisTypeNode);  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  params.removeChild(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    Node  params.removeChild(thisTypeNode);	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
111	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
112	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [CE]  ';'  expected  [FE]                        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
113	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();	  timeout    	non-compiled	[CE]  cannot  find  symbol	7	None	add
114	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);  [CE]  ';'  expected  [FE]                            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
115	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	18	1	add
116	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	18	1	add
117	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	18	1	add
118	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	18	1	add
119	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	18	1	add
120	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	18	1	add
121	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	18	1	add
122	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	18	1	add
123	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	18	None	add
124	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setProperty(name,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setProperty(name,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setProperty(name,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	18	None	add
125	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new  Node(Token.NAME,  thisTypeNode));	  params.addChildToFront(source);    timeout    	compilable	timeout	2	1	replace
126	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  thisTypeNode));  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.NAME,  thisTypeNode));	  params.addChildToFront(source);    timeout    	compilable	timeout	2	1	replace
127	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new  Node(Token.EXPR_RESULT));	  params.addChildToFront(source);    timeout    	compilable	timeout	2	1	replace
128	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.EXPR_RESULT));	  params.addChildToFront(source);    timeout    	compilable	timeout	2	1	replace
129	[BUG]  [BUGGY]  Node  params  =  params.cloneTree();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  params  =  params.cloneTree();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  params.cloneTree();	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	19	None	replace
130	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    timeout    	compilable	timeout	19	1	replace
131	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    timeout    	compilable	timeout	19	1	replace
132	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setArg(false);  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setArg(false);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	add
133	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameter(false);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameter(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameter(false);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	add
134	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
135	[BUG]  [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToFront(source);  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
136	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
137	[BUG]  [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(source);  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
138	[BUG]  [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToFront(source);  [CE]  no  suitable  method  found  for  newString(int,JSType)  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToFront(source);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,JSType)	1	None	add
139	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,   "last-param ");  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,   "last-param ");  params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
140	[BUG]  [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,   "last-param ");  params.addChildToFront(source);  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,   "last-param ");  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,   "last-param ");  params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
141	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastParam();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  lastParam  =  thisTypeNode.getLastParam();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  thisTypeNode.getLastParam();	  n.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
142	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(lastParam);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(lastParam);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	7	None	add
143	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.removeChild(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.removeChild(lastParam);	  timeout    	compilable	timeout	7	1	add
144	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.removeChild(lastParam);  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.removeChild(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.removeChild(lastParam);	  timeout    	compilable	timeout	7	1	add
145	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.removeChild(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.removeChild(lastParam);	  timeout    	compilable	timeout	7	1	add
146	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.removeChild(lastParam);  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.removeChild(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.removeChild(lastParam);	  timeout    	compilable	timeout	7	1	add
147	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);	  timeout    	compilable	timeout	7	1	add
148	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  timeout  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);	  timeout    	compilable	timeout	7	1	add
149	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").getJSType();  params.removeChild(lastParam);  [CE]  incompatible  types  [FE]                        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").getJSType();  params.removeChild(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").getJSType();  params.removeChild(lastParam);	  timeout    	non-compiled	[CE]  incompatible  types	7	None	add
150	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.removeChild(lastParam);  [CE]  no  suitable  method  found  for  newString(int,JSType)  [FE]                          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.removeChild(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.removeChild(lastParam);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,JSType)	7	None	add
151	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(thisTypeNode);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(thisTypeNode);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	7	None	add
152	[BUG]  [BUGGY]  params.addChildToFront(lastParam,  thisTypeNode,  thisTypeNode);  [CE]  cannot  find  symbol  lastParam  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(lastParam,  thisTypeNode,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(lastParam,  thisTypeNode,  thisTypeNode);	  params.addChildToFront(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  lastParam	5	None	replace
153	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  thisTypeNode),  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  thisTypeNode),  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.NAME,  thisTypeNode),  thisTypeNode);	  params.addChildToFront(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	5	None	replace
154	[BUG]  [BUGGY]  params.addChildToFront(parent,  thisTypeNode,  thisTypeNode);  [CE]  cannot  find  symbol  parent  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(parent,  thisTypeNode,  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(parent,  thisTypeNode,  thisTypeNode);	  params.addChildToFront(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  parent	5	None	replace
155	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    timeout    	compilable	timeout	15	1	replace
156	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    timeout    	compilable	timeout	15	1	replace
157	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    timeout    	compilable	timeout	15	1	replace
158	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    timeout    	compilable	timeout	15	1	replace
159	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }	  timeout    	compilable	timeout	12	1	add
160	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }	  timeout    	compilable	timeout	12	1	add
161	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	12	1	add
162	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	12	1	add
163	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params  =  params.cloneTree();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params  =  params.cloneTree();	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    timeout    	compilable	timeout	19	1	replace
164	[BUG]  [BUGGY]  params  =  params.cloneTree();  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params  =  params.cloneTree();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  params.cloneTree();	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    timeout    	compilable	timeout	19	1	replace
165	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {	  timeout    	non-compiled	[CE]  	18	None	add
166	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  compiler);  [CE]  cannot  find  symbol  compiler  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(thisTypeNode,  compiler);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  compiler);	  params.addChildAfter(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  compiler	11	None	replace
167	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  firstParam);  [CE]  cannot  find  symbol  firstParam  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildAfter(thisTypeNode,  firstParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  firstParam);	  params.addChildAfter(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  firstParam	11	None	replace
168	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.addChildToBack(lastParam);	  timeout    	compilable	timeout	3	1	add
169	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.addChildToBack(lastParam);  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.addChildToBack(lastParam);	  timeout    	compilable	timeout	3	1	add
170	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToBack(lastParam);	  timeout    	compilable	timeout	3	1	add
171	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToBack(lastParam);  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToBack(lastParam);	  timeout    	compilable	timeout	3	1	add
172	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").getJSType();  params.addChildToBack(lastParam);  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").getJSType();  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").getJSType();  params.addChildToBack(lastParam);	  timeout    	non-compiled	[CE]  incompatible  types	3	None	add
173	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToBack(lastParam);  [CE]  no  suitable  method  found  for  newString(int,JSType)  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToBack(lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToBack(lastParam);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,JSType)	3	None	add
174	[BUG]  [BUGGY]  params.clear();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.clear();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.clear();	  params.removeChild(thisTypeNode);    timeout    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
175	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildrenToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildrenToFront(thisTypeNode);	  params.removeChild(thisTypeNode);    timeout    	compilable	timeout	8	1	replace
176	[BUG]  [BUGGY]  params.addChildrenToFront(thisTypeNode);  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildrenToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildrenToFront(thisTypeNode);	  params.removeChild(thisTypeNode);    timeout    	compilable	timeout	8	1	replace
177	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ");  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	        Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ");	  timeout    	compilable	timeout	9	1	add
178	[BUG]  [BUGGY]      Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ");  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ");  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	        Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ");	  timeout    	compilable	timeout	9	1	add
179	[BUG]  [BUGGY]      Node  paramsNode  =  Node.newString(Token.NAME,  getTypeOfThis());  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      Node  paramsNode  =  Node.newString(Token.NAME,  getTypeOfThis());  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	        Node  paramsNode  =  Node.newString(Token.NAME,  getTypeOfThis());	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	9	None	add
180	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	        Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ").cloneTree();	  timeout    	compilable	timeout	9	1	add
181	[BUG]  [BUGGY]      Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  timeout  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	        Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ").cloneTree();	  timeout    	compilable	timeout	9	1	add
182	[BUG]  [BUGGY]      Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	        Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	9	None	add
183	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	        Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	9	1	add
184	[BUG]  [BUGGY]      Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  timeout  [FE]                          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	        Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	9	1	add
185	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
186	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
187	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.FUNCTION),  thisTypeNode);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(new  Node(Token.FUNCTION),  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.FUNCTION),  thisTypeNode);	  params.addChildToBack(thisTypeNode);    timeout    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	4	None	replace
188	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME),  thisTypeNode);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(new  Node(Token.NAME),  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.NAME),  thisTypeNode);	  params.addChildToBack(thisTypeNode);    timeout    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	4	None	replace
189	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.NAME),  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(new  Node(Token.NAME),  thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.NAME),  thisTypeNode);	  params.addChildToFront(source);    timeout    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	2	None	replace
190	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.addChildToFront(thisTypeNode);  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.addChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	add
191	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildIntoFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildIntoFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildIntoFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	add
192	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameterType(false);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameterType(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameterType(false);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	add
193	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);	  timeout    	non-compiled	[CE]  	14	None	add
194	[BUG]  [BUGGY]  Node  params  =  params.cloneTree();  thisTypeNode.setOptionalArg(true);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  params  =  params.cloneTree();  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  params.cloneTree();  thisTypeNode.setOptionalArg(true);	      timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	10	None	replace
195	[BUG]  [BUGGY]  Node  params  =  params.cloneTree();  thisTypeNode.setOptionalArg(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  params  =  params.cloneTree();  thisTypeNode.setOptionalArg(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  params.cloneTree();  thisTypeNode.setOptionalArg(false);	      timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	10	None	replace
196	[BUG]  [BUGGY]  Node  params  =  params.cloneTree();  thisTypeNode.setVarArgs(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  params  =  params.cloneTree();  thisTypeNode.setVarArgs(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  params.cloneTree();  thisTypeNode.setVarArgs(false);	      timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	10	None	replace
197	[BUG]  [BUGGY]  Node  params  =  params.cloneTree();  thisTypeNode.setVarArgs(true);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  params  =  params.cloneTree();  thisTypeNode.setVarArgs(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  params.cloneTree();  thisTypeNode.setVarArgs(true);	      timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	10	None	replace
198	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildBefore(thisTypeNode);  }  [CE]  method  addChildBefore  in  class  Node  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildBefore(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildBefore(thisTypeNode);  }	  timeout    	non-compiled	[CE]  method  addChildBefore  in  class  Node  cannot  be  applied  to  given  types;	12	None	add
199	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildrenToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildrenToFront(thisTypeNode);  }	  timeout    	compilable	timeout	12	1	add
200	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildrenToFront(thisTypeNode);  }  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildrenToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildrenToFront(thisTypeNode);  }	  timeout    	compilable	timeout	12	1	add
201	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildAfter(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildAfter(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildAfter(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	12	None	add
202	[BUG]  [BUGGY]  thisTypeNode.setChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  thisTypeNode.setChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setChildToFront(thisTypeNode);	  n.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
203	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  thisTypeNode.getLastChild();	  n.addChildToFront(thisTypeNode);    	compilable	timeout	6	1	replace
204	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  thisTypeNode.getLastChild();	  n.addChildToFront(thisTypeNode);    	compilable	timeout	6	1	replace
205	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  lastParam);  [CE]  cannot  find  symbol  lastParam  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(thisTypeNode,  lastParam);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  lastParam);	  params.addChildToFront(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  lastParam	5	None	replace
206	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  params.addChildToBack(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  params.addChildToBack(thisTypeNode);  }	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
207	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  params.addChildToBack(thisTypeNode);  }  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  params.addChildToBack(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  params.addChildToBack(thisTypeNode);  }	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
208	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
209	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
210	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
211	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
212	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
213	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
214	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
215	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  params.addChildToBack(thisTypeNode);    timeout    	compilable	timeout	4	1	replace
216	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
217	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
218	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
219	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);  params.removeChild(thisTypeNode);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);  params.removeChild(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);    ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);  params.removeChild(thisTypeNode);	  timeout    	non-compiled	[CE]  cannot  find  symbol	7	None	add
220	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    timeout    	compilable	timeout	13	1	replace
221	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    timeout    	compilable	timeout	13	1	replace
222	[BUG]  [BUGGY]      thisTypeNode.setGenericParameter(getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]      thisTypeNode.setGenericParameter(getGenericParameterType(0));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	        thisTypeNode.setGenericParameter(getGenericParameterType(0));	  timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	add
223	[BUG]  [BUGGY]  params.removeChild(paramsNode);  [CE]  cannot  find  symbol  paramsNode  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.removeChild(paramsNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(paramsNode);	  params.removeChild(thisTypeNode);    timeout    	non-compiled	[CE]  cannot  find  symbol  paramsNode	8	None	replace
224	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  n.removeChild(params);  params.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  n.removeChild(params);  params.addChildToBack(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    n.removeChild(params);  params.addChildToBack(thisTypeNode);	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	3	None	add
225	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	3	1	add
226	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  timeout  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	3	1	add
227	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  n.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  n.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    n.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	3	None	add
228	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  n.addChildToFront(thisTypeNode);  params.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  n.addChildToFront(thisTypeNode);  params.addChildToBack(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);  params.addChildToBack(thisTypeNode);	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	3	None	add
229	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  n.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  n.addChildToBack(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    n.addChildToBack(thisTypeNode);	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	3	None	add
230	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  n.addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToBack(thisTypeNode);  n.addChildToFront(thisTypeNode);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	3	None	add
231	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	1	1	add
232	[BUG]  [BUGGY]  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	1	1	add
233	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  thisTypeNode.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    thisTypeNode.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
234	[BUG]  [BUGGY]  params.addChildToFront(source);  thisTypeNode.addChildToFront(source);  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  thisTypeNode.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    thisTypeNode.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
235	[BUG]  [BUGGY]  params.addChildToFront(source);  n.removeChild(params);  params.addChildToFront(source);  [CE]  cannot  find  symbol  n  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  n.removeChild(params);  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    n.removeChild(params);  params.addChildToFront(source);	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	1	None	add
236	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
237	[BUG]  [BUGGY]  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  timeout  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);	  timeout    	compilable	timeout	1	1	add
238	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	1	1	add
239	[BUG]  [BUGGY]  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	1	1	add
240	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    timeout    	compilable	timeout	15	1	replace
241	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    timeout    	compilable	timeout	15	1	replace
242	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME, "thisType ").cloneTree();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]            ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME, "thisType ").cloneTree();  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME, "thisType ").cloneTree();	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	17	None	replace
243	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	18	None	add
244	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setPrimitiveArg(true);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setPrimitiveArg(true);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setPrimitiveArg(true);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	18	None	add
245	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	18	None	add
246	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	18	1	add
247	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                    ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	18	1	add
248	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(new  Node(Token.VAR,  thisTypeNode));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new  Node(Token.VAR,  thisTypeNode));	  params.addChildToFront(source);    timeout    	compilable	timeout	2	1	replace
249	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.VAR,  thisTypeNode));  timeout  [FE]        ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(new  Node(Token.VAR,  thisTypeNode));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.VAR,  thisTypeNode));	  params.addChildToFront(source);    timeout    	compilable	timeout	2	1	replace
250	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));	  params.addChildToFront(source);    timeout    	compilable	timeout	2	1	replace
251	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  timeout  [FE]          ComparisonFailure    [CONTEXT]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));    [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [BUGGY]    thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));	  params.addChildToFront(source);    timeout    	compilable	timeout	2	1	replace
