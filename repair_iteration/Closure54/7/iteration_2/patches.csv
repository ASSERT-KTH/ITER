bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	246	1	add
2	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	246	1	add
3	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	246	1	add
4	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	246	1	add
5	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	246	1	add
6	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	246	1	add
7	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	246	1	add
8	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	246	1	add
9	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	246	1	add
10	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	246	1	add
11	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	246	1	add
12	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	246	1	add
13	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	246	1	add
14	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	246	1	add
15	[BUG]  [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ");  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType   ");  [CE]  variable  paramsNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ");  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType   ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ");    Node  paramsNode  =  Node.newString(Token.NAME,   "thisType   ");	  timeout    	non-compiled	[CE]  variable  paramsNode  is  already  defined  in  method  getPropertyType(String)	177	None	add
16	[BUG]  [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ");  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType. ");  [CE]  variable  paramsNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ");  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType. ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ");    Node  paramsNode  =  Node.newString(Token.NAME,   "thisType. ");	  timeout    	non-compiled	[CE]  variable  paramsNode  is  already  defined  in  method  getPropertyType(String)	177	None	add
17	[BUG]  [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ");  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType "));  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ");  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType "));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ");    Node  paramsNode  =  Node.newString(Token.NAME,   "thisType "));	  timeout    	non-compiled	[CE]  	177	None	add
18	[BUG]  [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ");  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ".);  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ");  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ".);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ");    Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ".);	  timeout    	non-compiled	[CE]  <identifier>  expected	177	None	add
19	[BUG]  [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ");  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ",  true);  [CE]  variable  paramsNode  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ");  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ",  true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ");    Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ",  true);	  timeout    	non-compiled	[CE]  variable  paramsNode  is  already  defined  in  method  getPropertyType(String)	177	None	add
20	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);	  timeout    	compilable	timeout	238	1	add
21	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);	  timeout    	compilable	timeout	238	1	add
22	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	238	1	add
23	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	238	1	add
24	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	238	1	add
25	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	238	1	add
26	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	238	1	add
27	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	238	1	add
28	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	non-compiled	[CE]  cannot  find  symbol	238	None	add
29	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  Node  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  Node  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    Node  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	non-compiled	[CE]  ';'  expected	238	None	add
30	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  Node  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);  Node  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(true);    Node  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	non-compiled	[CE]  ';'  expected	238	None	add
31	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	47	None	add
32	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	47	None	add
33	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	47	1	add
34	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  params.addChildToFront(source);  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	47	1	add
35	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  params  =  Node.newString(Token.NAME,  name);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  params  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(source);    Node  params  =  Node.newString(Token.NAME,  name);	  timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	47	None	add
36	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  lastParam);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  lastParam);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	47	None	add
37	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  source  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(source);    Node  source  =  Node.newString(Token.NAME,  name);	  timeout    	compilable	timeout	47	1	add
38	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  source  =  Node.newString(Token.NAME,  name);  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  source  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(source);    Node  source  =  Node.newString(Token.NAME,  name);	  timeout    	compilable	timeout	47	1	add
39	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setOptionalArg(true);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setOptionalArg(true);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	47	None	add
40	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(source);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	47	None	add
41	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }	  if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    timeout    	non-compiled	[CE]  	213	None	replace
42	[BUG]  [BUGGY]  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);	  params.removeChild(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withReturnType(getReturnType()),    thisTypeNode);    	non-compiled	[CE]  ';'  expected	112	None	replace
43	[BUG]  [BUGGY]  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);	  params.removeChild(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withReturnType(getReturnType()),    thisTypeNode);    	non-compiled	[CE]  ';'  expected	112	None	replace
44	[BUG]  [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);	  params.removeChild(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withReturnType(getReturnType()),    thisTypeNode);    	non-compiled	[CE]  ';'  expected	112	None	replace
45	[BUG]  [BUGGY]  Node  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);	  params.removeChild(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withReturnType(getReturnType()),    thisTypeNode);    	non-compiled	[CE]  ';'  expected	112	None	replace
46	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastParam();  params.addChildToFront(lastParam);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastParam();  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  thisTypeNode.getLastParam();  params.addChildToFront(lastParam);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    params.addChildToBack(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	228	None	replace
47	[BUG]  [BUGGY]  n.addChildToFront(thisTypeNode);  params.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.addChildToFront(thisTypeNode);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.addChildToFront(thisTypeNode);  params.addChildToBack(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    params.addChildToBack(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  n	228	None	replace
48	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToFront(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToFront(params);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    params.addChildToBack(thisTypeNode);    	compilable	timeout	228	1	replace
49	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToFront(params);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToFront(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToFront(params);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    params.addChildToBack(thisTypeNode);    	compilable	timeout	228	1	replace
50	[BUG]  [BUGGY]  Node  lastParam  =  params.next();  thisTypeNode.addChildToFront(lastParam);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  params.next();  thisTypeNode.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  params.next();  thisTypeNode.addChildToFront(lastParam);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    params.addChildToBack(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	228	None	replace
51	[BUG]  [BUGGY]  params.addChildToBack(source,  thisTypeNode);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source,  thisTypeNode);	  params.addChildToBack(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	32	None	replace
52	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode,  name);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode,  name);	  params.addChildToBack(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	32	None	replace
53	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode,  source);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode,  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode,  source);	  params.addChildToBack(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	32	None	replace
54	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode,  params);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode,  params);	  params.addChildToBack(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	32	None	replace
55	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode,  n);  [CE]  cannot  find  symbol  n  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode,  n);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode,  n);	  params.addChildToBack(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  n	32	None	replace
56	[BUG]  [BUGGY]  params.addChildToBack(params,  thisTypeNode);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(params,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(params,  thisTypeNode);	  params.addChildToBack(thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	32	None	replace
57	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	compilable	timeout	42	1	replace
58	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	compilable	timeout	42	1	replace
59	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.addChildToFront(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	compilable	timeout	42	1	replace
60	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.addChildToFront(lastParam);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.addChildToFront(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	compilable	timeout	42	1	replace
61	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	compilable	timeout	42	1	replace
62	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToFront(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	compilable	timeout	42	1	replace
63	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  name);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	compilable	timeout	42	1	replace
64	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	compilable	timeout	42	1	replace
65	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	42	None	replace
66	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.addChildToBack(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	compilable	timeout	42	1	replace
67	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.addChildToBack(lastParam);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.addChildToBack(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToFront(lastParam);    timeout    	compilable	timeout	42	1	replace
68	[BUG]  [BUGGY]  n.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  n  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	237	None	replace
69	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);	  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    timeout    	compilable	timeout	237	1	replace
70	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);	  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    timeout    	compilable	timeout	237	1	replace
71	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");	  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    timeout    	compilable	timeout	237	1	replace
72	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");	  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    timeout    	compilable	timeout	237	1	replace
73	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  params.addChildAfter(thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,    thisTypeNode);    params.addChildAfter(thisTypeNode,  thisTypeNode);	  timeout    	compilable	timeout	68	1	add
74	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  params.addChildAfter(thisTypeNode,  thisTypeNode);  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  params.addChildAfter(thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    thisTypeNode);    params.addChildAfter(thisTypeNode,  thisTypeNode);	  timeout    	compilable	timeout	68	1	add
75	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildAfter(lastParam,  thisTypeNode);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildAfter(lastParam,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildAfter(lastParam,  thisTypeNode);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	68	None	add
76	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  params.addChildAfter(thisTypeNode,  thisTypeNode);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  params.addChildAfter(thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    thisTypeNode);    Node  params.addChildAfter(thisTypeNode,  thisTypeNode);	  timeout    	non-compiled	[CE]  ';'  expected	68	None	add
77	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildAfter(lastParam,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,    thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildAfter(lastParam,  thisTypeNode);	  timeout    	compilable	timeout	68	1	add
78	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildAfter(lastParam,  thisTypeNode);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildAfter(lastParam,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildAfter(lastParam,  thisTypeNode);	  timeout    	compilable	timeout	68	1	add
79	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildAfter(lastParam,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,    thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildAfter(lastParam,  thisTypeNode);	  timeout    	compilable	timeout	68	1	add
80	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildAfter(lastParam,  thisTypeNode);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildAfter(lastParam,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildAfter(lastParam,  thisTypeNode);	  timeout    	compilable	timeout	68	1	add
81	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "last-param ");  params.addChildAfter(lastParam,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,    thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "last-param ");  params.addChildAfter(lastParam,  thisTypeNode);	  timeout    	compilable	timeout	68	1	add
82	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "last-param ");  params.addChildAfter(lastParam,  thisTypeNode);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "last-param ");  params.addChildAfter(lastParam,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "last-param ");  params.addChildAfter(lastParam,  thisTypeNode);	  timeout    	compilable	timeout	68	1	add
83	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  params.addChildBefore(thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,    thisTypeNode);    params.addChildBefore(thisTypeNode,  thisTypeNode);	  timeout    	compilable	timeout	68	1	add
84	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  params.addChildBefore(thisTypeNode,  thisTypeNode);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode);  params.addChildBefore(thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    thisTypeNode);    params.addChildBefore(thisTypeNode,  thisTypeNode);	  timeout    	compilable	timeout	68	1	add
85	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);  params.addChildToFront(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    	compilable	timeout	230	1	replace
86	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToFront(thisTypeNode);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);  params.addChildToFront(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    	compilable	timeout	230	1	replace
87	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToFront(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    	compilable	timeout	230	1	replace
88	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToFront(thisTypeNode);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToFront(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    	compilable	timeout	230	1	replace
89	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  thisTypeNode.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(source);  thisTypeNode.addChildToFront(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    	compilable	timeout	230	1	replace
90	[BUG]  [BUGGY]  params.addChildToBack(source);  thisTypeNode.addChildToFront(thisTypeNode);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  thisTypeNode.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);  thisTypeNode.addChildToFront(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    	compilable	timeout	230	1	replace
91	[BUG]  [BUGGY]  Node  lastParam  =  params.next();  thisTypeNode.addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  params.next();  thisTypeNode.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  params.next();  thisTypeNode.addChildToFront(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
92	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);	  timeout    	compilable	timeout	231	1	add
93	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);	  timeout    	compilable	timeout	231	1	add
94	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	231	1	add
95	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	231	1	add
96	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	231	1	add
97	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	231	1	add
98	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	231	1	add
99	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	231	1	add
100	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	231	1	add
101	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	231	1	add
102	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  params.addChildToFront(source);	  timeout    	compilable	timeout	231	1	add
103	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  params.addChildToFront(source);	  timeout    	compilable	timeout	231	1	add
104	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	231	1	add
105	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	231	1	add
106	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToFront(lastParam);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToFront(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    params.addChildToFront(lastParam);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	39	None	replace
107	[BUG]  [BUGGY]  params.addChildToFront(lastParam);  [CE]  cannot  find  symbol  lastParam  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    params.addChildToFront(lastParam);    	non-compiled	[CE]  cannot  find  symbol  lastParam	39	None	replace
108	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  thisTypeNode.addChildToFront(lastParam);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  thisTypeNode.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  thisTypeNode.addChildToFront(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    params.addChildToFront(lastParam);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	39	None	replace
109	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  thisTypeNode);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  thisTypeNode);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    params.addChildToFront(lastParam);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)	39	None	replace
110	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  if(lastParam!=  null)  {  params.addChildToFront(lastParam);  }  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  if(lastParam!=  null)  {  params.addChildToFront(lastParam);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  if(lastParam!=  null)  {  params.addChildToFront(lastParam);  }	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    params.addChildToFront(lastParam);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	39	None	replace
111	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  thisTypeNode);  params.addChildToFront(lastParam);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  thisTypeNode);  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  thisTypeNode);  params.addChildToFront(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    params.addChildToFront(lastParam);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)	39	None	replace
112	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(source);	  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);    timeout    	compilable	timeout	234	1	replace
113	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(source);  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(source);	  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);    timeout    	compilable	timeout	234	1	replace
114	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);    timeout    	compilable	timeout	234	1	replace
115	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);    timeout    	compilable	timeout	234	1	replace
116	[BUG]  [BUGGY]  params.addChildToFront(lastParam);  thisTypeNode.addChildToFront(source);  [CE]  cannot  find  symbol  lastParam  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(lastParam);  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(lastParam);  thisTypeNode.addChildToFront(source);	  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);    timeout    	non-compiled	[CE]  cannot  find  symbol  lastParam	234	None	replace
117	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.addChildToFront(source);	  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);    timeout    	compilable	timeout	234	1	replace
118	[BUG]  [BUGGY]  thisTypeNode.addChildToFront(source);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.addChildToFront(source);	  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);    timeout    	compilable	timeout	234	1	replace
119	[BUG]  [BUGGY]  n.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(source);  [CE]  cannot  find  symbol  n  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(source);	  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	234	None	replace
120	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,   "params ").cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  paramsNode  =  Node.newString(Token.NAME,   "params ").cloneTree();	          Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ").cloneTree();    timeout    	compilable	timeout	181	1	replace
121	[BUG]  [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,   "params ").cloneTree();  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,   "params ").cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  paramsNode  =  Node.newString(Token.NAME,   "params ").cloneTree();	          Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ").cloneTree();    timeout    	compilable	timeout	181	1	replace
122	[BUG]  [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  getTypeOfThis()).cloneTree();  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  getTypeOfThis()).cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  paramsNode  =  Node.newString(Token.NAME,  getTypeOfThis()).cloneTree();	          Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ").cloneTree();    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	181	None	replace
123	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  name).cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  paramsNode  =  Node.newString(Token.NAME,  name).cloneTree();	          Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ").cloneTree();    timeout    	compilable	timeout	181	1	replace
124	[BUG]  [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  name).cloneTree();  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  name).cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  paramsNode  =  Node.newString(Token.NAME,  name).cloneTree();	          Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ").cloneTree();    timeout    	compilable	timeout	181	1	replace
125	[BUG]  [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ").clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ").clone();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  paramsNode  =  Node.newString(Token.NAME,   "thisType ").clone();	          Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ").cloneTree();    timeout    	non-compiled	[CE]  clone()  has  protected  access  in  Object	181	None	replace
126	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	210	1	add
127	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	210	1	add
128	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	210	1	add
129	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	210	1	add
130	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	210	1	add
131	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	210	1	add
132	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	210	1	add
133	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	210	1	add
134	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	210	1	add
135	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	210	1	add
136	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  thisTypeNode.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	210	1	add
137	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  thisTypeNode.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  thisTypeNode.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	210	1	add
138	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }	  timeout    	compilable	timeout	210	1	add
139	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }	  timeout    	compilable	timeout	210	1	add
140	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	3	1	add
141	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	3	1	add
142	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	3	1	add
143	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	3	1	add
144	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	3	1	add
145	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	3	1	add
146	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	3	1	add
147	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	3	1	add
148	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  Node.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  [CE]  non-static  method  setOptionalArg(boolean)  cannot  be  referenced  from  a  static  context  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  Node.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    Node.setOptionalArg(true);  params.addChildToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  non-static  method  setOptionalArg(boolean)  cannot  be  referenced  from  a  static  context	3	None	add
149	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	3	1	add
150	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	3	1	add
151	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	3	1	add
152	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    if(params.hasChildren())  {  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	3	1	add
153	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	3	1	add
154	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	3	1	add
155	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  ';'  expected	216	None	replace
156	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  ';'  expected	216	None	replace
157	[BUG]  [BUGGY]  n.removeChild(params);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.removeChild(params);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.removeChild(params);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  ';'  expected	216	None	replace
158	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  	216	None	replace
159	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  ';'  expected	216	None	replace
160	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build()  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build()  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build()	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  ';'  expected	216	None	replace
161	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  params.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	171	1	replace
162	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  params.addChildToBack(lastParam);  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  params.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	171	1	replace
163	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	171	1	replace
164	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	171	1	replace
165	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  thisTypeNode.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  thisTypeNode.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	171	1	replace
166	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  thisTypeNode.addChildToBack(lastParam);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  thisTypeNode.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  thisTypeNode.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	171	1	replace
167	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.cloneTree();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  thisTypeNode.cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  thisTypeNode.cloneTree();	  params.addChildToBack(thisTypeNode);    Node    params.addChildToBack(thisTypeNode);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	25	None	replace
168	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.addChildToBack(params);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  thisTypeNode.addChildToBack(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  thisTypeNode.addChildToBack(params);	  params.addChildToBack(thisTypeNode);    Node    params.addChildToBack(thisTypeNode);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	25	None	replace
169	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.getParent();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  thisTypeNode.getParent();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  thisTypeNode.getParent();	  params.addChildToBack(thisTypeNode);    Node    params.addChildToBack(thisTypeNode);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	25	None	replace
170	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.getParameterTypes();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  thisTypeNode.getParameterTypes();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  thisTypeNode.getParameterTypes();	  params.addChildToBack(thisTypeNode);    Node    params.addChildToBack(thisTypeNode);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	25	None	replace
171	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  params);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	35	None	replace
172	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  name);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	35	None	replace
173	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  source);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	35	None	replace
174	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),   "thisType ");  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),   "thisType ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),   "thisType ");	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	35	None	replace
175	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  null);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  null);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis(),  null);	  Node    thisTypeNode    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	35	None	replace
176	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    params.addChildToFront(source);    timeout    	compilable	timeout	137	1	replace
177	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(lastParam);  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(lastParam);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    params.addChildToFront(source);    timeout    	compilable	timeout	137	1	replace
178	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(source);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    params.addChildToFront(source);    timeout    	compilable	timeout	137	1	replace
179	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(source);  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  params.addChildToFront(source);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    params.addChildToFront(source);    timeout    	compilable	timeout	137	1	replace
180	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name.toString());  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  name.toString());  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    params.addChildToFront(source);    timeout    	compilable	timeout	137	1	replace
181	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name.toString());  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name.toString());  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name.toString());  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    params.addChildToFront(source);    timeout    	compilable	timeout	137	1	replace
182	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name.toString());  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  name.toString());  params.addChildToFront(source);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    params.addChildToFront(source);    timeout    	compilable	timeout	137	1	replace
183	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name.toString());  params.addChildToFront(source);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name.toString());  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name.toString());  params.addChildToFront(source);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    params.addChildToFront(source);    timeout    	compilable	timeout	137	1	replace
184	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  thisTypeNode,  params);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  thisTypeNode,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  thisTypeNode,  params);	  params.addChildToFront(thisTypeNode,    params);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	60	None	replace
185	[BUG]  [BUGGY]  params.addChildToFront(source,  thisTypeNode,  params);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source,  thisTypeNode,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source,  thisTypeNode,  params);	  params.addChildToFront(thisTypeNode,    params);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	60	None	replace
186	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  source,  params);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  source,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  source,  params);	  params.addChildToFront(thisTypeNode,    params);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	60	None	replace
187	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  name,  params);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  name,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  name,  params);	  params.addChildToFront(thisTypeNode,    params);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	60	None	replace
188	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  n,  params);  [CE]  cannot  find  symbol  n  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  n,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  n,  params);	  params.addChildToFront(thisTypeNode,    params);    	non-compiled	[CE]  cannot  find  symbol  n	60	None	replace
189	[BUG]  [BUGGY]  params.addChildToFront(params,  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(params,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(params,  thisTypeNode);	  params.addChildToFront(thisTypeNode,    params);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	60	None	replace
190	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameterType(false);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameterType(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameterType(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setParameterType(false);    }    	non-compiled	[CE]  cannot  find  symbol	192	None	replace
191	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.addChildToFront(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.addChildToFront(params);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setParameterType(false);    }    	compilable	timeout	192	1	replace
192	[BUG]  [BUGGY]  thisTypeNode.addChildToFront(params);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.addChildToFront(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.addChildToFront(params);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setParameterType(false);    }    	compilable	timeout	192	1	replace
193	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameterType(true);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameterType(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameterType(true);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setParameterType(false);    }    	non-compiled	[CE]  cannot  find  symbol	192	None	replace
194	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  registry);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  registry);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  registry);	  params.addChildAfter(thisTypeNode,    compiler);    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	166	None	replace
195	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  register);  [CE]  cannot  find  symbol  register  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  register);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  register);	  params.addChildAfter(thisTypeNode,    compiler);    	non-compiled	[CE]  cannot  find  symbol  register	166	None	replace
196	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.cloneTree();  thisTypeNode.setOptionalArg(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  thisTypeNode.cloneTree();  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  thisTypeNode.cloneTree();  thisTypeNode.setOptionalArg(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setOptionalArg(false);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	195	None	replace
197	[BUG]  [BUGGY]  Node  params  =  lastParam.cloneTree();  thisTypeNode.setOptionalArg(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  lastParam.cloneTree();  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  lastParam.cloneTree();  thisTypeNode.setOptionalArg(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setOptionalArg(false);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	195	None	replace
198	[BUG]  [BUGGY]  Node  params  =  n.cloneTree();  thisTypeNode.setOptionalArg(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  n.cloneTree();  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  n.cloneTree();  thisTypeNode.setOptionalArg(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setOptionalArg(false);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	195	None	replace
199	[BUG]  [BUGGY]  Node  params  =  nodes.cloneTree();  thisTypeNode.setOptionalArg(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  nodes.cloneTree();  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  nodes.cloneTree();  thisTypeNode.setOptionalArg(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setOptionalArg(false);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	195	None	replace
200	[BUG]  [BUGGY]  Node  params  =  null;  thisTypeNode.setOptionalArg(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  null;  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  null;  thisTypeNode.setOptionalArg(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setOptionalArg(false);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	195	None	replace
201	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToBack(lastParam);    timeout    	compilable	timeout	24	1	replace
202	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.addChildToBack(lastParam);    timeout    	compilable	timeout	24	1	replace
203	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.addChildToBack(thisTypeNode);	  n.addChildToBack(thisTypeNode);    	compilable	timeout	33	1	replace
204	[BUG]  [BUGGY]  thisTypeNode.addChildToBack(thisTypeNode);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.addChildToBack(thisTypeNode);	  n.addChildToBack(thisTypeNode);    	compilable	timeout	33	1	replace
205	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.addChildToBack(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.addChildToBack(params);	  n.addChildToBack(thisTypeNode);    	compilable	timeout	33	1	replace
206	[BUG]  [BUGGY]  thisTypeNode.addChildToBack(params);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.addChildToBack(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.addChildToBack(params);	  n.addChildToBack(thisTypeNode);    	compilable	timeout	33	1	replace
207	[BUG]  [BUGGY]  node.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  node  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  node.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	node.addChildToBack(thisTypeNode);	  n.addChildToBack(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  node	33	None	replace
208	[BUG]  [BUGGY]  Node.addChildToBack(thisTypeNode);  [CE]  non-static  method  addChildToBack(Node)  cannot  be  referenced  from  a  static  context  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node.addChildToBack(thisTypeNode);	  n.addChildToBack(thisTypeNode);    	non-compiled	[CE]  non-static  method  addChildToBack(Node)  cannot  be  referenced  from  a  static  context	33	None	replace
209	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);	  timeout    	compilable	timeout	107	1	add
210	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);	  timeout    	compilable	timeout	107	1	add
211	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);	  timeout    	compilable	timeout	107	1	add
212	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);	  timeout    	compilable	timeout	107	1	add
213	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	107	1	add
214	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.addChildToFront(thisTypeNode);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	107	1	add
215	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  ParamBuilder.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  ParamBuilder  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  ParamBuilder.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  ParamBuilder.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	non-compiled	[CE]  cannot  find  symbol  ParamBuilder	107	None	add
216	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	107	1	add
217	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.removeChild(thisTypeNode);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	107	1	add
218	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.replaceChild(params,  new  FunctionBuilder(registry).withParamsNode(params)).build(),  source);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.replaceChild(params,  new  FunctionBuilder(registry).withParamsNode(params)).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.replaceChild(params,  new  FunctionBuilder(registry).withParamsNode(params)).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	107	None	add
219	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.replaceChild(params,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  [CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.replaceChild(params,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.replaceChild(params,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);	  timeout    	non-compiled	[CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;	107	None	add
220	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.replaceChild(params,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);  params.replaceChild(params,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        params.removeChild(thisTypeNode);    params.replaceChild(params,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);	  timeout    	non-compiled	[CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;	107	None	add
221	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,     "thisType   ");  params.removeChild(lastParam);  params.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.removeChild(lastParam);    params.removeChild(thisTypeNode);	  timeout    	compilable	timeout	145	1	add
222	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,     "thisType   ");  params.removeChild(lastParam);  params.removeChild(thisTypeNode);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,     "thisType   ");  params.removeChild(lastParam);  params.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.removeChild(lastParam);    params.removeChild(thisTypeNode);	  timeout    	compilable	timeout	145	1	add
223	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,     "thisType   ");  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,     "thisType   ");  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.removeChild(lastParam);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	145	None	add
224	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,     "thisType   ");  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.removeChild(lastParam);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,     "thisType   ");  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.removeChild(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.removeChild(lastParam);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.removeChild(lastParam);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	145	None	add
225	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,     "thisType   ");  params.removeChild(lastParam);  Node  params  =  Node.newString(Token.NAME,   "thisType ");  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,     "thisType   ");  params.removeChild(lastParam);  Node  params  =  Node.newString(Token.NAME,   "thisType ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.removeChild(lastParam);    Node  params  =  Node.newString(Token.NAME,   "thisType ");	  timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	145	None	add
226	[BUG]  [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ").cloneTree();  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType   ").cloneTree();  [CE]  variable  paramsNode  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ").cloneTree();  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType   ").cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ").cloneTree();    Node  paramsNode  =  Node.newString(Token.NAME,   "thisType   ").cloneTree();	  timeout    	non-compiled	[CE]  variable  paramsNode  is  already  defined  in  method  getPropertyType(String)	180	None	add
227	[BUG]  [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ").cloneTree();  Node  paramsNode  =  Node.newString(Token.NAME,  thisType   ").cloneTree();  [CE]  unclosed  string  literal  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ").cloneTree();  Node  paramsNode  =  Node.newString(Token.NAME,  thisType   ").cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ").cloneTree();    Node  paramsNode  =  Node.newString(Token.NAME,  thisType   ").cloneTree();	  timeout    	non-compiled	[CE]  unclosed  string  literal	180	None	add
228	[BUG]  [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ").cloneTree();  Node  paramsNode  =  Node.newString(Token.NAME,. "thisType   ").cloneTree();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ").cloneTree();  Node  paramsNode  =  Node.newString(Token.NAME,. "thisType   ").cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ").cloneTree();    Node  paramsNode  =  Node.newString(Token.NAME,. "thisType   ").cloneTree();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	180	None	add
229	[BUG]  [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ").cloneTree();  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType. ").cloneTree();  [CE]  variable  paramsNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  paramsNode  =  Node.newString(Token.NAME,     "thisType   ").cloneTree();  Node  paramsNode  =  Node.newString(Token.NAME,   "thisType. ").cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    paramsNode    =    Node.newString(Token.NAME,       "thisType   ").cloneTree();    Node  paramsNode  =  Node.newString(Token.NAME,   "thisType. ").cloneTree();	  timeout    	non-compiled	[CE]  variable  paramsNode  is  already  defined  in  method  getPropertyType(String)	180	None	add
230	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  params.addChildrenToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildrenToFront(thisTypeNode);    params.addChildrenToFront(thisTypeNode);	  timeout    	compilable	timeout	175	1	add
231	[BUG]  [BUGGY]  params.addChildrenToFront(thisTypeNode);  params.addChildrenToFront(thisTypeNode);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  params.addChildrenToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildrenToFront(thisTypeNode);    params.addChildrenToFront(thisTypeNode);	  timeout    	compilable	timeout	175	1	add
232	[BUG]  [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildrenToFront(lastParam);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildrenToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildrenToFront(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildrenToFront(lastParam);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	175	None	add
233	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildrenToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildrenToFront(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildrenToFront(lastParam);	  timeout    	compilable	timeout	175	1	add
234	[BUG]  [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildrenToFront(lastParam);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildrenToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildrenToFront(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.addChildrenToFront(lastParam);	  timeout    	compilable	timeout	175	1	add
235	[BUG]  [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  params.addChildrenToFront(thisTypeNode);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  params.addChildrenToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildrenToFront(thisTypeNode);    Node  params.addChildrenToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  ';'  expected	175	None	add
236	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.addChildrenToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildrenToFront(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.addChildrenToFront(lastParam);	  timeout    	compilable	timeout	175	1	add
237	[BUG]  [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.addChildrenToFront(lastParam);  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.addChildrenToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildrenToFront(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,   "thisType ").cloneTree();  params.addChildrenToFront(lastParam);	  timeout    	compilable	timeout	175	1	add
238	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildrenToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildrenToFront(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildrenToFront(lastParam);	  timeout    	compilable	timeout	175	1	add
239	[BUG]  [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildrenToFront(lastParam);  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildrenToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildrenToFront(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildrenToFront(lastParam);	  timeout    	compilable	timeout	175	1	add
240	[BUG]  [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildrenToFront(thisTypeNode);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildrenToFront(thisTypeNode);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildrenToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildrenToFront(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildrenToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	175	None	add
241	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  params.addChildToFront(source);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,       "last-param   ");    params.addChildToFront(source);    timeout    	compilable	timeout	140	1	replace
242	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  params.addChildToFront(source);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  params.addChildToFront(source);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,       "last-param   ");    params.addChildToFront(source);    timeout    	compilable	timeout	140	1	replace
243	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  thisTypeNode.addChildToFront(source);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,       "last-param   ");    params.addChildToFront(source);    timeout    	compilable	timeout	140	1	replace
244	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  thisTypeNode.addChildToFront(source);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  thisTypeNode.addChildToFront(source);	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,       "last-param   ");    params.addChildToFront(source);    timeout    	compilable	timeout	140	1	replace
245	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME, "last-param ");	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,       "last-param   ");    params.addChildToFront(source);    timeout    	compilable	timeout	140	1	replace
246	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME, "last-param ");	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,       "last-param   ");    params.addChildToFront(source);    timeout    	compilable	timeout	140	1	replace
247	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,       "last-param   ");    params.addChildToFront(source);    timeout    	compilable	timeout	140	1	replace
248	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME, "last-param ");  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToFront(source);    Node    lastParam    =    Node.newString(Token.NAME,       "last-param   ");    params.addChildToFront(source);    timeout    	compilable	timeout	140	1	replace
249	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);	  timeout    	compilable	timeout	18	1	add
250	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);	  timeout    	compilable	timeout	18	1	add
251	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	18	1	add
252	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	18	1	add
253	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);	  timeout    	compilable	timeout	18	1	add
254	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);	  timeout    	compilable	timeout	18	1	add
255	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  params.addChildToBack(thisTypeNode);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  params.addChildToBack(thisTypeNode);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	18	None	add
256	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	18	1	add
257	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToFront(thisTypeNode);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	18	1	add
258	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(thisTypeNode);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(thisTypeNode);	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	18	None	add
259	[BUG]  [BUGGY]  params.addChildToBack(lastParam);  [CE]  cannot  find  symbol  lastParam  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.getJSType());    params.addChildToBack(lastParam);    	non-compiled	[CE]  cannot  find  symbol  lastParam	173	None	replace
260	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToBack(lastParam);  [CE]  no  suitable  method  found  for  newString(int,JSType)  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.getJSType());    params.addChildToBack(lastParam);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,JSType)	173	None	replace
261	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  [CE]  no  suitable  method  found  for  newString(int,JSType)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.getJSType());    params.addChildToBack(lastParam);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,JSType)	173	None	replace
262	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name.getJSType());  params.addChildToBack(lastParam);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name.getJSType());  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name.getJSType());  params.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.getJSType());    params.addChildToBack(lastParam);    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
263	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType(),  params);  [CE]  no  suitable  method  found  for  newString(int,JSType,Node)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType(),  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType(),  params);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.getJSType());    params.addChildToBack(lastParam);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,JSType,Node)	173	None	replace
264	[BUG]  [BUGGY]  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToBack(lastParam);  [CE]  cannot  find  symbol  lastParam  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	lastParam  =  Node.newString(Token.NAME,  thisTypeNode.getJSType());  params.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.getJSType());    params.addChildToBack(lastParam);    	non-compiled	[CE]  cannot  find  symbol  lastParam	173	None	replace
265	[BUG]  [BUGGY]  params.addChildToBack(lastParam,  thisTypeNode.getJSType());  [CE]  cannot  find  symbol  lastParam  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(lastParam,  thisTypeNode.getJSType());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(lastParam,  thisTypeNode.getJSType());	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.getJSType());    params.addChildToBack(lastParam);    	non-compiled	[CE]  cannot  find  symbol  lastParam	173	None	replace
266	[BUG]  [BUGGY]  node.removeChild(params);  params.addChildToFront(source);  [CE]  cannot  find  symbol  node  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  node.removeChild(params);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	node.removeChild(params);  params.addChildToFront(source);	  params.addChildToFront(source);    n.removeChild(params);    params.addChildToFront(source);    	non-compiled	[CE]  cannot  find  symbol  node	235	None	replace
267	[BUG]  [BUGGY]  Node  lastParam  =  params.next();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  params.next();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  params.next();	  params.addChildToFront(source);    n.removeChild(params);    params.addChildToFront(source);    	non-compiled	[CE]  cannot  find  symbol	235	None	replace
268	[BUG]  [BUGGY]  n.removeChild(params);  params.addChildToFront(source);  [CE]  cannot  find  symbol  n  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.removeChild(params);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.removeChild(params);  params.addChildToFront(source);	  params.addChildToFront(source);    n.removeChild(params);    params.addChildToFront(source);    	non-compiled	[CE]  cannot  find  symbol  n	235	None	replace
269	[BUG]  [BUGGY]  node.removeChild(params);  [CE]  cannot  find  symbol  node  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  node.removeChild(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	node.removeChild(params);	  params.addChildToFront(source);    n.removeChild(params);    params.addChildToFront(source);    	non-compiled	[CE]  cannot  find  symbol  node	235	None	replace
270	[BUG]  [BUGGY]  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  ';'  expected	26	None	replace
271	[BUG]  [BUGGY]  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  ';'  expected	26	None	replace
272	[BUG]  [BUGGY]  params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  ';'  expected	26	None	replace
273	[BUG]  [BUGGY]  params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  ';'  expected	26	None	replace
274	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withReturnType(getReturnType()).build(),    source);    	non-compiled	[CE]  ';'  expected	26	None	replace
275	[BUG]  [BUGGY]  params.add(thisTypeNode);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.add(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.add(thisTypeNode);	  params.clear();    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
276	[BUG]  [BUGGY]  params.addAll(thisTypeNode.cloneTree());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addAll(thisTypeNode.cloneTree());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addAll(thisTypeNode.cloneTree());	  params.clear();    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
277	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  name),  new  FunctionBuilder(registry));  [CE]  no  suitable  constructor  found  for  Node(int,String)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  name),  new  FunctionBuilder(registry));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.NAME,  name),  new  FunctionBuilder(registry));	  params.clear();    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,String)	174	None	replace
278	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  name),  new  FunctionBuilder(registry));  [CE]  no  suitable  constructor  found  for  Node(int,String)  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  name),  new  FunctionBuilder(registry));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.FUNCTION,  name),  new  FunctionBuilder(registry));	  params.clear();    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,String)	174	None	replace
279	[BUG]  [BUGGY]  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),    source);    	non-compiled	[CE]  ';'  expected	217	None	replace
280	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),    source);    	non-compiled	[CE]  ';'  expected	217	None	replace
281	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),    source);    	non-compiled	[CE]  ';'  expected	217	None	replace
282	[BUG]  [BUGGY]  params.removeChild(source);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),    source);    	non-compiled	[CE]  ';'  expected	217	None	replace
283	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params).withReturnType(getReturnType()),    source);    	non-compiled	[CE]  	217	None	replace
284	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	105	1	add
285	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	105	1	add
286	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	105	1	add
287	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	105	1	add
288	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	105	1	add
289	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	105	1	add
290	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.removeChild(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.removeChild(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	105	1	add
291	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.removeChild(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.removeChild(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.removeChild(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	105	1	add
292	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }	  timeout    	non-compiled	[CE]  	105	None	add
293	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildAfter(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildAfter(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildAfter(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	105	None	add
294	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }	  timeout    	non-compiled	[CE]  	105	None	add
295	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ").cloneTree();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ").cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name,   "thisType ").cloneTree();	  Node    thisTypeNode    =    Node.newString(Token.NAME,   "thisType   ").cloneTree();    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	242	None	replace
296	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()).cloneTree();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()).cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getTypeOfThis()).cloneTree();	  Node    thisTypeNode    =    Node.newString(Token.NAME,   "thisType   ").cloneTree();    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	242	None	replace
297	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name).cloneTree();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name).cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name).cloneTree();	  Node    thisTypeNode    =    Node.newString(Token.NAME,   "thisType   ").cloneTree();    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	242	None	replace
298	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ").clone();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ").clone();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ").clone();	  Node    thisTypeNode    =    Node.newString(Token.NAME,   "thisType   ").cloneTree();    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	242	None	replace
299	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	95	1	add
300	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	95	1	add
301	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	95	1	add
302	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	95	1	add
303	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	95	1	add
304	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	95	1	add
305	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	95	1	add
306	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	95	1	add
307	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	95	1	add
308	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	95	1	add
309	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }	  timeout    	non-compiled	[CE]  ';'  expected	95	None	add
310	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	95	1	add
311	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	95	1	add
312	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }	  timeout    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	95	None	add
313	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	130	1	add
314	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	130	1	add
315	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	130	1	add
316	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	130	1	add
317	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }	  timeout    	non-compiled	[CE]  	130	None	add
318	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  timeout    	compilable	timeout	130	1	add
319	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  timeout    	compilable	timeout	130	1	add
320	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	130	None	add
321	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ".equals(name));  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ".equals(name));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ".equals(name));  }	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	130	None	add
322	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setPrimitiveArg(true);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setPrimitiveArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setPrimitiveArg(true);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setPrimitiveArg(true);    }    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
323	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setPrimitiveArg(false);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setPrimitiveArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setPrimitiveArg(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setPrimitiveArg(true);    }    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
324	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  thisTypeNode),  name);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  thisTypeNode),  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.NAME,  thisTypeNode),  name);	  params.addChildToFront(new    Node(Token.NAME,    thisTypeNode));    timeout    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	126	None	replace
325	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  name));  [CE]  no  suitable  constructor  found  for  Node(int,String)  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  name));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.NAME,  name));	  params.addChildToFront(new    Node(Token.NAME,    thisTypeNode));    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,String)	126	None	replace
326	[BUG]  [BUGGY]  n.addChildToFront(new  Node(Token.NAME,  thisTypeNode));  [CE]  cannot  find  symbol  n  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.addChildToFront(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.addChildToFront(new  Node(Token.NAME,  thisTypeNode));	  params.addChildToFront(new    Node(Token.NAME,    thisTypeNode));    timeout    	non-compiled	[CE]  cannot  find  symbol  n	126	None	replace
327	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  thisTypeNode.getJSType()));  [CE]  no  suitable  constructor  found  for  Node(int,JSType)  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  thisTypeNode.getJSType()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.NAME,  thisTypeNode.getJSType()));	  params.addChildToFront(new    Node(Token.NAME,    thisTypeNode));    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,JSType)	126	None	replace
328	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(params);	  params.addChildToBack(source);    timeout    	compilable	timeout	31	1	replace
329	[BUG]  [BUGGY]  params.addChildToBack(params);  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(params);	  params.addChildToBack(source);    timeout    	compilable	timeout	31	1	replace
330	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.FUNCTION));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(new  Node(Token.FUNCTION));	  params.addChildToBack(source);    timeout    	compilable	timeout	31	1	replace
331	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.FUNCTION));  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.FUNCTION));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.FUNCTION));	  params.addChildToBack(source);    timeout    	compilable	timeout	31	1	replace
332	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  source);  [CE]  method  setJSType  in  class  Node  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()),  source);	  thisTypeNode.setOptionalArg(true);    timeout    	non-compiled	[CE]  method  setJSType  in  class  Node  cannot  be  applied  to  given  types;	2	None	replace
333	[BUG]  [BUGGY]  thisTypeNode.setParams(params);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParams(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParams(params);	  thisTypeNode.setOptionalArg(true);    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
334	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));	  thisTypeNode.setOptionalArg(true);    timeout    	compilable	timeout	2	1	replace
335	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));	  thisTypeNode.setOptionalArg(true);    timeout    	compilable	timeout	2	1	replace
336	[BUG]  [BUGGY]  thisTypeNode.setParameters(params,  registry);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(params,  registry);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params,  registry);	  thisTypeNode.setParameters(params);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
337	[BUG]  [BUGGY]  thisTypeNode.setParameters(params,  params);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(params,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params,  params);	  thisTypeNode.setParameters(params);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
338	[BUG]  [BUGGY]  thisTypeNode.setParameters(params,  name);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(params,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params,  name);	  thisTypeNode.setParameters(params);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
339	[BUG]  [BUGGY]  thisTypeNode.setParameters(registry,  params);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(registry,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(registry,  params);	  thisTypeNode.setParameters(params);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
340	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  lastParam  =  thisTypeNode.getLastChild();  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  lastParam  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node    lastParam    =    thisTypeNode.getLastChild();    Node  lastParam  =  thisTypeNode.getLastChild();	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	203	None	add
341	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  previousParam  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node    lastParam    =    thisTypeNode.getLastChild();    Node  previousParam  =  thisTypeNode.getLastChild();	  timeout    	compilable	timeout	203	1	add
342	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  previousParam  =  thisTypeNode.getLastChild();  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  previousParam  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node    lastParam    =    thisTypeNode.getLastChild();    Node  previousParam  =  thisTypeNode.getLastChild();	  timeout    	compilable	timeout	203	1	add
343	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  param  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node    lastParam    =    thisTypeNode.getLastChild();    Node  param  =  thisTypeNode.getLastChild();	  timeout    	compilable	timeout	203	1	add
344	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  param  =  thisTypeNode.getLastChild();  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  param  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node    lastParam    =    thisTypeNode.getLastChild();    Node  param  =  thisTypeNode.getLastChild();	  timeout    	compilable	timeout	203	1	add
345	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  firstChild  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node    lastParam    =    thisTypeNode.getLastChild();    Node  firstChild  =  thisTypeNode.getLastChild();	  timeout    	compilable	timeout	203	1	add
346	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  firstChild  =  thisTypeNode.getLastChild();  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  firstChild  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node    lastParam    =    thisTypeNode.getLastChild();    Node  firstChild  =  thisTypeNode.getLastChild();	  timeout    	compilable	timeout	203	1	add
347	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  lastParam  =  thisTypeNode.getFirstChild();  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  lastParam  =  thisTypeNode.getFirstChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node    lastParam    =    thisTypeNode.getLastChild();    Node  lastParam  =  thisTypeNode.getFirstChild();	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	203	None	add
348	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  nextParam  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node    lastParam    =    thisTypeNode.getLastChild();    Node  nextParam  =  thisTypeNode.getLastChild();	  timeout    	compilable	timeout	203	1	add
349	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  nextParam  =  thisTypeNode.getLastChild();  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  nextParam  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node    lastParam    =    thisTypeNode.getLastChild();    Node  nextParam  =  thisTypeNode.getLastChild();	  timeout    	compilable	timeout	203	1	add
350	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  thisTypeNode  =  thisTypeNode.getLastChild();  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  thisTypeNode  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node    lastParam    =    thisTypeNode.getLastChild();    Node  thisTypeNode  =  thisTypeNode.getLastChild();	  timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	203	None	add
351	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  parent  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node    lastParam    =    thisTypeNode.getLastChild();    Node  parent  =  thisTypeNode.getLastChild();	  timeout    	compilable	timeout	203	1	add
352	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  parent  =  thisTypeNode.getLastChild();  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastChild();  Node  parent  =  thisTypeNode.getLastChild();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node    lastParam    =    thisTypeNode.getLastChild();    Node  parent  =  thisTypeNode.getLastChild();	  timeout    	compilable	timeout	203	1	add
353	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  lastParam);  [CE]  cannot  find  symbol  lastParam  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  lastParam);	  params.addChildAfter(thisTypeNode,    firstParam);    	non-compiled	[CE]  cannot  find  symbol  lastParam	167	None	replace
354	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  parent);  [CE]  cannot  find  symbol  parent  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  parent);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  parent);	  params.addChildAfter(thisTypeNode,    firstParam);    	non-compiled	[CE]  cannot  find  symbol  parent	167	None	replace
355	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildBefore(thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildBefore(thisTypeNode,  thisTypeNode);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildBefore(thisTypeNode);    }    	compilable	timeout	198	1	replace
356	[BUG]  [BUGGY]  params.addChildBefore(thisTypeNode,  thisTypeNode);  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildBefore(thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildBefore(thisTypeNode,  thisTypeNode);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildBefore(thisTypeNode);    }    	compilable	timeout	198	1	replace
357	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  name);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildBefore(thisTypeNode);    }    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	198	None	replace
358	[BUG]  [BUGGY]  params.addChildBefore(thisTypeNode);  [CE]  method  addChildBefore  in  class  Node  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildBefore(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildBefore(thisTypeNode);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildBefore(thisTypeNode);    }    	non-compiled	[CE]  method  addChildBefore  in  class  Node  cannot  be  applied  to  given  types;	198	None	replace
359	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	212	1	add
360	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	212	1	add
361	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	212	1	add
362	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	212	1	add
363	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  timeout    	compilable	timeout	212	1	add
364	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  timeout    	compilable	timeout	212	1	add
365	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " "));  }	  timeout    	non-compiled	[CE]  	212	None	add
366	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ".equals(name));  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ".equals(name));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ".equals(name));  }	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	212	None	add
367	[BUG]  [BUGGY]  params.removeChild(paramNode);  [CE]  cannot  find  symbol  paramNode  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(paramNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(paramNode);	  params.removeChild(source);    timeout    	non-compiled	[CE]  cannot  find  symbol  paramNode	92	None	replace
368	[BUG]  [BUGGY]  n.removeChild(params);  [CE]  cannot  find  symbol  n  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.removeChild(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.removeChild(params);	  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	108	None	replace
369	[BUG]  [BUGGY]  n.removeChild(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.removeChild(thisTypeNode);	  params.removeChild(thisTypeNode);    params.removeChild(thisTypeNode);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	108	None	replace
370	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,     "lastParam   ");  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	134	1	add
371	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,     "lastParam   ");  params.addChildToFront(source);  params.addChildToFront(source);  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,     "lastParam   ");  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	134	1	add
372	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,     "lastParam   ");  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,     "lastParam   ");  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME, "lastParam ");	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	134	None	add
373	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,     "lastParam   ");  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToFront(source);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,     "lastParam   ");  params.addChildToFront(source);  Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,   "lastParam ");  params.addChildToFront(source);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	134	None	add
374	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,     "lastParam   ");  params.addChildToFront(source);  Node  source  =  Node.newString(Token.NAME,   "source ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToFront(source);    Node  source  =  Node.newString(Token.NAME,   "source ");	  timeout    	compilable	timeout	134	1	add
375	[BUG]  [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,     "lastParam   ");  params.addChildToFront(source);  Node  source  =  Node.newString(Token.NAME,   "source ");  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    Node  lastParam  =  Node.newString(Token.NAME,     "lastParam   ");  params.addChildToFront(source);  Node  source  =  Node.newString(Token.NAME,   "source ");  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        Node    lastParam    =    Node.newString(Token.NAME,       "lastParam   ");    params.addChildToFront(source);    Node  source  =  Node.newString(Token.NAME,   "source ");	  timeout    	compilable	timeout	134	1	add
376	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	103	1	add
377	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	103	1	add
378	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	103	1	add
379	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	103	1	add
380	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	103	1	add
381	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	103	1	add
382	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	103	1	add
383	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	103	1	add
384	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	103	1	add
385	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	103	1	add
386	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	103	1	add
387	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	103	1	add
388	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }	  timeout    	non-compiled	[CE]  ';'  expected	103	None	add
389	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }	  timeout    	compilable	timeout	103	1	add
390	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }	  timeout    	compilable	timeout	103	1	add
391	[BUG]  [BUGGY]  Params.addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  Params  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Params.addChildToFront(thisTypeNode);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=    null)    {    Params.addChildToFront(thisTypeNode);    }    	non-compiled	[CE]  cannot  find  symbol  Params	17	None	replace
392	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameter(false);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameter(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setParameter(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setParameter(false);    }    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
393	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.cloneTree();  thisTypeNode.setVarArgs(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  thisTypeNode.cloneTree();  thisTypeNode.setVarArgs(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  thisTypeNode.cloneTree();  thisTypeNode.setVarArgs(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(false);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	196	None	replace
394	[BUG]  [BUGGY]  Node  params  =  lastParam.cloneTree();  thisTypeNode.setVarArgs(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  lastParam.cloneTree();  thisTypeNode.setVarArgs(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  lastParam.cloneTree();  thisTypeNode.setVarArgs(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(false);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	196	None	replace
395	[BUG]  [BUGGY]  Node  params  =  n.cloneTree();  thisTypeNode.setVarArgs(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  n.cloneTree();  thisTypeNode.setVarArgs(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  n.cloneTree();  thisTypeNode.setVarArgs(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(false);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	196	None	replace
396	[BUG]  [BUGGY]  Node  params  =  nodes.cloneTree();  thisTypeNode.setVarArgs(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  nodes.cloneTree();  thisTypeNode.setVarArgs(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  nodes.cloneTree();  thisTypeNode.setVarArgs(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(false);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	196	None	replace
397	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setVarArgs(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setVarArgs(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(false);    	compilable	timeout	196	1	replace
398	[BUG]  [BUGGY]  thisTypeNode.setVarArgs(false);  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setVarArgs(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setVarArgs(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(false);    	compilable	timeout	196	1	replace
399	[BUG]  [BUGGY]  Node  params  =  previousParams.cloneTree();  thisTypeNode.setVarArgs(false);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  previousParams.cloneTree();  thisTypeNode.setVarArgs(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  previousParams.cloneTree();  thisTypeNode.setVarArgs(false);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(false);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	196	None	replace
400	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(params,  thisTypeNode);  params.addChildAfter(params,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(params,    thisTypeNode);    params.addChildAfter(params,  thisTypeNode);	  timeout    	compilable	timeout	73	1	add
401	[BUG]  [BUGGY]  params.addChildAfter(params,  thisTypeNode);  params.addChildAfter(params,  thisTypeNode);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(params,  thisTypeNode);  params.addChildAfter(params,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(params,    thisTypeNode);    params.addChildAfter(params,  thisTypeNode);	  timeout    	compilable	timeout	73	1	add
402	[BUG]  [BUGGY]  params.addChildAfter(params,  thisTypeNode);  Node  params.addChildAfter(params,  thisTypeNode);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(params,  thisTypeNode);  Node  params.addChildAfter(params,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(params,    thisTypeNode);    Node  params.addChildAfter(params,  thisTypeNode);	  timeout    	non-compiled	[CE]  ';'  expected	73	None	add
403	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(params,  thisTypeNode);  params.addChildBefore(params,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(params,    thisTypeNode);    params.addChildBefore(params,  thisTypeNode);	  timeout    	compilable	timeout	73	1	add
404	[BUG]  [BUGGY]  params.addChildAfter(params,  thisTypeNode);  params.addChildBefore(params,  thisTypeNode);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(params,  thisTypeNode);  params.addChildBefore(params,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(params,    thisTypeNode);    params.addChildBefore(params,  thisTypeNode);	  timeout    	compilable	timeout	73	1	add
405	[BUG]  [BUGGY]  params.addChildAfter(params,  thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(params,  thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(params,    thisTypeNode);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	73	None	add
406	[BUG]  [BUGGY]  params.addChildAfter(params,  thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(params,  thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(params,    thisTypeNode);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);	  timeout    	non-compiled	[CE]  ';'  expected	73	None	add
407	[BUG]  [BUGGY]  params.addChildAfter(params,  thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(params,  thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(params,    thisTypeNode);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  thisTypeNode);	  timeout    	non-compiled	[CE]  ';'  expected	73	None	add
408	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	161	1	add
409	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	161	1	add
410	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	161	1	add
411	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	161	1	add
412	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	161	1	add
413	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	161	1	add
414	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	161	1	add
415	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	161	1	add
416	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	161	1	add
417	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	161	1	add
418	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	161	1	add
419	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	161	1	add
420	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }	  timeout    	non-compiled	[CE]  ';'  expected	161	None	add
421	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }	  timeout    	compilable	timeout	161	1	add
422	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.removeChild(thisTypeNode);  }	  timeout    	compilable	timeout	161	1	add
423	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  name),  thisTypeNode);  [CE]  no  suitable  constructor  found  for  Node(int,String)  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  name),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.NAME,  name),  thisTypeNode);	  params.addChildToBack(new    Node(Token.NAME),    thisTypeNode);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,String)	188	None	replace
424	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode),  thisTypeNode);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.NAME,  thisTypeNode),  thisTypeNode);	  params.addChildToBack(new    Node(Token.NAME),    thisTypeNode);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	188	None	replace
425	[BUG]  [BUGGY]  params.addChildToBack(source,  new  Node(Token.NAME),  thisTypeNode);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source,  new  Node(Token.NAME),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source,  new  Node(Token.NAME),  thisTypeNode);	  params.addChildToBack(new    Node(Token.NAME),    thisTypeNode);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	188	None	replace
426	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode),  name);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode),  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.NAME,  thisTypeNode),  name);	  params.addChildToBack(new    Node(Token.NAME),    thisTypeNode);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	188	None	replace
427	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode,  new  Node(Token.NAME),  thisTypeNode);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode,  new  Node(Token.NAME),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode,  new  Node(Token.NAME),  thisTypeNode);	  params.addChildToBack(new    Node(Token.NAME),    thisTypeNode);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	188	None	replace
428	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  source),  thisTypeNode);  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  source),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.NAME,  source),  thisTypeNode);	  params.addChildToBack(new    Node(Token.NAME),    thisTypeNode);    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	188	None	replace
429	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  params.addChildToFront(source);    params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    timeout    	compilable	timeout	232	1	replace
430	[BUG]  [BUGGY]  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  params.addChildToFront(source);    params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    timeout    	compilable	timeout	232	1	replace
431	[BUG]  [BUGGY]  n.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [CE]  cannot  find  symbol  n  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  params.addChildToFront(source);    params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	232	None	replace
432	[BUG]  [BUGGY]  if(params!=  null)  {  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    	non-compiled	[CE]  	193	None	replace
433	[BUG]  [BUGGY]  if(params!=  null)  {  if(params.getType()  ==  Token.FUNCTION)  {  params.addChildToFront(thisTypeNode);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  if(params.getType()  ==  Token.FUNCTION)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  if(params.getType()  ==  Token.FUNCTION)  {  params.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    	non-compiled	[CE]  	193	None	replace
434	[BUG]  [BUGGY]  if(params!=  null)  {  if(params.hasChildren())  {  params.addChildToFront(thisTypeNode);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  if(params.hasChildren())  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  if(params.hasChildren())  {  params.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    	non-compiled	[CE]  	193	None	replace
435	[BUG]  [BUGGY]  if(params!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    	non-compiled	[CE]  	193	None	replace
436	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToBack(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToBack(thisTypeNode);    	compilable	timeout	229	1	replace
437	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToBack(thisTypeNode);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToBack(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToBack(thisTypeNode);    	compilable	timeout	229	1	replace
438	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  thisTypeNode.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(source);  thisTypeNode.addChildToBack(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToBack(thisTypeNode);    	compilable	timeout	229	1	replace
439	[BUG]  [BUGGY]  params.addChildToBack(source);  thisTypeNode.addChildToBack(thisTypeNode);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  thisTypeNode.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);  thisTypeNode.addChildToBack(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.addChildToBack(thisTypeNode);    	compilable	timeout	229	1	replace
440	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToBack(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToBack(params);	  params.addChildToBack(thisTypeNode);    n.addChildToBack(thisTypeNode);    	compilable	timeout	229	1	replace
441	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToBack(params);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToBack(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);  thisTypeNode.addChildToBack(params);	  params.addChildToBack(thisTypeNode);    n.addChildToBack(thisTypeNode);    	compilable	timeout	229	1	replace
442	[BUG]  [BUGGY]  Node  lastParam  =  params.next();  thisTypeNode.addChildToBack(lastParam);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  params.next();  thisTypeNode.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  params.next();  thisTypeNode.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    n.addChildToBack(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
443	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	214	1	add
444	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	214	1	add
445	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	214	1	add
446	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	214	1	add
447	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	214	1	add
448	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	214	1	add
449	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	214	None	add
450	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	214	1	add
451	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	214	1	add
452	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setProperty(name,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setProperty(name,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=    null)    {    params.addChildToBack(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToBack(thisTypeNode);  }  else  {  thisTypeNode.setProperty(name,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	214	None	add
453	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,  name);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    Node  lastParam  =  Node.newString(Token.NAME,  name);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	147	None	add
454	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  params.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    params.removeChild(thisTypeNode);	  timeout    	compilable	timeout	147	1	add
455	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  params.removeChild(thisTypeNode);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  params.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    params.removeChild(thisTypeNode);	  timeout    	compilable	timeout	147	1	add
456	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	147	None	add
457	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  params  =  Node.newString(Token.NAME,  name);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  params  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    Node  params  =  Node.newString(Token.NAME,  name);	  timeout    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	147	None	add
458	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  paramsNode  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    Node  paramsNode  =  Node.newString(Token.NAME,  name);	  timeout    	compilable	timeout	147	1	add
459	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  paramsNode  =  Node.newString(Token.NAME,  name);  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  paramsNode  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    Node  paramsNode  =  Node.newString(Token.NAME,  name);	  timeout    	compilable	timeout	147	1	add
460	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setOptionalArg(true);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setOptionalArg(true);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	147	None	add
461	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setOptionalArg(false);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    Node  lastParam  =  Node.newString(Token.NAME,  name);  thisTypeNode.setOptionalArg(false);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	147	None	add
462	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);        Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	147	None	add
463	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  name);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  name);	  params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    timeout    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	251	None	replace
464	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  thisTypeNode);	  params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    timeout    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	251	None	replace
465	[BUG]  [BUGGY]  n.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [CE]  cannot  find  symbol  n  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));	  params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    timeout    	non-compiled	[CE]  cannot  find  symbol  n	251	None	replace
466	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  source);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  source);	  params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    timeout    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	251	None	replace
467	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  n);  [CE]  cannot  find  symbol  n  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  n);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode),  n);	  params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    timeout    	non-compiled	[CE]  cannot  find  symbol  n	251	None	replace
468	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  name),  thisTypeNode);  [CE]  no  suitable  constructor  found  for  Node(int,String)  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  name),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.NAME,  name),  thisTypeNode);	  params.addChildToFront(new    Node(Token.NAME),    thisTypeNode);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,String)	189	None	replace
469	[BUG]  [BUGGY]  params.addChildToFront(source,  new  Node(Token.NAME),  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source,  new  Node(Token.NAME),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source,  new  Node(Token.NAME),  thisTypeNode);	  params.addChildToFront(new    Node(Token.NAME),    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	189	None	replace
470	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  new  Node(Token.NAME),  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  new  Node(Token.NAME),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  new  Node(Token.NAME),  thisTypeNode);	  params.addChildToFront(new    Node(Token.NAME),    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	189	None	replace
471	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  source),  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.NAME,  source),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.NAME,  source),  thisTypeNode);	  params.addChildToFront(new    Node(Token.NAME),    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	189	None	replace
472	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	97	1	add
473	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	97	1	add
474	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	97	1	add
475	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	97	1	add
476	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	97	1	add
477	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	97	1	add
478	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	97	1	add
479	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	97	1	add
480	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	97	1	add
481	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	97	1	add
482	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }	  timeout    	non-compiled	[CE]  ';'  expected	97	None	add
483	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	97	1	add
484	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	97	1	add
485	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }	  timeout    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	97	None	add
486	[BUG]  [BUGGY]  if(params!=  null)  {  if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    timeout    	non-compiled	[CE]  	89	None	replace
487	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  params.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	22	1	replace
488	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  params.addChildToBack(lastParam);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  params.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	22	1	replace
489	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  thisTypeNode.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  thisTypeNode.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	22	1	replace
490	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  thisTypeNode.addChildToBack(lastParam);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  thisTypeNode.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  thisTypeNode.addChildToBack(lastParam);	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	22	1	replace
491	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	22	1	replace
492	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToBack(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,       "thisType   ");    params.addChildToBack(lastParam);    timeout    	compilable	timeout	22	1	replace
493	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setArg(false);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setArg(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setArg(false);    }    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
494	[BUG]  [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setArg(true);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setArg(true);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setArg(false);    }    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
495	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  FunctionBuilder(registry));  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  FunctionBuilder(registry));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  new  FunctionBuilder(registry));	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildAfter(thisTypeNode);    }    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	101	None	replace
496	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(new    Node(Token.NAME,    thisTypeNode));    params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));	  timeout    	compilable	timeout	185	1	add
497	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new    Node(Token.NAME,    thisTypeNode));    params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));	  timeout    	compilable	timeout	185	1	add
498	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  Node  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  Node  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new    Node(Token.NAME,    thisTypeNode));    Node  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));	  timeout    	non-compiled	[CE]  ';'  expected	185	None	add
499	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode);  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode);  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new    Node(Token.NAME,    thisTypeNode));    Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode);  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	185	None	add
500	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  node.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [CE]  cannot  find  symbol  node  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  node.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new    Node(Token.NAME,    thisTypeNode));    node.addChildToBack(new  Node(Token.NAME,  thisTypeNode));	  timeout    	non-compiled	[CE]  cannot  find  symbol  node	185	None	add
501	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  n.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [CE]  cannot  find  symbol  n  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  n.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new    Node(Token.NAME,    thisTypeNode));    n.addChildToBack(new  Node(Token.NAME,  thisTypeNode));	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	185	None	add
502	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode);  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode));  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new    Node(Token.NAME,    thisTypeNode));    Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	185	None	add
503	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);    thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	1	1	add
504	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	1	1	add
505	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);    thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	1	1	add
506	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	1	1	add
507	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  ThisTypeNode.setOptionalArg(true);  [CE]  cannot  find  symbol  ThisTypeNode  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  ThisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    ThisTypeNode.setOptionalArg(true);	  timeout    	non-compiled	[CE]  cannot  find  symbol  ThisTypeNode	1	None	add
508	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setOptionalArg(true);    params.addChildToBack(thisTypeNode);	  timeout    	compilable	timeout	1	1	add
509	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToBack(thisTypeNode);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    params.addChildToBack(thisTypeNode);	  timeout    	compilable	timeout	1	1	add
510	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  Node.setOptionalArg(true);  [CE]  non-static  method  setOptionalArg(boolean)  cannot  be  referenced  from  a  static  context  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  Node.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    Node.setOptionalArg(true);	  timeout    	non-compiled	[CE]  non-static  method  setOptionalArg(boolean)  cannot  be  referenced  from  a  static  context	1	None	add
511	[BUG]  [BUGGY]  thisTypeNode.setOptionalArg(true);  node.setOptionalArg(true);  [CE]  cannot  find  symbol  node  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setOptionalArg(true);  node.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setOptionalArg(true);    node.setOptionalArg(true);	  timeout    	non-compiled	[CE]  cannot  find  symbol  node	1	None	add
512	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=  null)  {  thisTypeNode.setOptionalArg(true);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    	compilable	timeout	165	1	replace
513	[BUG]  [BUGGY]  if(params!=  null)  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  thisTypeNode.setOptionalArg(true);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    	compilable	timeout	165	1	replace
514	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=  null)  {  thisTypeNode.setOptionalArg(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    	compilable	timeout	165	1	replace
515	[BUG]  [BUGGY]  if(params!=  null)  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  thisTypeNode.setOptionalArg(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    	compilable	timeout	165	1	replace
516	[BUG]  [BUGGY]  params.addChildToFront(source,  thisTypeNode,  name);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source,  thisTypeNode,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source,  thisTypeNode,  name);	  params.addChildToFront(source,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	56	None	replace
517	[BUG]  [BUGGY]  params.addChildToFront(source,  thisTypeNode,  typeOfThis);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source,  thisTypeNode,  typeOfThis);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source,  thisTypeNode,  typeOfThis);	  params.addChildToFront(source,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	56	None	replace
518	[BUG]  [BUGGY]  params.addChildToFront(source,  thisTypeNode,  n);  [CE]  cannot  find  symbol  n  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source,  thisTypeNode,  n);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source,  thisTypeNode,  n);	  params.addChildToFront(source,    thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  n	56	None	replace
519	[BUG]  [BUGGY]  params.addChildToFront(lastParam,  source,  thisTypeNode);  [CE]  cannot  find  symbol  lastParam  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(lastParam,  source,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(lastParam,  source,  thisTypeNode);	  params.addChildToFront(source,    thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  lastParam	56	None	replace
520	[BUG]  [BUGGY]  params.addChildToFront(params,  source,  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(params,  source,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(params,  source,  thisTypeNode);	  params.addChildToFront(source,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	56	None	replace
521	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  params);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  params);	          Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)	182	None	replace
522	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  name);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,String)  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  name);	          Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,String)	182	None	replace
523	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name,  getTypeOfThis());  [CE]  no  suitable  method  found  for  newString(int,String,ObjectType)  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name,  getTypeOfThis());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name,  getTypeOfThis());	          Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,ObjectType)	182	None	replace
524	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  source);  [CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis(),  source);	          Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType,Node)	182	None	replace
525	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode,  getTypeOfThis());  [CE]  no  suitable  method  found  for  newString(int,Node,ObjectType)  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode,  getTypeOfThis());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode,  getTypeOfThis());	          Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,ObjectType)	182	None	replace
526	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  params,  getTypeOfThis());  [CE]  no  suitable  method  found  for  newString(int,Node,ObjectType)  [FE]                                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  params,  getTypeOfThis());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  params,  getTypeOfThis());	          Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,ObjectType)	182	None	replace
527	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastParam();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  params.getLastParam();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  params.getLastParam();	  Node    lastParam    =    thisTypeNode.getLastParam();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
528	[BUG]  [BUGGY]  Node  lastParam  =  n.getLastParam();  [CE]  cannot  find  symbol  n  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  n.getLastParam();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  n.getLastParam();	  Node    lastParam    =    thisTypeNode.getLastParam();    	non-compiled	[CE]  cannot  find  symbol  n	141	None	replace
529	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getFirstParam();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getFirstParam();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  thisTypeNode.getFirstParam();	  Node    lastParam    =    thisTypeNode.getLastParam();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
530	[BUG]  [BUGGY]  Node  lastParam  =  node.getLastParam();  [CE]  cannot  find  symbol  node  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  node.getLastParam();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  node.getLastParam();	  Node    lastParam    =    thisTypeNode.getLastParam();    	non-compiled	[CE]  cannot  find  symbol  node	141	None	replace
531	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.getLastParam(),  params);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.getLastParam(),  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  thisTypeNode.getLastParam(),  params);	  Node    lastParam    =    thisTypeNode.getLastParam();    	non-compiled	[CE]  ';'  expected	141	None	replace
532	[BUG]  [BUGGY]  Node  lastParam  =  thisTypeNode.lastParam();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  thisTypeNode.lastParam();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  thisTypeNode.lastParam();	  Node    lastParam    =    thisTypeNode.getLastParam();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
533	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);	  params.removeChild(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    timeout    	compilable	timeout	148	1	replace
534	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);  params.removeChild(lastParam);	  params.removeChild(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    timeout    	compilable	timeout	148	1	replace
535	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  paramsNode  =  Node.newString(Token.NAME,  name);	  params.removeChild(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    timeout    	compilable	timeout	148	1	replace
536	[BUG]  [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  name);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  paramsNode  =  Node.newString(Token.NAME,  name);	  params.removeChild(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    timeout    	compilable	timeout	148	1	replace
537	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  name);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	Node  paramsNode  =  Node.newString(Token.NAME,  name);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  params.removeChild(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    timeout    	compilable	timeout	148	1	replace
538	[BUG]  [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  name);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  paramsNode  =  Node.newString(Token.NAME,  name);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  paramsNode  =  Node.newString(Token.NAME,  name);  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));	  params.removeChild(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    name);    params.removeChild(lastParam);    timeout    	compilable	timeout	148	1	replace
539	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  params.addChildToBack(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(source);    params.addChildToBack(source);	  timeout    	compilable	timeout	30	1	add
540	[BUG]  [BUGGY]  params.addChildToBack(source);  params.addChildToBack(source);  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  params.addChildToBack(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);    params.addChildToBack(source);	  timeout    	compilable	timeout	30	1	add
541	[BUG]  [BUGGY]  params.addChildToBack(source);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(lastParam);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);    Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(lastParam);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	30	None	add
542	[BUG]  [BUGGY]  params.addChildToBack(source);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(source);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);    Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.addChildToBack(source);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	30	None	add
543	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);	  timeout    	compilable	timeout	30	1	add
544	[BUG]  [BUGGY]  params.addChildToBack(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);    Node  lastParam  =  Node.newString(Token.NAME,  name);  params.addChildToBack(lastParam);	  timeout    	compilable	timeout	30	1	add
545	[BUG]  [BUGGY]  params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  source);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);    ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	30	None	add
546	[BUG]  [BUGGY]  params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);	  timeout    	non-compiled	[CE]  ';'  expected	30	None	add
547	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode).setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  thisTypeNode).setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.NAME,  thisTypeNode).setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  params.addChildToBack(new    Node(Token.NAME,    thisTypeNode));    timeout    	non-compiled	[CE]  ')'  expected	186	None	replace
548	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  name));  [CE]  no  suitable  constructor  found  for  Node(int,String)  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  name));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.NAME,  name));	  params.addChildToBack(new    Node(Token.NAME,    thisTypeNode));    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,String)	186	None	replace
549	[BUG]  [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  getTypeOfThis()));  [CE]  no  suitable  constructor  found  for  Node(int,ObjectType)  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(new  Node(Token.NAME,  getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(new  Node(Token.NAME,  getTypeOfThis()));	  params.addChildToBack(new    Node(Token.NAME,    thisTypeNode));    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,ObjectType)	186	None	replace
550	[BUG]  [BUGGY]  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.removeChildToFront(thisTypeNode);    }    else    {    thisTypeNode.addChildToFront(thisTypeNode);    }    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
551	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  thisTypeNode,  source);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  thisTypeNode,  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  thisTypeNode,  source);	  params.addChildToFront(thisTypeNode,    source);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	58	None	replace
552	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  thisTypeNode,  name);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  thisTypeNode,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  thisTypeNode,  name);	  params.addChildToFront(thisTypeNode,    source);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	58	None	replace
553	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  source,  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  source,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  source,  thisTypeNode);	  params.addChildToFront(thisTypeNode,    source);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	58	None	replace
554	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  name,  source);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  name,  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  name,  source);	  params.addChildToFront(thisTypeNode,    source);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	58	None	replace
555	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  thisTypeNode,  typeOfThis);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  thisTypeNode,  typeOfThis);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  thisTypeNode,  typeOfThis);	  params.addChildToFront(thisTypeNode,    source);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	58	None	replace
556	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  source,  name);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  source,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  source,  name);	  params.addChildToFront(thisTypeNode,    source);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	58	None	replace
557	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	115	1	add
558	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	115	1	add
559	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	115	1	add
560	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	115	1	add
561	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	115	1	add
562	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	115	1	add
563	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	115	1	add
564	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	115	1	add
565	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	115	1	add
566	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	115	1	add
567	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	115	1	add
568	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	115	1	add
569	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	115	1	add
570	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	115	1	add
571	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(thisTypeNode);	  timeout    	compilable	timeout	225	1	add
572	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(thisTypeNode);	  timeout    	compilable	timeout	225	1	add
573	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	225	1	add
574	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	225	1	add
575	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	225	1	add
576	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	225	1	add
577	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(params);	  timeout    	compilable	timeout	225	1	add
578	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(params);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(params);	  timeout    	compilable	timeout	225	1	add
579	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	225	1	add
580	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	225	1	add
581	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(params);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(params);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	225	1	add
582	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(params);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(params);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(params);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	225	1	add
583	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	225	1	add
584	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);        params.addChildToBack(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	225	1	add
585	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()).build(),  source);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()).build(),  source);	  thisTypeNode.setOptionalArg(false);    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
586	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getReturnType()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setJSType(registry.createOptionalNullableType(getReturnType()));	  thisTypeNode.setOptionalArg(false);    timeout    	compilable	timeout	6	1	replace
587	[BUG]  [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getReturnType()));  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setJSType(registry.createOptionalNullableType(getReturnType()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setJSType(registry.createOptionalNullableType(getReturnType()));	  thisTypeNode.setOptionalArg(false);    timeout    	compilable	timeout	6	1	replace
588	[BUG]  [BUGGY]  params.addChildAfter(source,  thisTypeNode,  name);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(source,  thisTypeNode,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(source,  thisTypeNode,  name);	  params.addChildAfter(thisTypeNode,    name);    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	70	None	replace
589	[BUG]  [BUGGY]  params.addChildAfter(name,  thisTypeNode);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(name,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(name,  thisTypeNode);	  params.addChildAfter(thisTypeNode,    name);    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	70	None	replace
590	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  name,  thisTypeNode);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  name,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  name,  thisTypeNode);	  params.addChildAfter(thisTypeNode,    name);    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	70	None	replace
591	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode,  name);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  thisTypeNode,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  thisTypeNode,  name);	  params.addChildAfter(thisTypeNode,    name);    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	70	None	replace
592	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  source,  name);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  source,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  source,  name);	  params.addChildAfter(thisTypeNode,    name);    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	70	None	replace
593	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  name,  typeOfThis);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  name,  typeOfThis);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  name,  typeOfThis);	  params.addChildAfter(thisTypeNode,    name);    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	70	None	replace
594	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  name,  source);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  name,  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  name,  source);	  params.addChildAfter(thisTypeNode,    name);    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	70	None	replace
595	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	240	1	add
596	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	240	1	add
597	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	240	1	add
598	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	240	1	add
599	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.removeChildToFront(thisTypeNode);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.removeChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.removeChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	240	None	add
600	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildIntoFront(thisTypeNode);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildIntoFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildIntoFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	240	None	add
601	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  If(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  If(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    If(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  ';'  expected	240	None	add
602	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  Params.addChildToFront(thisTypeNode);  }  [CE]  cannot  find  symbol  Params  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  Params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  Params.addChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Params	240	None	add
603	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  >=  null)  {  params.addChildToFront(thisTypeNode);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  >=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  >=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	240	None	add
604	[BUG]  [BUGGY]  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  params.removeChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.removeChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
605	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	82	1	add
606	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	82	1	add
607	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	82	1	add
608	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	82	1	add
609	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	82	1	add
610	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	82	1	add
611	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	82	1	add
612	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	82	1	add
613	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	82	1	add
614	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	82	1	add
615	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	82	1	add
616	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	82	1	add
617	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	82	1	add
618	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	82	1	add
619	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.removeChild(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.removeChild(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	82	1	add
620	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.removeChild(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.removeChild(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.removeChild(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	82	1	add
621	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);	  timeout    	compilable	timeout	45	1	add
622	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);	  timeout    	compilable	timeout	45	1	add
623	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	45	1	add
624	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	45	1	add
625	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	45	1	add
626	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	45	1	add
627	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	non-compiled	[CE]  cannot  find  symbol	45	None	add
628	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	45	1	add
629	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	45	1	add
630	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	45	1	add
631	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	45	1	add
632	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setParameterType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  params.addChildToFront(source);  thisTypeNode.setParameterType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    params.addChildToFront(source);  thisTypeNode.setParameterType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	non-compiled	[CE]  cannot  find  symbol	45	None	add
633	[BUG]  [BUGGY]  params.removeChild(source);  ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);  ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);	  params.removeChild(thisTypeNode);    ParamBuilder    builder    =    new    ParamBuilder(thisTypeNode);    params.removeChild(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
634	[BUG]  [BUGGY]  ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);  params.removeChild(thisTypeNode);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);  params.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);  params.removeChild(thisTypeNode);	  params.removeChild(thisTypeNode);    ParamBuilder    builder    =    new    ParamBuilder(thisTypeNode);    params.removeChild(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
635	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);  ParamBuilder  builder  =  new  ParamBuilder(thisTypeNode);	  params.removeChild(thisTypeNode);    ParamBuilder    builder    =    new    ParamBuilder(thisTypeNode);    params.removeChild(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
636	[BUG]  [BUGGY]  thisTypeNode.setParameters(params!=  null?  null  :  params.cloneTree());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(params!=  null?  null  :  params.cloneTree());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params!=  null?  null  :  params.cloneTree());	          thisTypeNode.setParameters(params    <    null?    null    :    params.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
637	[BUG]  [BUGGY]  thisTypeNode.setParameters(params  ==  null?  null  :  params.cloneTree());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(params  ==  null?  null  :  params.cloneTree());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params  ==  null?  null  :  params.cloneTree());	          thisTypeNode.setParameters(params    <    null?    null    :    params.cloneTree());    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
638	[BUG]  [BUGGY]  thisTypeNode.setParameters(params  >=  null?  null  :  params.cloneTree());  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(params  >=  null?  null  :  params.cloneTree());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params  >=  null?  null  :  params.cloneTree());	          thisTypeNode.setParameters(params    <    null?    null    :    params.cloneTree());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	61	None	replace
639	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  params.addChildToFront(new  Node(Token.EXPR_RESULT));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new    Node(Token.EXPR_RESULT));    params.addChildToFront(new  Node(Token.EXPR_RESULT));	  timeout    	compilable	timeout	127	1	add
640	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  params.addChildToFront(new  Node(Token.EXPR_RESULT));  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  params.addChildToFront(new  Node(Token.EXPR_RESULT));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.EXPR_RESULT));    params.addChildToFront(new  Node(Token.EXPR_RESULT));	  timeout    	compilable	timeout	127	1	add
641	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  Node  lastParam  =  new  Node(Token.EXPR_RESULT);  params.addChildToFront(new  Node(Token.EXPR_RESULT));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new    Node(Token.EXPR_RESULT));    Node  lastParam  =  new  Node(Token.EXPR_RESULT);  params.addChildToFront(new  Node(Token.EXPR_RESULT));	  timeout    	compilable	timeout	127	1	add
642	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  Node  lastParam  =  new  Node(Token.EXPR_RESULT);  params.addChildToFront(new  Node(Token.EXPR_RESULT));  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  Node  lastParam  =  new  Node(Token.EXPR_RESULT);  params.addChildToFront(new  Node(Token.EXPR_RESULT));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.EXPR_RESULT));    Node  lastParam  =  new  Node(Token.EXPR_RESULT);  params.addChildToFront(new  Node(Token.EXPR_RESULT));	  timeout    	compilable	timeout	127	1	add
643	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  Node  params.addChildToFront(new  Node(Token.EXPR_RESULT));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  Node  params.addChildToFront(new  Node(Token.EXPR_RESULT));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.EXPR_RESULT));    Node  params.addChildToFront(new  Node(Token.EXPR_RESULT));	  timeout    	non-compiled	[CE]  ';'  expected	127	None	add
644	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  node.addChildToFront(new  Node(Token.EXPR_RESULT));  [CE]  cannot  find  symbol  node  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  node.addChildToFront(new  Node(Token.EXPR_RESULT));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.EXPR_RESULT));    node.addChildToFront(new  Node(Token.EXPR_RESULT));	  timeout    	non-compiled	[CE]  cannot  find  symbol  node	127	None	add
645	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  n.addChildToFront(new  Node(Token.EXPR_RESULT));  [CE]  cannot  find  symbol  n  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  n.addChildToFront(new  Node(Token.EXPR_RESULT));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.EXPR_RESULT));    n.addChildToFront(new  Node(Token.EXPR_RESULT));	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	127	None	add
646	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  params.addChildToFront(new  Node(Token.EXPR_RESULT));  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new    Node(Token.EXPR_RESULT));    params.addChildToFront(new  Node(Token.EXPR_RESULT));  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	127	1	add
647	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  params.addChildToFront(new  Node(Token.EXPR_RESULT));  thisTypeNode.setOptionalArg(true);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  params.addChildToFront(new  Node(Token.EXPR_RESULT));  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.EXPR_RESULT));    params.addChildToFront(new  Node(Token.EXPR_RESULT));  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	127	1	add
648	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  params.addChildToFront(new  Node(Token.EXPR_RESULT));  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new    Node(Token.EXPR_RESULT));    params.addChildToFront(new  Node(Token.EXPR_RESULT));  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	127	1	add
649	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  params.addChildToFront(new  Node(Token.EXPR_RESULT));  thisTypeNode.setOptionalArg(false);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  params.addChildToFront(new  Node(Token.EXPR_RESULT));  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.EXPR_RESULT));    params.addChildToFront(new  Node(Token.EXPR_RESULT));  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	127	1	add
650	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  Node  lastParam  =  new  Node(Token.EXPR_RESULT);  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new    Node(Token.EXPR_RESULT));    Node  lastParam  =  new  Node(Token.EXPR_RESULT);  params.addChildToFront(lastParam);	  timeout    	compilable	timeout	127	1	add
651	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  Node  lastParam  =  new  Node(Token.EXPR_RESULT);  params.addChildToFront(lastParam);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT));  Node  lastParam  =  new  Node(Token.EXPR_RESULT);  params.addChildToFront(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.EXPR_RESULT));    Node  lastParam  =  new  Node(Token.EXPR_RESULT);  params.addChildToFront(lastParam);	  timeout    	compilable	timeout	127	1	add
652	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new  Node(Token.EXPR_RESULT,  thisTypeNode));	  params.addChildToFront(new    Node(Token.EXPR_RESULT));    timeout    	compilable	timeout	128	1	replace
653	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT,  thisTypeNode));  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.EXPR_RESULT,  thisTypeNode));	  params.addChildToFront(new    Node(Token.EXPR_RESULT));    timeout    	compilable	timeout	128	1	replace
654	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT),  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.EXPR_RESULT),  thisTypeNode);	  params.addChildToFront(new    Node(Token.EXPR_RESULT));    timeout    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	128	None	replace
655	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT,  name));  [CE]  no  suitable  constructor  found  for  Node(int,String)  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT,  name));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.EXPR_RESULT,  name));	  params.addChildToFront(new    Node(Token.EXPR_RESULT));    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,String)	128	None	replace
656	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT,  getTypeOfThis()));  [CE]  no  suitable  constructor  found  for  Node(int,ObjectType)  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EXPR_RESULT,  getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.EXPR_RESULT,  getTypeOfThis()));	  params.addChildToFront(new    Node(Token.EXPR_RESULT));    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,ObjectType)	128	None	replace
657	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EMPTY));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new  Node(Token.EMPTY));	  params.addChildToFront(new    Node(Token.EXPR_RESULT));    timeout    	compilable	timeout	128	1	replace
658	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.EMPTY));  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.EMPTY));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new  Node(Token.EMPTY));	  params.addChildToFront(new    Node(Token.EXPR_RESULT));    timeout    	compilable	timeout	128	1	replace
659	[BUG]  [BUGGY]  Node.addChildToFront(thisTypeNode,  params);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node.addChildToFront(thisTypeNode,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node.addChildToFront(thisTypeNode,  params);	  Node.addChildToFront(thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	52	None	replace
660	[BUG]  [BUGGY]  Node.addChildToFront(source,  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node.addChildToFront(source,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node.addChildToFront(source,  thisTypeNode);	  Node.addChildToFront(thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	52	None	replace
661	[BUG]  [BUGGY]  Node.addChildToFront(params,  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node.addChildToFront(params,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node.addChildToFront(params,  thisTypeNode);	  Node.addChildToFront(thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	52	None	replace
662	[BUG]  [BUGGY]  Node.addChildToFront(thisTypeNode,  name);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node.addChildToFront(thisTypeNode,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node.addChildToFront(thisTypeNode,  name);	  Node.addChildToFront(thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	52	None	replace
663	[BUG]  [BUGGY]  Node.addChildToFront(thisTypeNode,  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node.addChildToFront(thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node.addChildToFront(thisTypeNode,  thisTypeNode);	  Node.addChildToFront(thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	52	None	replace
664	[BUG]  [BUGGY]  Node.addChildToFront(params);  [CE]  non-static  method  addChildToFront(Node)  cannot  be  referenced  from  a  static  context  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node.addChildToFront(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node.addChildToFront(params);	  Node.addChildToFront(thisTypeNode);    	non-compiled	[CE]  non-static  method  addChildToFront(Node)  cannot  be  referenced  from  a  static  context	52	None	replace
665	[BUG]  [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));	  params.removeChild(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
666	[BUG]  [BUGGY]  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));  [CE]  'void'  type  not  allowed  here  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));	  params.removeChild(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));    	non-compiled	[CE]  'void'  type  not  allowed  here	109	None	replace
667	[BUG]  [BUGGY]  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));	  params.removeChild(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
668	[BUG]  [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params,  thisTypeNode.removeChild(thisTypeNode));  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params,  thisTypeNode.removeChild(thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params,  thisTypeNode.removeChild(thisTypeNode));	  params.removeChild(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withParamsNode(params.removeChild(thisTypeNode));    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
669	[BUG]  [BUGGY]  thisTypeNode.setParameters(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(registry.createOptionalNullableType(getTypeOfThis()));	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
670	[BUG]  [BUGGY]  params  =  registry.createOptionalNullableType(getTypeOfThis());  [CE]  incompatible  types  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  registry.createOptionalNullableType(getTypeOfThis());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  registry.createOptionalNullableType(getTypeOfThis());	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));    }    	non-compiled	[CE]  incompatible  types	123	None	replace
671	[BUG]  [BUGGY]  params  =  registry.createOptionalNullableType(getTypeOfThis()));  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  registry.createOptionalNullableType(getTypeOfThis()));	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));    }    	non-compiled	[CE]  ';'  expected	123	None	replace
672	[BUG]  [BUGGY]  parents.addChildToFront(thisTypeNode);  [CE]  cannot  find  symbol  parents  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  parents.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	parents.addChildToFront(thisTypeNode);	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));    }    	non-compiled	[CE]  cannot  find  symbol  parents	123	None	replace
673	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(thisTypeNode);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(thisTypeNode);	  params.removeChild(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    params.removeChild(thisTypeNode);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	151	None	replace
674	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(lastParam);  [CE]  no  suitable  method  found  for  newString(int,ObjectType)  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(lastParam);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.removeChild(lastParam);	  params.removeChild(thisTypeNode);    Node    lastParam    =    Node.newString(Token.NAME,    getTypeOfThis());    params.removeChild(thisTypeNode);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,ObjectType)	151	None	replace
675	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	157	1	add
676	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	157	1	add
677	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	157	1	add
678	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	157	1	add
679	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	157	1	add
680	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	157	1	add
681	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	157	1	add
682	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	157	1	add
683	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	157	1	add
684	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	157	1	add
685	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	157	None	add
686	[BUG]  [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	non-compiled	[CE]  variable  lastParam  is  already  defined  in  method  getPropertyType(String)	183	None	add
687	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  param  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  param  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
688	[BUG]  [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  param  =  Node.newString(Token.NAME,  thisTypeNode.toString());  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  param  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  param  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
689	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  previousParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  previousParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
690	[BUG]  [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  previousParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  previousParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  previousParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
691	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  firstParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  firstParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
692	[BUG]  [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  firstParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  firstParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  firstParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
693	[BUG]  [BUGGY]  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  otherParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  otherParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
694	[BUG]  [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  otherParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  otherParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  otherParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
695	[BUG]  [BUGGY]  timeout  [FE]                                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  nextParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  nextParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
696	[BUG]  [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  nextParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  timeout  [FE]                                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  nextParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  nextParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
697	[BUG]  [BUGGY]  timeout  [FE]                                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  parent  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  parent  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
698	[BUG]  [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  parent  =  Node.newString(Token.NAME,  thisTypeNode.toString());  timeout  [FE]                                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          Node  lastParam  =  Node.newString(Token.NAME,  thisTypeNode.toString());  Node  parent  =  Node.newString(Token.NAME,  thisTypeNode.toString());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                Node    lastParam    =    Node.newString(Token.NAME,    thisTypeNode.toString());    Node  parent  =  Node.newString(Token.NAME,  thisTypeNode.toString());	  timeout    	compilable	timeout	183	1	add
699	[BUG]  [BUGGY]  params.removeChild(source);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);  params.replaceChild(thisTypeNode,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params)).build(),    source);    	non-compiled	[CE]  ';'  expected	218	None	replace
700	[BUG]  [BUGGY]  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params)).build(),    source);    	non-compiled	[CE]  ';'  expected	218	None	replace
701	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,   "thisType ");  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params)).build(),    source);    	non-compiled	[CE]  	218	None	replace
702	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  name);  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  name);  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params)).build(),    source);    	non-compiled	[CE]  ';'  expected	218	None	replace
703	[BUG]  [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  lastParam  =  Node.newString(Token.NAME,  getTypeOfThis());  params.replaceChild(lastParam,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params)).build(),    source);    	non-compiled	[CE]  ';'  expected	218	None	replace
704	[BUG]  [BUGGY]  params.removeChild(source);  thisTypeNode.replaceChild(params,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  thisTypeNode.replaceChild(params,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);  thisTypeNode.replaceChild(params,  new  FunctionBuilder(registry)).withParamsNode(params)).build(),  source);	  params.removeChild(thisTypeNode);    params.replaceChild(thisTypeNode,    new    FunctionBuilder(registry)).withParamsNode(params)).build(),    source);    	non-compiled	[CE]  ';'  expected	218	None	replace
705	[BUG]  [BUGGY]  thisTypeNode.setParameters(params),  registry.addChildToFront(thisTypeNode);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(params),  registry.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params),  registry.addChildToFront(thisTypeNode);	  thisTypeNode.setParameters(params).addChildToFront(thisTypeNode);    	non-compiled	[CE]  ';'  expected	8	None	replace
706	[BUG]  [BUGGY]  thisTypeNode.setParameters(params).addChildToFront(source);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(params).addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params).addChildToFront(source);	  thisTypeNode.setParameters(params).addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
707	[BUG]  [BUGGY]  thisTypeNode.setParameters(params).addChildToFront(registry);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(params).addChildToFront(registry);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params).addChildToFront(registry);	  thisTypeNode.setParameters(params).addChildToFront(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
708	[BUG]  [BUGGY]  thisTypeNode.setParameters(params),  params.addChildToFront(thisTypeNode);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setParameters(params),  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setParameters(params),  params.addChildToFront(thisTypeNode);	  thisTypeNode.setParameters(params).addChildToFront(thisTypeNode);    	non-compiled	[CE]  ';'  expected	8	None	replace
709	[BUG]  [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getReturnType());  [CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  thisTypeNode  =  Node.newString(Token.NAME,  getReturnType());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  thisTypeNode  =  Node.newString(Token.NAME,  getReturnType());	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    timeout    	non-compiled	[CE]  variable  thisTypeNode  is  already  defined  in  method  getPropertyType(String)	96	None	replace
710	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	121	1	add
711	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	121	1	add
712	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	121	1	add
713	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	121	1	add
714	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	121	1	add
715	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	121	1	add
716	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	121	1	add
717	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	121	1	add
718	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	121	1	add
719	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	121	1	add
720	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	121	1	add
721	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	121	1	add
722	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	121	1	add
723	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(true);        }        if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	121	1	add
724	[BUG]  [BUGGY]  n.addChildToBack(thisTypeNode);  n.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.addChildToBack(thisTypeNode);  n.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.addChildToBack(thisTypeNode);  n.addChildToBack(thisTypeNode);	  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	19	None	replace
725	[BUG]  [BUGGY]  n.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.addChildToBack(thisTypeNode);  params.addChildToBack(thisTypeNode);	  params.addChildToBack(thisTypeNode);    params.addChildToBack(thisTypeNode);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	19	None	replace
726	[BUG]  [BUGGY]  params.addChildToFront(sourceNode,  thisTypeNode,  thisTypeNode);  [CE]  cannot  find  symbol  sourceNode  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(sourceNode,  thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(sourceNode,  thisTypeNode,  thisTypeNode);	  params.addChildToFront(lastParam,    thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  sourceNode	152	None	replace
727	[BUG]  [BUGGY]  params.addChildToFront(sourceName,  thisTypeNode,  thisTypeNode);  [CE]  cannot  find  symbol  sourceName  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(sourceName,  thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(sourceName,  thisTypeNode,  thisTypeNode);	  params.addChildToFront(lastParam,    thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  sourceName	152	None	replace
728	[BUG]  [BUGGY]  params.addChildToFront(params,  thisTypeNode,  thisTypeNode);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(params,  thisTypeNode,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(params,  thisTypeNode,  thisTypeNode);	  params.addChildToFront(lastParam,    thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	152	None	replace
729	[BUG]  [BUGGY]  n.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [CE]  cannot  find  symbol  n  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);	  params.addChildToFront(source);    params.addChildToFront(source);    thisTypeNode.setOptionalArg(true);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	46	None	replace
730	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	236	1	add
731	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	236	1	add
732	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	236	1	add
733	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	236	1	add
734	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	236	1	add
735	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	236	1	add
736	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setJavaType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	non-compiled	[CE]  cannot  find  symbol	236	None	add
737	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	236	1	add
738	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	236	1	add
739	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()).build(),  source);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()).build(),  source);	  timeout    	non-compiled	[CE]  cannot  find  symbol	236	None	add
740	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	236	1	add
741	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.setOptionalArg(false);  params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.setOptionalArg(false);    params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	236	1	add
742	[BUG]  [BUGGY]  params.addChildAfter(lastParam,  thisTypeNode);  [CE]  cannot  find  symbol  lastParam  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(lastParam,  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(lastParam,  thisTypeNode);	  params.addChildAfter(source,    thisTypeNode);    timeout    	non-compiled	[CE]  cannot  find  symbol  lastParam	67	None	replace
743	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	99	1	add
744	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	99	1	add
745	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	99	1	add
746	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	99	1	add
747	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	99	1	add
748	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	99	1	add
749	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	99	1	add
750	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	99	1	add
751	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	99	1	add
752	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	99	1	add
753	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }	  timeout    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	99	None	add
754	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	99	1	add
755	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	99	1	add
756	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        params.addChildToFront(thisTypeNode);        }        if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  ParamBuilder  builder  =  new  FunctionBuilder(registry).withReturnType(getReturnType()).build(),  source);  }	  timeout    	non-compiled	[CE]  ';'  expected	99	None	add
757	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  params.removeChild(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(source);    params.removeChild(source);	  timeout    	compilable	timeout	91	1	add
758	[BUG]  [BUGGY]  params.removeChild(source);  params.removeChild(source);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  params.removeChild(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);    params.removeChild(source);	  timeout    	compilable	timeout	91	1	add
759	[BUG]  [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	91	None	add
760	[BUG]  [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);	  timeout    	non-compiled	[CE]  ';'  expected	91	None	add
761	[BUG]  [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();	  timeout    	non-compiled	[CE]  cannot  find  symbol	91	None	add
762	[BUG]  [BUGGY]  params.removeChild(source);  Node  params.removeChild(source);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  Node  params.removeChild(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);    Node  params.removeChild(source);	  timeout    	non-compiled	[CE]  ';'  expected	91	None	add
763	[BUG]  [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(source));  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(source));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);    ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(source));	  timeout    	non-compiled	[CE]  cannot  find  symbol	91	None	add
764	[BUG]  [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(source);  [CE]  ')'  expected  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(source);    ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params.removeChild(source);	  timeout    	non-compiled	[CE]  ')'  expected	91	None	add
765	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  new  Node(Token.NAME));  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  new  Node(Token.NAME));	  params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    timeout    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	77	None	replace
766	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(source,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(source,  new  Node(Token.NAME));	  params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    timeout    	compilable	timeout	77	1	replace
767	[BUG]  [BUGGY]  params.addChildAfter(source,  new  Node(Token.NAME));  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(source,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(source,  new  Node(Token.NAME));	  params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    timeout    	compilable	timeout	77	1	replace
768	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,  new  Node(Token.NAME,  thisTypeNode));	  params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    timeout    	compilable	timeout	77	1	replace
769	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME,  thisTypeNode));  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  new  Node(Token.NAME,  thisTypeNode));	  params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    timeout    	compilable	timeout	77	1	replace
770	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME),  thisTypeNode);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  new  Node(Token.NAME),  thisTypeNode);	  params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    timeout    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	77	None	replace
771	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME,  getTypeOfThis()));  [CE]  no  suitable  constructor  found  for  Node(int,ObjectType)  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME,  getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  new  Node(Token.NAME,  getTypeOfThis()));	  params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,ObjectType)	77	None	replace
772	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode,  new  Node(Token.NAME));  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode,  new  Node(Token.NAME));	  params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    timeout    	non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	77	None	replace
773	[BUG]  [BUGGY]  params.addChildToFront(source,  thisTypeNode,  thisTypeNode,  typeOfThis);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source,  thisTypeNode,  thisTypeNode,  typeOfThis);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source,  thisTypeNode,  thisTypeNode,  typeOfThis);	  params.addChildToFront(source,    thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	55	None	replace
774	[BUG]  [BUGGY]  params.addChildToFront(source,  thisTypeNode,  thisTypeNode,  name);  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source,  thisTypeNode,  thisTypeNode,  name);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source,  thisTypeNode,  thisTypeNode,  name);	  params.addChildToFront(source,    thisTypeNode,    thisTypeNode);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	55	None	replace
775	[BUG]  [BUGGY]  node.removeChild(params);  params.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  node  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  node.removeChild(params);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	node.removeChild(params);  params.addChildToBack(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.removeChild(params);    params.addChildToBack(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  node	224	None	replace
776	[BUG]  [BUGGY]  n.removeChild(params);  params.addChildToBack(thisTypeNode);  [CE]  cannot  find  symbol  n  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  n.removeChild(params);  params.addChildToBack(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	n.removeChild(params);  params.addChildToBack(thisTypeNode);	  params.addChildToBack(thisTypeNode);    n.removeChild(params);    params.addChildToBack(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  n	224	None	replace
777	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.removeChild(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToBack(thisTypeNode);  thisTypeNode.removeChild(params);	  params.addChildToBack(thisTypeNode);    n.removeChild(params);    params.addChildToBack(thisTypeNode);    	compilable	timeout	224	1	replace
778	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.removeChild(params);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  thisTypeNode.removeChild(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);  thisTypeNode.removeChild(params);	  params.addChildToBack(thisTypeNode);    n.removeChild(params);    params.addChildToBack(thisTypeNode);    	compilable	timeout	224	1	replace
779	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  thisTypeNode.cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params  =  thisTypeNode.cloneTree();	  params    =    params.cloneTree();    timeout    	compilable	timeout	164	1	replace
780	[BUG]  [BUGGY]  params  =  thisTypeNode.cloneTree();  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  thisTypeNode.cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  thisTypeNode.cloneTree();	  params    =    params.cloneTree();    timeout    	compilable	timeout	164	1	replace
781	[BUG]  [BUGGY]  params  =  n.cloneTree();  [CE]  cannot  find  symbol  n  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  n.cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  n.cloneTree();	  params    =    params.cloneTree();    timeout    	non-compiled	[CE]  cannot  find  symbol  n	164	None	replace
782	[BUG]  [BUGGY]  params  =  new  FunctionBuilder(registry).withParamsNode(params.cloneTree());  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  FunctionBuilder(registry).withParamsNode(params.cloneTree());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  FunctionBuilder(registry).withParamsNode(params.cloneTree());	  params    =    params.cloneTree();    timeout    	non-compiled	[CE]  incompatible  types	164	None	replace
783	[BUG]  [BUGGY]  params  =  new  FunctionBuilder(registry).withParamsNode(params.cloneTree(),  thisTypeNode);  [CE]  method  withParamsNode  in  class  FunctionBuilder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  FunctionBuilder(registry).withParamsNode(params.cloneTree(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  FunctionBuilder(registry).withParamsNode(params.cloneTree(),  thisTypeNode);	  params    =    params.cloneTree();    timeout    	non-compiled	[CE]  method  withParamsNode  in  class  FunctionBuilder  cannot  be  applied  to  given  types;	164	None	replace
784	[BUG]  [BUGGY]  params  =  new  FunctionBuilder(registry).withParamsNode(params.cloneTree(),  source);  [CE]  method  withParamsNode  in  class  FunctionBuilder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  FunctionBuilder(registry).withParamsNode(params.cloneTree(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  FunctionBuilder(registry).withParamsNode(params.cloneTree(),  source);	  params    =    params.cloneTree();    timeout    	non-compiled	[CE]  method  withParamsNode  in  class  FunctionBuilder  cannot  be  applied  to  given  types;	164	None	replace
785	[BUG]  [BUGGY]  params  =  new  FunctionBuilder(registry).withParamsNode(params));  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  FunctionBuilder(registry).withParamsNode(params));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  FunctionBuilder(registry).withParamsNode(params));	  params    =    params.cloneTree();    timeout    	non-compiled	[CE]  ';'  expected	164	None	replace
786	[BUG]  [BUGGY]  params  =  thisTypeNode.getParams();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  thisTypeNode.getParams();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  thisTypeNode.getParams();	  params    =    params.cloneTree();    timeout    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
787	[BUG]  [BUGGY]  if(params!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    timeout    	non-compiled	[CE]  	81	None	replace
788	[BUG]  [BUGGY]  if(params!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    timeout    	non-compiled	[CE]  	81	None	replace
789	[BUG]  [BUGGY]  if(params!=  null)  {  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=  null)  {  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=  null)  {  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(true);    }    timeout    	non-compiled	[CE]  	81	None	replace
790	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.removeChild(params);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  thisTypeNode.removeChild(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  thisTypeNode.removeChild(params);	  params.removeChild(thisTypeNode);    Node    params.removeChild(thisTypeNode);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	110	None	replace
791	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));	  timeout    	compilable	timeout	76	1	add
792	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));	  timeout    	compilable	timeout	76	1	add
793	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  Node  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  Node  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    Node  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
794	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildAfter(params,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    params.addChildAfter(params,  new  Node(Token.NAME));	  timeout    	compilable	timeout	76	1	add
795	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildAfter(params,  new  Node(Token.NAME));  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildAfter(params,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    params.addChildAfter(params,  new  Node(Token.NAME));	  timeout    	compilable	timeout	76	1	add
796	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildBefore(thisTypeNode,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    params.addChildBefore(thisTypeNode,  new  Node(Token.NAME));	  timeout    	compilable	timeout	76	1	add
797	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildBefore(thisTypeNode,  new  Node(Token.NAME));  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildBefore(thisTypeNode,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    params.addChildBefore(thisTypeNode,  new  Node(Token.NAME));	  timeout    	compilable	timeout	76	1	add
798	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildAfter(paramsNode,  new  Node(Token.NAME));  [CE]  cannot  find  symbol  paramsNode  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildAfter(paramsNode,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    params.addChildAfter(paramsNode,  new  Node(Token.NAME));	  timeout    	non-compiled	[CE]  cannot  find  symbol  paramsNode	76	None	add
799	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildAfter(newTypeNode,  new  Node(Token.NAME));  [CE]  cannot  find  symbol  newTypeNode  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  new  Node(Token.NAME));  params.addChildAfter(newTypeNode,  new  Node(Token.NAME));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,    new    Node(Token.NAME));    params.addChildAfter(newTypeNode,  new  Node(Token.NAME));	  timeout    	non-compiled	[CE]  cannot  find  symbol  newTypeNode	76	None	add
800	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	64	1	add
801	[BUG]  [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);	  timeout    	compilable	timeout	64	1	add
802	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	64	1	add
803	[BUG]  [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	64	1	add
804	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	64	1	add
805	[BUG]  [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	64	1	add
806	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	64	1	add
807	[BUG]  [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	64	1	add
808	[BUG]  [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  Node  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  Node  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    Node  params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	non-compiled	[CE]  ';'  expected	64	None	add
809	[BUG]  [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  Node  params.addChildToFront(thisTypeNode);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  Node  params.addChildToFront(thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    Node  params.addChildToFront(thisTypeNode);	  timeout    	non-compiled	[CE]  ';'  expected	64	None	add
810	[BUG]  [BUGGY]  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	64	1	add
811	[BUG]  [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]          params.addChildToFront(thisTypeNode);  thisTypeNode.setOptionalArg(false);  params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	                params.addChildToFront(thisTypeNode);    thisTypeNode.setOptionalArg(false);    params.addChildToBack(thisTypeNode);  thisTypeNode.setOptionalArg(false);	  timeout    	compilable	timeout	64	1	add
812	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildAfter(thisTypeNode,  params);	  params.addChildAfter(params,    thisTypeNode);    timeout    	compilable	timeout	74	1	replace
813	[BUG]  [BUGGY]  params.addChildAfter(thisTypeNode,  params);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildAfter(thisTypeNode,  params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildAfter(thisTypeNode,  params);	  params.addChildAfter(params,    thisTypeNode);    timeout    	compilable	timeout	74	1	replace
814	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode);  Node  params.addChildToFront(source);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode);  Node  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode);  Node  params.addChildToFront(source);	  params.addChildToFront(source);    Node    params.addChildToFront(source);    	non-compiled	[CE]  ';'  expected	43	None	replace
815	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode);  Node  params  =  params.addChildToFront(source);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode);  Node  params  =  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode);  Node  params  =  params.addChildToFront(source);	  params.addChildToFront(source);    Node    params.addChildToFront(source);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	43	None	replace
816	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(params);	  params.addChildToFront(source);    Node    params.addChildToFront(source);    	compilable	timeout	43	1	replace
817	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(params);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode);  thisTypeNode.addChildToFront(params);	  params.addChildToFront(source);    Node    params.addChildToFront(source);    	compilable	timeout	43	1	replace
818	[BUG]  [BUGGY]  Node  params  =  lastParam.cloneTree();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  lastParam.cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  lastParam.cloneTree();	  Node    params    =    params.cloneTree();    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	129	None	replace
819	[BUG]  [BUGGY]  Node  params  =  n.cloneTree();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  n.cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  n.cloneTree();	  Node    params    =    params.cloneTree();    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	129	None	replace
820	[BUG]  [BUGGY]  Node  params  =  source.cloneTree();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  source.cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  source.cloneTree();	  Node    params    =    params.cloneTree();    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	129	None	replace
821	[BUG]  [BUGGY]  Node  params  =  nodes.cloneTree();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  nodes.cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  nodes.cloneTree();	  Node    params    =    params.cloneTree();    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	129	None	replace
822	[BUG]  [BUGGY]  Node  params  =  name.cloneTree();  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  name.cloneTree();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  name.cloneTree();	  Node    params    =    params.cloneTree();    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	129	None	replace
823	[BUG]  [BUGGY]  Node  params  =  registry.createParameterType(getTypeOfThis());  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  registry.createParameterType(getTypeOfThis());  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  registry.createParameterType(getTypeOfThis());	  Node    params    =    params.cloneTree();    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	129	None	replace
824	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	37	1	add
825	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	37	1	add
826	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);	  timeout    	compilable	timeout	37	1	add
827	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  params.addChildToFront(source);  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);	  timeout    	compilable	timeout	37	1	add
828	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	37	1	add
829	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));	  timeout    	compilable	timeout	37	1	add
830	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  ParamBuilder  builder  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  ParamBuilder  builder  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    params.addChildToFront(source);  ParamBuilder  builder  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	37	None	add
831	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  ParamBuilder  builder  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  ParamBuilder  builder  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    params.addChildToFront(source);  ParamBuilder  builder  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  thisTypeNode);	  timeout    	non-compiled	[CE]  ';'  expected	37	None	add
832	[BUG]  [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  ParamBuilder  builder  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    params.addChildToFront(source);  params.addChildToFront(source);  ParamBuilder  builder  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        params.addChildToFront(source);    params.addChildToFront(source);  ParamBuilder  builder  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();	  timeout    	non-compiled	[CE]  cannot  find  symbol	37	None	add
833	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));	  timeout    	compilable	timeout	250	1	add
834	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));	  timeout    	compilable	timeout	250	1	add
835	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  Node  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  Node  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    Node  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));	  timeout    	non-compiled	[CE]  ';'  expected	250	None	add
836	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));	  timeout    	compilable	timeout	250	1	add
837	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  timeout  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    Node  lastParam  =  Node.newString(Token.NAME, "thisType ");  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));	  timeout    	compilable	timeout	250	1	add
838	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  node.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [CE]  cannot  find  symbol  node  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  node.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    node.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));	  timeout    	non-compiled	[CE]  cannot  find  symbol  node	250	None	add
839	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  n.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [CE]  cannot  find  symbol  n  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  n.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    n.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));	  timeout    	non-compiled	[CE]  cannot  find  symbol  n	250	None	add
840	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  if(params.hasChildren())  {  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  if(params.hasChildren())  {  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  }	  timeout    	compilable	timeout	250	1	add
841	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  if(params.hasChildren())  {  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  if(params.hasChildren())  {  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  if(params.hasChildren())  {  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  }	  timeout    	compilable	timeout	250	1	add
842	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  if(params.hasChildren())  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  }  [CE]  method  defineDeclaredProperty  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  if(params.hasChildren())  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  if(params.hasChildren())  {  defineDeclaredProperty(name,  new  FunctionBuilder(registry).withReturnType(getReturnType()),  source);  }	  timeout    	non-compiled	[CE]  method  defineDeclaredProperty  in  class  ObjectType  cannot  be  applied  to  given  types;	250	None	add
843	[BUG]  [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  params.addChildToFront(new  Node(Token.FUNCTION,  new  Node(Token.FUNCTION));  [CE]  ')'  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(new  Node(Token.FUNCTION,  thisTypeNode));  params.addChildToFront(new  Node(Token.FUNCTION,  new  Node(Token.FUNCTION));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(new    Node(Token.FUNCTION,    thisTypeNode));    params.addChildToFront(new  Node(Token.FUNCTION,  new  Node(Token.FUNCTION));	  timeout    	non-compiled	[CE]  ')'  expected	250	None	add
844	[BUG]  [BUGGY]  params  =  new  ParamBuilder(registry).withParamsNode(thisTypeNode).build(),  source);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  ParamBuilder(registry).withParamsNode(thisTypeNode).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  ParamBuilder(registry).withParamsNode(thisTypeNode).build(),  source);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withParamsNode(params).build(),    source);    	non-compiled	[CE]  ';'  expected	27	None	replace
845	[BUG]  [BUGGY]  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withParamsNode(params).build(),    source);    	non-compiled	[CE]  ';'  expected	27	None	replace
846	[BUG]  [BUGGY]  params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(source);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withParamsNode(params).build(),    source);    	non-compiled	[CE]  ';'  expected	27	None	replace
847	[BUG]  [BUGGY]  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  source);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  source);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withParamsNode(params).build(),    source);    	non-compiled	[CE]  ';'  expected	27	None	replace
848	[BUG]  [BUGGY]  params.addChildToBack(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToBack(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToBack(thisTypeNode);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withParamsNode(params).build(),    source);    	non-compiled	[CE]  ';'  expected	27	None	replace
849	[BUG]  [BUGGY]  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params).build(),  thisTypeNode);	  params.addChildToBack(thisTypeNode);    ParamBuilder    params    =    new    ParamBuilder(registry).withParamsNode(params).build(),    source);    	non-compiled	[CE]  ';'  expected	27	None	replace
850	[BUG]  [BUGGY]  if(thisTypeNode!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(thisTypeNode!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(thisTypeNode!=  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    If(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    	non-compiled	[CE]  	16	None	replace
851	[BUG]  [BUGGY]  if(params  ==  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params  ==  null)  {  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    If(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    	non-compiled	[CE]  	16	None	replace
852	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	220	1	add
853	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	220	1	add
854	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	220	1	add
855	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	220	1	add
856	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	220	1	add
857	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	220	1	add
858	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildAfter(thisTypeNode);  }	  timeout    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	220	None	add
859	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildIntoFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildIntoFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildIntoFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	220	None	add
860	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	220	1	add
861	[BUG]  [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  params.addChildToFront(thisTypeNode);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params    ==    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    params.addChildToFront(thisTypeNode);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	220	1	add
862	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.cloneTree();  thisTypeNode.setVarArgs(true);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  thisTypeNode.cloneTree();  thisTypeNode.setVarArgs(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  thisTypeNode.cloneTree();  thisTypeNode.setVarArgs(true);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(true);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	197	None	replace
863	[BUG]  [BUGGY]  Node  params  =  lastParam.cloneTree();  thisTypeNode.setVarArgs(true);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  lastParam.cloneTree();  thisTypeNode.setVarArgs(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  lastParam.cloneTree();  thisTypeNode.setVarArgs(true);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(true);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	197	None	replace
864	[BUG]  [BUGGY]  Node  params  =  n.cloneTree();  thisTypeNode.setVarArgs(true);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  n.cloneTree();  thisTypeNode.setVarArgs(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  n.cloneTree();  thisTypeNode.setVarArgs(true);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(true);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	197	None	replace
865	[BUG]  [BUGGY]  Node  params  =  nodes.cloneTree();  thisTypeNode.setVarArgs(true);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  nodes.cloneTree();  thisTypeNode.setVarArgs(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  nodes.cloneTree();  thisTypeNode.setVarArgs(true);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(true);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	197	None	replace
866	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setVarArgs(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	thisTypeNode.setVarArgs(true);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(true);    	compilable	timeout	197	1	replace
867	[BUG]  [BUGGY]  thisTypeNode.setVarArgs(true);  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  thisTypeNode.setVarArgs(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	thisTypeNode.setVarArgs(true);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(true);    	compilable	timeout	197	1	replace
868	[BUG]  [BUGGY]  Node  params  =  null;  thisTypeNode.setVarArgs(true);  [CE]  variable  params  is  already  defined  in  method  getPropertyType(String)  [FE]                                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  Node  params  =  null;  thisTypeNode.setVarArgs(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	Node  params  =  null;  thisTypeNode.setVarArgs(true);	  Node    params    =    params.cloneTree();    thisTypeNode.setVarArgs(true);    	non-compiled	[CE]  variable  params  is  already  defined  in  method  getPropertyType(String)	197	None	replace
869	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.addChildToFront(source);	  timeout    	compilable	timeout	233	1	add
870	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.addChildToFront(source);  timeout  [FE]              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.addChildToFront(source);	  timeout    	compilable	timeout	233	1	add
871	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	233	1	add
872	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToFront(source);  timeout  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.addChildToFront(source);	  timeout    	compilable	timeout	233	1	add
873	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.addChildAfter(source);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.addChildAfter(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.addChildAfter(source);	  timeout    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	233	None	add
874	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildIntoFront(source);  thisTypeNode.addChildToFront(source);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildIntoFront(source);  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.addChildIntoFront(source);  thisTypeNode.addChildToFront(source);	  timeout    	non-compiled	[CE]  cannot  find  symbol	233	None	add
875	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.addChildIntoFront(source);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToFront(source);  thisTypeNode.addChildIntoFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.addChildToFront(source);  thisTypeNode.addChildIntoFront(source);	  timeout    	non-compiled	[CE]  cannot  find  symbol	233	None	add
876	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToBack(source);  thisTypeNode.addChildToBack(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.addChildToBack(source);  thisTypeNode.addChildToBack(source);	  timeout    	compilable	timeout	233	1	add
877	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToBack(source);  thisTypeNode.addChildToBack(source);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildToBack(source);  thisTypeNode.addChildToBack(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.addChildToBack(source);  thisTypeNode.addChildToBack(source);	  timeout    	compilable	timeout	233	1	add
878	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildAfter(source);  thisTypeNode.addChildAfter(source);  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.addChildAfter(source);  thisTypeNode.addChildAfter(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.addChildAfter(source);  thisTypeNode.addChildAfter(source);	  timeout    	non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	233	None	add
879	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.removeChild(source);  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.removeChild(source);  thisTypeNode.addChildToFront(source);	  timeout    	compilable	timeout	233	1	add
880	[BUG]  [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.removeChild(source);  thisTypeNode.addChildToFront(source);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(source);    thisTypeNode.addChildToFront(source);  params.removeChild(source);  thisTypeNode.addChildToFront(source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(source);        thisTypeNode.addChildToFront(source);    params.removeChild(source);  thisTypeNode.addChildToFront(source);	  timeout    	compilable	timeout	233	1	add
881	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	88	1	add
882	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	88	1	add
883	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	88	1	add
884	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	88	1	add
885	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	88	1	add
886	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	88	1	add
887	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	88	1	add
888	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setJSType(registry.createOptionalNullableType(getTypeOfThis()));  }	  timeout    	compilable	timeout	88	1	add
889	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  thisTypeNode.setOptionalArg(true);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.setOptionalArg(true);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	88	1	add
890	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  thisTypeNode.setOptionalArg(true);  }  else  {  params.addChildToFront(thisTypeNode);  }  timeout  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  thisTypeNode.setOptionalArg(true);  }  else  {  params.addChildToFront(thisTypeNode);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.setOptionalArg(true);  }  else  {  params.addChildToFront(thisTypeNode);  }	  timeout    	compilable	timeout	88	1	add
891	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	88	1	add
892	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(true);  }	  timeout    	compilable	timeout	88	1	add
893	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	88	1	add
894	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	88	1	add
895	[BUG]  [BUGGY]  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	88	1	add
896	[BUG]  [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  if(params!=    null)    {    params.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params!=  null)  {  thisTypeNode.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	if(params!=        null)        {        params.addChildToFront(thisTypeNode);        }        else        {        thisTypeNode.setOptionalArg(false);        }        if(params!=    null)    {    thisTypeNode.addChildToFront(thisTypeNode);    }    else    {    thisTypeNode.setOptionalArg(false);    }    if(params  ==  null)  {  params.addChildToFront(thisTypeNode);  }  else  {  thisTypeNode.setOptionalArg(false);  }	  timeout    	compilable	timeout	88	1	add
897	[BUG]  [BUGGY]  params.addChildToFront(thisTypeNode,  new  Node(Token.NAME,  thisTypeNode));  [CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.addChildToFront(thisTypeNode,  new  Node(Token.NAME,  thisTypeNode));  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.addChildToFront(thisTypeNode,  new  Node(Token.NAME,  thisTypeNode));	  params.addChildToFront(thisTypeNode,    lastParam);    	non-compiled	[CE]  method  addChildToFront  in  class  Node  cannot  be  applied  to  given  types;	205	None	replace
898	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(params);  params.removeChild(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(params);    params.removeChild(params);	  timeout    	compilable	timeout	93	1	add
899	[BUG]  [BUGGY]  params.removeChild(params);  params.removeChild(params);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(params);  params.removeChild(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(params);    params.removeChild(params);	  timeout    	compilable	timeout	93	1	add
900	[BUG]  [BUGGY]  params.removeChild(params);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(params);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(params);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build(),  source);	  timeout    	non-compiled	[CE]  ';'  expected	93	None	add
901	[BUG]  [BUGGY]  params.removeChild(params);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(params);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(params);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()).build();	  timeout    	non-compiled	[CE]  cannot  find  symbol	93	None	add
902	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(params);  params.removeChild(params);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	params.removeChild(params);    params.removeChild(params);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	93	1	add
903	[BUG]  [BUGGY]  params.removeChild(params);  params.removeChild(params);  thisTypeNode.setOptionalArg(true);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(params);  params.removeChild(params);  thisTypeNode.setOptionalArg(true);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(params);    params.removeChild(params);  thisTypeNode.setOptionalArg(true);	  timeout    	compilable	timeout	93	1	add
904	[BUG]  [BUGGY]  params.removeChild(params);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(params);  ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(params);    ParamBuilder  params  =  new  ParamBuilder(registry).withParamsNode(params);	  timeout    	non-compiled	[CE]  cannot  find  symbol	93	None	add
905	[BUG]  [BUGGY]  params.removeChild(params);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  thisTypeNode.setJSType(  registry.createOptionalNullableType(getTypeOfThis()));      [BUGGY]  params.removeChild(params);  ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);  [BUGGY]      thisTypeNode.setOptionalArg(true);  defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withParamsNode(params)  .withReturnType(getReturnType())  .build(),  source);  }  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	params.removeChild(params);    ParamBuilder  params  =  new  ParamBuilder(registry).withReturnType(getReturnType()),  source);	  timeout    	non-compiled	[CE]  ';'  expected	93	None	add
